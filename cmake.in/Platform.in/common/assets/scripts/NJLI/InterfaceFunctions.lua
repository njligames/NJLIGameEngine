local Interface = require 'NJLI.Interface'

local __interface = Interface()

RegisterCreate("Create", function()
end) 

RegisterDestroy("Destroy", function()
end)





_done__debugging__ = nil
RegisterUpdate("Update", function(timeStep)
    __interface:getDeviceEntity():update(timeStep)
    if _done__debugging__ == nil then _done__debugging__ = false return end
    if not _done__debugging__ then
      require("mobdebug").start()
      _done__debugging__ = true
    end
    for k, v in pairs(Runtime.Update) do v(timeStep) end
end)

RegisterRender("Render", function()
    __interface:getDeviceEntity():render()
end)

RegisterResize("Resize", function(width, height, orientation)
    __interface:getDeviceEntity():resize(width, height, orientation)
end)
RegisterTouchesDown("TouchesDown", function(touches)
    __interface:getDeviceEntity():touchesDown(touches)
end)
RegisterTouchesUp("TouchesUp", function(touches)
    __interface:getDeviceEntity():touchesUp(touches)
end)
RegisterTouchesMove("TouchesMove", function(touches)
    __interface:getDeviceEntity():touchesMove(touches)
end)
RegisterTouchesCancelled("TouchesCancelled", function(touches)
    __interface:getDeviceEntity():touchesCancelled(touches)
end)
RegisterTouchDown("TouchDown", function(touch)
    __interface:getDeviceEntity():touchDown(touch)
end)
RegisterTouchUp("TouchUp", function(touch)
    __interface:getDeviceEntity():touchUp(touch)
end)
RegisterTouchMove("TouchMove", function(touch)
    __interface:getDeviceEntity():touchMove(touch)
end)
RegisterTouchCancelled("TouchCancelled", function(touches)
    __interface:getDeviceEntity():touchCancelled(touches)
end)
RegisterMouseDown("MouseDown", function(mouse)
    __interface:getDeviceEntity():mouseDown(mouse)
end)
RegisterMouseUp("MouseUp", function(mouse)
    __interface:getDeviceEntity():mouseUp(mouse)
end)
RegisterMouseMove("MouseMove", function(mouse)
    __interface:getDeviceEntity():mouseMove(mouse)
end)
RegisterWorldEnterState("WorldEnterState", function()
  __interface:getStateMachine():_worldEnterState()
end)
RegisterWorldUpdateState("WorldUpdateState", function(timeStep)
  __interface:getStateMachine():_worldUpdateState(timeStep)
end)
RegisterWorldExitState("WorldExitState", function()
  __interface:getStateMachine():_worldExitState()
end)
RegisterWorldOnMessage("WorldOnMessage", function()
    __interface:getStateMachine():_worldOnMessage(message)
end)
RegisterWorldKeyboardShow("WorldKeyboardShow", function()
    __interface:getStateMachine():_worldKeyboardShow()
end)
RegisterWorldKeyboardCancel("WorldKeyboardCancel", function()
    __interface:getStateMachine():_worldKeyboardCancel()
end)
RegisterWorldKeyboardReturn("WorldKeyboardReturn", function(text)
    __interface:getStateMachine():_worldKeyboardReturn(text)
end)
RegisterWorldReceivedMemoryWarning("WorldReceivedMemoryWarning", function()
    __interface:getStateMachine():_worldReceivedMemoryWarning()
end)
RegisterWorldGamePause("WorldGamePause", function()
    __interface:getStateMachine():_worldGamePause()
end)
RegisterWorldGameUnPause("WorldGameUnPause", function()
    __interface:getStateMachine():_worldGameUnPause()
end)
RegisterWorldRenderHUD("WorldRenderHUD", function()
    __interface:getStateMachine():_worldRenderHUD()
end)
RegisterWorldTouchesDown("WorldTouchesDown", function(touches)
    __interface:getStateMachine():_worldTouchesDown(touches)
end)
RegisterWorldTouchesUp("WorldTouchesUp", function(touches)
    __interface:getStateMachine():_worldTouchesUp(touches)
end)
RegisterWorldTouchesMove("WorldTouchesMove", function(touches)
    __interface:getStateMachine():_worldTouchesMove(touches)
end)
RegisterWorldTouchesCancelled("WorldTouchesCancelled", function(touches)
    __interface:getStateMachine():_worldTouchesCancelled(touches)
end)
RegisterWorldTouchDown("WorldTouchDown", function(touch)
    __interface:getStateMachine():_worldTouchDown(touch)
end)
RegisterWorldTouchUp("WorldTouchUp", function(touch)
    __interface:getStateMachine():_worldTouchUp(touch)
end)
RegisterWorldTouchMove("WorldTouchMove", function(touch)
    __interface:getStateMachine():_worldTouchMove(touch)
end)
RegisterWorldTouchCancelled("WorldTouchCancelled", function(touch)
    __interface:getStateMachine():_worldTouchCancelled(touch)
end)
RegisterWorldMouseDown("WorldMouseDown", function(mouse)
    __interface:getStateMachine():_worldMouseDown(mouse)
end)
RegisterWorldMouseUp("WorldMouseUp", function(mouse)
    __interface:getStateMachine():_worldMouseUp(mouse)
end)
RegisterWorldMouseMove("WorldMouseMove", function(mouse)
    __interface:getStateMachine():_worldMouseMove(mouse)
end)
RegisterWorldWillResignActive("WorldWillResignActive", function()
    __interface:getStateMachine():_worldWillResignActive()
end)
RegisterWorldDidBecomeActive("WorldDidBecomeActive", function()
    __interface:getStateMachine():_worldDidBecomeActive()
end)
RegisterWorldDidEnterBackground("WorldDidEnterBackground", function()
    __interface:getStateMachine():_worldDidEnterBackground()
end)
RegisterWorldWillEnterForeground("WorldWillEnterForeground", function()
    __interface:getStateMachine():_worldWillEnterForeground()
end)
RegisterWorldWillTerminate("WorldWillTerminate", function()
    __interface:getStateMachine():_worldWillTerminate()
end)
RegisterWorldInterrupt("WorldInterrupt", function()
    __interface:getStateMachine():_worldInterrupt()
end)
RegisterWorldResumeInterrupt("WorldResumeInterrupt", function()
    __interface:getStateMachine():_worldResumeInterrupt()
end)
RegisterSceneEnterState("SceneEnterState", function(scene)
    __interface:getStateMachine():_sceneEnterState(scene)
end)
RegisterSceneUpdateState("SceneUpdateState", function(scene, timeStep)
    __interface:getStateMachine():_sceneUpdateState(scene, timeStep)
end)
RegisterSceneExitState("SceneExitState", function(scene)
    __interface:getStateMachine():_sceneExitState(scene)
end)
RegisterSceneOnMessage("SceneOnMessage", function(scene, message)
    __interface:getStateMachine():_sceneOnMessage(scene, message)
end)
RegisterSceneKeyboardShow("SceneKeyboardShow", function(scene)
    __interface:getStateMachine():_sceneKeyboardShow(scene)
end)
RegisterSceneKeyboardCancel("SceneKeyboardCancel", function(scene)
    __interface:getStateMachine():_sceneKeyboardCancel(scene)
end)
RegisterSceneKeyboardReturn("SceneKeyboardReturn", function(scene, text)
    __interface:getStateMachine():_sceneKeyboardReturn(scene, text)
end)
RegisterSceneRenderHUD("SceneRenderHUD", function(scene)
    __interface:getStateMachine():_sceneRenderHUD(scene)
end)
RegisterSceneGamePause("SceneGamePause", function(scene)
    __interface:getStateMachine():_sceneGamePause(scene)
end)
RegisterSceneGameUnPause("SceneGameUnPause", function(scene)
    __interface:getStateMachine():_sceneGameUnPause(scene)
end)
RegisterSceneTouchesDown("SceneTouchesDown", function(scene, touches)
    __interface:getStateMachine():_sceneTouchesDown(scene, touches)
end)
RegisterSceneTouchesUp("SceneTouchesUp", function(scene, touches)
    __interface:getStateMachine():_sceneTouchesUp(scene, touches)
end)
RegisterSceneTouchesMove("SceneTouchesMove", function(scene, touches)
    __interface:getStateMachine():_sceneTouchesMove(scene, touches)
end)
RegisterSceneTouchesCancelled("SceneTouchesCancelled", function(scene, touches)
    __interface:getStateMachine():_sceneTouchesCancelled(scene, touches)
end)
RegisterSceneTouchDown("SceneTouchDown", function(scene, touch)
    __interface:getStateMachine():_sceneTouchDown(scene, touch)
end)
RegisterSceneTouchUp("SceneTouchUp", function(scene, touch)
    __interface:getStateMachine():_sceneTouchUp(scene, touch)
end)
RegisterSceneTouchMove("SceneTouchMove", function(scene, touch)
    __interface:getStateMachine():_sceneTouchMove(scene, touch)
end)
RegisterSceneTouchCancelled("SceneTouchCancelled", function(scene, touch)
    __interface:getStateMachine():_sceneTouchCancelled(scene, touch)
end)
RegisterSceneMouseDown("SceneMouseDown", function(scene, mouse)
    __interface:getStateMachine():_sceneMouseDown(scene, mouse)
end)
RegisterSceneMouseUp("SceneMouseUp", function(scene, mouse)
    __interface:getStateMachine():_sceneMouseUp(scene, mouse)
end)
RegisterSceneMouseMove("SceneMouseMove", function(scene, mouse)
    __interface:getStateMachine():_sceneMouseMove(scene, mouse)
end)
RegisterSceneReceivedMemoryWarning("SceneReceivedMemoryWarning", function(scene)
    __interface:getStateMachine():_sceneReceivedMemoryWarning(scene)
end)
RegisterSceneWillResignActive("SceneWillResignActive", function(scene)
    __interface:getStateMachine():_sceneWillResignActive(scene)
end)
RegisterSceneDidBecomeActive("SceneDidBecomeActive", function(scene)
    __interface:getStateMachine():_sceneDidBecomeActive(scene)
end)
RegisterSceneDidEnterBackground("SceneDidEnterBackground", function(scene)
    __interface:getStateMachine():_sceneDidEnterBackground(scene)
end)
RegisterSceneWillEnterForeground("SceneWillEnterForeground", function(scene)
    __interface:getStateMachine():_sceneWillEnterForeground(scene)
end)
RegisterSceneWillTerminate("SceneWillTerminate", function(scene)
    __interface:getStateMachine():_sceneWillTerminate(scene)
end)
RegisterSceneInterrupt("SceneInterrupt", function(scene)
    __interface:getStateMachine():_sceneInterrupt(scene)
end)
RegisterSceneResumeInterrupt("SceneResumeInterrupt", function(scene)
    __interface:getStateMachine():_sceneResumeInterrupt(scene)
end)
RegisterNodeEnterState("NodeEnterState", function(node)
    __interface:getStateMachine():_nodeEnterState(node)
end)
RegisterNodeUpdateState("NodeUpdateState", function(node, timeStep)
    __interface:getStateMachine():_nodeUpdateState(node, timeStep)
end)
RegisterNodeExitState("NodeExitState", function(node)
    __interface:getStateMachine():_nodeExitState(node)
end)
RegisterNodeOnMessage("NodeOnMessage", function(node, message)
    __interface:getStateMachine():_nodeOnMessage(node, message)
end)
RegisterNodeCollide("NodeCollide", function(node, otherNode, collisionPoint)
    __interface:getStateMachine():_nodeCollide(node, otherNode, collisionPoint)
end)
RegisterNodeNear("NodeNear", function(node, otherNode)
    __interface:getStateMachine():_nodeNear(node, otherNode)
end)
RegisterNodeActionUpdate("NodeActionUpdate", function(action, timeStep)
    __interface:getStateMachine():_nodeActionUpdate(action, timeStep)
end)
RegisterNodeActionComplete("NodeActionComplete", function(action)
    __interface:getStateMachine():_nodeActionComplete(action)
end)
RegisterNodeRayTouchesDown("NodeRayTouchesDown", function(rayContact)
    __interface:getStateMachine():_rayTouchesDown(rayContact)
end)
RegisterNodeRayTouchesUp("NodeRayTouchesUp", function(rayContact)
    __interface:getStateMachine():_rayTouchesUp(rayContact)
end)
RegisterNodeRayTouchesMove("NodeRayTouchesMove", function(rayContact)
    __interface:getStateMachine():_rayTouchesMove(rayContact)
end)
RegisterNodeRayTouchesCancelled("NodeRayTouchesCancelled", function(rayContact)
    __interface:getStateMachine():_rayTouchesCancelled(rayContact)
end)
RegisterNodeRayTouchesMissed("NodeRayTouchesMissed", function(node)
    __interface:getStateMachine():_rayTouchesMissed(node)
end)
RegisterNodeRayTouchDown("NodeRayTouchDown", function(rayContact)
    __interface:getStateMachine():_rayTouchDown(rayContact)
end)
RegisterNodeRayTouchUp("NodeRayTouchUp", function(rayContact)
    __interface:getStateMachine():_rayTouchUp(rayContact)
end)
RegisterNodeRayTouchMove("NodeRayTouchMove", function(rayContact)
    __interface:getStateMachine():_rayTouchMove(rayContact)
end)
RegisterNodeRayTouchCancelled("NodeRayTouchCancelled", function(rayContact)
    __interface:getStateMachine():_rayTouchCancelled(rayContact)
end)
RegisterNodeRayMouseDown("NodeRayMouseDown", function(rayContact)
    __interface:getStateMachine():_rayMouseDown(rayContact)
end)
RegisterNodeRayMouseUp("NodeRayMouseUp", function(rayContact)
    __interface:getStateMachine():_rayMouseUp(rayContact)
end)
RegisterNodeRayMouseMove("NodeRayMouseMove", function(rayContact)
    __interface:getStateMachine():_rayMouseMove(rayContact)
end)
RegisterNodeRayTouchMissed("NodeRayTouchMissed", function(node)
    __interface:getStateMachine():_rayTouchMissed(node)
end)
RegisterNodeRayMouseMissed("NodeRayMouseMissed", function(node)
    __interface:getStateMachine():_rayMouseMissed(node)
end)
RegisterNodeKeyboardShow("NodeKeyboardShow", function(node)
    __interface:getStateMachine():_nodeKeyboardShow(node)
end)
RegisterNodeKeyboardCancel("NodeKeyboardCancel", function(node)
    __interface:getStateMachine():_nodeKeyboardCancel(node)
end)
RegisterNodeKeyboardReturn("NodeKeyboardReturn", function(node)
    __interface:getStateMachine():_nodeKeyboardReturn(node)
end)
RegisterNodeRenderHUD("NodeRenderHUD", function(node)
    __interface:getStateMachine():_nodeRenderHUD(node)
end)
RegisterNodeGamePause("NodeGamePause", function(node)
    __interface:getStateMachine():_nodeGamePause(node)
end)
RegisterNodeGameUnPause("NodeGameUnPause", function(node)
    __interface:getStateMachine():_nodeGameUnPause(node)
end)
RegisterNodeTouchesDown("NodeTouchesDown", function(node, touches)
    __interface:getStateMachine():_nodeTouchesDown(node, touches)
end)
RegisterNodeTouchesUp("NodeTouchesUp", function(node, touches)
    __interface:getStateMachine():_nodeTouchesUp(node, touches)
end)
RegisterNodeTouchesMove("NodeTouchesMove", function(node, touches)
    __interface:getStateMachine():_nodeTouchesMove(node, touches)
end)
RegisterNodeTouchesCancelled("NodeTouchesCancelled", function(node, touches)
    __interface:getStateMachine():_nodeTouchesCancelled(node, touches)
end)
RegisterNodeTouchDown("NodeTouchDown", function(node, touch)
    __interface:getStateMachine():_nodeTouchDown(node, touch)
end)
RegisterNodeTouchUp("NodeTouchUp", function(node, touch)
    __interface:getStateMachine():_nodeTouchUp(node, touch)
end)
RegisterNodeTouchMove("NodeTouchMove", function(node, touch)
    __interface:getStateMachine():_nodeTouchMove(node, touch)
end)
RegisterNodeTouchCancelled("NodeTouchCancelled", function(node, touches)
    __interface:getStateMachine():_nodeTouchCancelled(node, touches)
end)
RegisterNodeMouseDown("NodeMouseDown", function(node, mouse)
    __interface:getStateMachine():_nodeMouseDown(node, mouse)
end)
RegisterNodeMouseUp("NodeMouseUp", function(node, mouse)
    __interface:getStateMachine():_nodeMouseUp(node, mouse)
end)
RegisterNodeMouseMove("NodeMouseMove", function(node, mouse)
    __interface:getStateMachine():_nodeMouseMove(node, mouse)
end)

return __interface

