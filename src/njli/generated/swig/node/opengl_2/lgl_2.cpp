/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGTCL
#define SWIGTCL
#endif


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stdio.h>
#include <tcl.h>
#include <errno.h>
#include <stdlib.h>
#include <stdarg.h>
#include <ctype.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGINTERN const char*
SWIG_Tcl_ErrorType(int code) {
  const char* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = "MemoryError";
    break;
  case SWIG_IOError:
    type = "IOError";
    break;
  case SWIG_RuntimeError:
    type = "RuntimeError";
    break;
  case SWIG_IndexError:
    type = "IndexError";
    break;
  case SWIG_TypeError:
    type = "TypeError";
    break;
  case SWIG_DivisionByZero:
    type = "ZeroDivisionError";
    break;
  case SWIG_OverflowError:
    type = "OverflowError";
    break;
  case SWIG_SyntaxError:
    type = "SyntaxError";
    break;
  case SWIG_ValueError:
    type = "ValueError";
    break;
  case SWIG_SystemError:
    type = "SystemError";
    break;
  case SWIG_AttributeError:
    type = "AttributeError";
    break;
  default:
    type = "RuntimeError";
  }
  return type;
}


SWIGINTERN void
SWIG_Tcl_SetErrorObj(Tcl_Interp *interp, const char *ctype, Tcl_Obj *obj)
{
  Tcl_ResetResult(interp);
  Tcl_SetObjResult(interp, obj);
  Tcl_SetErrorCode(interp, "SWIG", ctype, NULL);
}

SWIGINTERN void
SWIG_Tcl_SetErrorMsg(Tcl_Interp *interp, const char *ctype, const char *mesg)
{
  Tcl_ResetResult(interp);
  Tcl_SetErrorCode(interp, "SWIG", ctype, NULL);
  Tcl_AppendResult(interp, ctype, " ", mesg, NULL);
  /*
  Tcl_AddErrorInfo(interp, ctype);
  Tcl_AddErrorInfo(interp, " ");
  Tcl_AddErrorInfo(interp, mesg);
  */
}

SWIGINTERNINLINE void
SWIG_Tcl_AddErrorMsg(Tcl_Interp *interp, const char* mesg)
{
  Tcl_AddErrorInfo(interp, mesg);
}



/* -----------------------------------------------------------------------------
 * SWIG API. Portion that goes into the runtime
 * ----------------------------------------------------------------------------- */
#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_TCL_POINTER 4
#define SWIG_TCL_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

typedef int   (*swig_wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef int   (*swig_wrapper_func)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef char *(*swig_variable_func)(ClientData, Tcl_Interp *, char *, char *, int);
typedef void  (*swig_delete_func)(ClientData);

typedef struct swig_method {
  const char     *name;
  swig_wrapper   method;
} swig_method;

typedef struct swig_attribute {
  const char     *name;
  swig_wrapper   getmethod;
  swig_wrapper   setmethod;
} swig_attribute;

typedef struct swig_class {
  const char         *name;
  swig_type_info   **type;
  swig_wrapper       constructor;
  void              (*destructor)(void *);
  swig_method        *methods;
  swig_attribute     *attributes;
  struct swig_class **bases;
  const char              **base_names;
  swig_module_info   *module;
  Tcl_HashTable       hashtable;
} swig_class;

typedef struct swig_instance {
  Tcl_Obj       *thisptr;
  void          *thisvalue;
  swig_class   *classptr;
  int            destroy;
  Tcl_Command    cmdtok;
} swig_instance;

/* Structure for command table */
typedef struct {
  const char *name;
  int       (*wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
  ClientData  clientdata;
} swig_command_info;

/* Structure for variable linking table */
typedef struct {
  const char *name;
  void *addr;
  char * (*get)(ClientData, Tcl_Interp *, char *, char *, int);
  char * (*set)(ClientData, Tcl_Interp *, char *, char *, int);
} swig_var_info;


/* -----------------------------------------------------------------------------*
 *  Install a constant object 
 * -----------------------------------------------------------------------------*/

static Tcl_HashTable   swigconstTable;
static int             swigconstTableinit = 0;

SWIGINTERN void
SWIG_Tcl_SetConstantObj(Tcl_Interp *interp, const char* name, Tcl_Obj *obj) {
  int newobj;
  Tcl_ObjSetVar2(interp,Tcl_NewStringObj(name,-1), NULL, obj, TCL_GLOBAL_ONLY);
  Tcl_SetHashValue(Tcl_CreateHashEntry(&swigconstTable, name, &newobj), (ClientData) obj);
}

SWIGINTERN Tcl_Obj *
SWIG_Tcl_GetConstantObj(const char *key) {
  Tcl_HashEntry *entryPtr;
  if (!swigconstTableinit) return 0;
  entryPtr = Tcl_FindHashEntry(&swigconstTable, key);
  if (entryPtr) {
    return (Tcl_Obj *) Tcl_GetHashValue(entryPtr);
  }
  return 0;
}

#ifdef __cplusplus
}
#endif



/* -----------------------------------------------------------------------------
 * tclrun.swg
 *
 * This file contains the runtime support for Tcl modules and includes
 * code for managing global variables and pointer type checking.
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_ConvertPtr(oc, ptr, ty, flags)             SWIG_Tcl_ConvertPtr(interp, oc, ptr, ty, flags)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Tcl_NewPointerObj(ptr, type, flags)

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Tcl_ConvertPacked(interp, obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Tcl_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_Tcl_ConvertPtr(interp, obj, pptr, type, flags)
#define SWIG_NewInstanceObj(thisvalue, type, flags)     SWIG_Tcl_NewInstanceObj(interp, thisvalue, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Tcl_ConvertPtr(interp, obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Tcl_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Tcl_ConvertPacked(interp,obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Tcl_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Tcl_GetModule((Tcl_Interp *) (clientdata))	     
#define SWIG_SetModule(clientdata, pointer)          	SWIG_Tcl_SetModule((Tcl_Interp *) (clientdata), pointer)


/* Error manipulation */

#define SWIG_ErrorType(code)                            SWIG_Tcl_ErrorType(code)                                      
#define SWIG_Error(code, msg)            		SWIG_Tcl_SetErrorMsg(interp, SWIG_Tcl_ErrorType(code), msg)
#define SWIG_fail                        		goto fail						    


/* Tcl-specific SWIG API */

#define SWIG_Acquire(ptr)                               SWIG_Tcl_Acquire(ptr)                                     
#define SWIG_MethodCommand                           	SWIG_Tcl_MethodCommand				       
#define SWIG_Disown(ptr)                             	SWIG_Tcl_Disown(ptr)				       
#define SWIG_ConvertPtrFromString(c, ptr, ty, flags) 	SWIG_Tcl_ConvertPtrFromString(interp, c, ptr, ty, flags)  
#define SWIG_MakePtr(c, ptr, ty, flags)              	SWIG_Tcl_MakePtr(c, ptr, ty, flags)		       
#define SWIG_PointerTypeFromString(c)                	SWIG_Tcl_PointerTypeFromString(c)			       
#define SWIG_GetArgs                                 	SWIG_Tcl_GetArgs					       
#define SWIG_GetConstantObj(key)                     	SWIG_Tcl_GetConstantObj(key)			       
#define SWIG_ObjectConstructor                       	SWIG_Tcl_ObjectConstructor				       
#define SWIG_Thisown(ptr)                            	SWIG_Tcl_Thisown(ptr)				       
#define SWIG_ObjectDelete                            	SWIG_Tcl_ObjectDelete				       


#define SWIG_TCL_DECL_ARGS_2(arg1, arg2)                (Tcl_Interp *interp SWIGUNUSED, arg1, arg2)
#define SWIG_TCL_CALL_ARGS_2(arg1, arg2)                (interp, arg1, arg2)
/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* For backward compatibility only */
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_GetConstant        SWIG_GetConstantObj
#define SWIG_Tcl_GetConstant    SWIG_Tcl_GetConstantObj

#if TCL_MAJOR_VERSION >= 8 && TCL_MINOR_VERSION >= 5
#define SWIG_TCL_HASHTABLE_INIT {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#else
#define SWIG_TCL_HASHTABLE_INIT {0}
#endif

#include "assert.h"

#ifdef __cplusplus
extern "C" {
#endif

/* Object support */

SWIGRUNTIME Tcl_HashTable*
SWIG_Tcl_ObjectTable(void) {
  static Tcl_HashTable  swigobjectTable;
  static int            swigobjectTableinit = 0;
  if (!swigobjectTableinit) {
    Tcl_InitHashTable(&swigobjectTable, TCL_ONE_WORD_KEYS);
    swigobjectTableinit = 1;
  }
  return &swigobjectTable;
}

/* Acquire ownership of a pointer */
SWIGRUNTIME void
SWIG_Tcl_Acquire(void *ptr) {
  int newobj;
  Tcl_CreateHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr, &newobj);
}

SWIGRUNTIME int
SWIG_Tcl_Thisown(void *ptr) {
  if (Tcl_FindHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr)) {
    return 1;
  }
  return 0;
}

/* Disown a pointer.  Returns 1 if we owned it to begin with */
SWIGRUNTIME int
SWIG_Tcl_Disown(void *ptr) {
  Tcl_HashEntry *entryPtr = Tcl_FindHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr);
  if (entryPtr) {
    Tcl_DeleteHashEntry(entryPtr);
    return 1;
  }
  return 0;
}

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Tcl_ConvertPtrFromString(Tcl_Interp *interp, const char *c, void **ptr, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  /* Pointer values must start with leading underscore */
  while (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) return SWIG_OK;

    /* Empty string: not a pointer */
    if (*c == 0) return SWIG_ERROR; 

    /* Hmmm. It could be an object name. */

    /* Check if this is a command at all. Prevents <c> cget -this         */
    /* from being called when c is not a command, firing the unknown proc */
    if (Tcl_VarEval(interp,"info commands ", c, (char *) NULL) == TCL_OK) {
      Tcl_Obj *result = Tcl_GetObjResult(interp);
      if (*(Tcl_GetStringFromObj(result, NULL)) == 0) {
        /* It's not a command, so it can't be a pointer */
        Tcl_ResetResult(interp);
        return SWIG_ERROR;
      }
    } else {
      /* This will only fail if the argument is multiple words. */
      /* Multiple words are also not commands.                  */
      Tcl_ResetResult(interp);
      return SWIG_ERROR;
    }

    /* Check if this is really a SWIG pointer */
    if (Tcl_VarEval(interp,c," cget -this", (char *) NULL) != TCL_OK) {
      Tcl_ResetResult(interp);
      return SWIG_ERROR;
    }

    c = Tcl_GetStringFromObj(Tcl_GetObjResult(interp), NULL);
  }

  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (ty) {
    tc = c ? SWIG_TypeCheck(c,ty) : 0;
    if (!tc) {
      return SWIG_ERROR;
    }
    if (flags & SWIG_POINTER_DISOWN) {
      SWIG_Disown((void *) *ptr);
    }
    {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,(void *) *ptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    }
  }
  return SWIG_OK;
}

/* Convert a pointer value */
SWIGRUNTIMEINLINE int
SWIG_Tcl_ConvertPtr(Tcl_Interp *interp, Tcl_Obj *oc, void **ptr, swig_type_info *ty, int flags) {
  return SWIG_Tcl_ConvertPtrFromString(interp, Tcl_GetStringFromObj(oc,NULL), ptr, ty, flags);
}

/* Convert a pointer value */
SWIGRUNTIME char *
SWIG_Tcl_PointerTypeFromString(char *c) {
  char d;
  /* Pointer values must start with leading underscore. NULL has no type */
  if (*c != '_') {
    return 0;
  }
  c++;
  /* Extract hex value from pointer */
  while ((d = *c)) {
    if (!(((d >= '0') && (d <= '9')) || ((d >= 'a') && (d <= 'f')))) break;
    c++;
  }
  return c;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Tcl_ConvertPacked(Tcl_Interp *SWIGUNUSEDPARM(interp) , Tcl_Obj *obj, void *ptr, int sz, swig_type_info *ty) {
  swig_cast_info *tc;
  const char  *c;

  if (!obj) goto type_error;
  c = Tcl_GetStringFromObj(obj,NULL);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return SWIG_OK;

 type_error:

  return SWIG_ERROR;
}


/* Take a pointer and convert it to a string */
SWIGRUNTIME void
SWIG_Tcl_MakePtr(char *c, void *ptr, swig_type_info *ty, int SWIGUNUSEDPARM(flags)) {
  if (ptr) {
    *(c++) = '_';
    c = SWIG_PackData(c,&ptr,sizeof(void *));
    strcpy(c,ty->name);
  } else {
    strcpy(c,"NULL");
  }
}

/* Create a new pointer object */
SWIGRUNTIMEINLINE Tcl_Obj *
SWIG_Tcl_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  Tcl_Obj *robj;
  char result[SWIG_BUFFER_SIZE];
  SWIG_MakePtr(result,ptr,type,flags);
  robj = Tcl_NewStringObj(result,-1);
  return robj;
}

SWIGRUNTIME Tcl_Obj *
SWIG_Tcl_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return Tcl_NewStringObj(result,-1);
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

SWIGRUNTIME swig_module_info * 
SWIG_Tcl_GetModule(Tcl_Interp *interp) {
  const char *data;
  swig_module_info *ret = 0;
  
  /* first check if pointer already created */
  data = Tcl_GetVar(interp, (char *)"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, TCL_GLOBAL_ONLY);
  if (data) {
    SWIG_UnpackData(data, &ret, sizeof(swig_type_info **));
  }

  return ret;
}

SWIGRUNTIME void
SWIG_Tcl_SetModule(Tcl_Interp *interp, swig_module_info *module) {
  char buf[SWIG_BUFFER_SIZE];
  char *data;

  /* create a new pointer */
  data = SWIG_PackData(buf, &module, sizeof(swig_type_info **));
  *data = 0;
  Tcl_SetVar(interp, (char *)"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, buf, TCL_GLOBAL_ONLY);
}

/* -----------------------------------------------------------------------------*
 *  Object auxiliaries
 * -----------------------------------------------------------------------------*/


SWIGRUNTIME void
SWIG_Tcl_ObjectDelete(ClientData clientData) {
  swig_instance *si = (swig_instance *) clientData;
  if (!si) return;
  if (si->destroy && SWIG_Disown(si->thisvalue)) {
    if (si->classptr->destructor) {
      (si->classptr->destructor)(si->thisvalue);
    }
  }
  Tcl_DecrRefCount(si->thisptr);
  free(si);
}

/* Function to invoke object methods given an instance */
SWIGRUNTIME int
SWIG_Tcl_MethodCommand(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST _objv[]) {
  char *method,   *attrname;
  swig_instance   *inst = (swig_instance *) clientData;
  swig_method     *meth;
  swig_attribute  *attr;
  Tcl_Obj         *oldarg;
  Tcl_Obj         **objv;
  int              rcode;
  swig_class      *cls;
  swig_class      *cls_stack[64];
  int              cls_stack_bi[64];
  int              cls_stack_top = 0;
  int              numconf = 2;
  int              bi;

  objv = (Tcl_Obj **) _objv;
  if (objc < 2) {
    Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
    return TCL_ERROR;
  }
  method = Tcl_GetStringFromObj(objv[1],NULL);
  if (strcmp(method,"-acquire") == 0) {
    inst->destroy = 1;
    SWIG_Acquire(inst->thisvalue);
    return TCL_OK;
  }
  if (strcmp(method,"-disown") == 0) {
    if (inst->destroy) {
      SWIG_Disown(inst->thisvalue);
    }
    inst->destroy = 0;
    return TCL_OK;
  }
  if (strcmp(method,"-delete") == 0) {
    Tcl_DeleteCommandFromToken(interp,inst->cmdtok);
    return TCL_OK;
  }
  cls_stack[cls_stack_top] = inst->classptr;
  cls_stack_bi[cls_stack_top] = -1;
  while (1) {
    Tcl_HashEntry* hashentry;
    bi = cls_stack_bi[cls_stack_top];
    cls = cls_stack[cls_stack_top];
    if (bi != -1) {
      if (!cls->bases[bi] && cls->base_names[bi]) {
        /* lookup and cache the base class */
	swig_type_info *info = SWIG_TypeQueryModule(cls->module, cls->module, cls->base_names[bi]);
	if (info) cls->bases[bi] = (swig_class *) info->clientdata;
      }
      cls = cls->bases[bi];
      if (cls) {
        cls_stack_bi[cls_stack_top]++;
        cls_stack_top++;
        cls_stack[cls_stack_top] = cls;
        cls_stack_bi[cls_stack_top] = -1;
        continue;
      }
    }
    if (!cls) {
      cls_stack_top--;
      if (cls_stack_top < 0) break;
      else continue;
    }
    cls_stack_bi[cls_stack_top]++;

    hashentry = Tcl_FindHashEntry(&(cls->hashtable), method);
    if (hashentry) {
        ClientData cd = Tcl_GetHashValue(hashentry);
        swig_wrapper method_wrapper = (swig_wrapper)cd;
        oldarg = objv[1];
        objv[1] = inst->thisptr;
        Tcl_IncrRefCount(inst->thisptr);
        rcode = (method_wrapper)(clientData,interp,objc,objv);
        objv[1] = oldarg;
        Tcl_DecrRefCount(inst->thisptr);
        return rcode;
    }
    /* Check class methods for a match */
    if (strcmp(method,"cget") == 0) {
      if (objc < 3) {
        Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
        return TCL_ERROR;
      }
      attrname = Tcl_GetStringFromObj(objv[2],NULL);
      attr = cls->attributes;
      while (attr && attr->name) {
        if ((strcmp(attr->name, attrname) == 0) && (attr->getmethod)) {
          oldarg = objv[1];
          objv[1] = inst->thisptr;
          Tcl_IncrRefCount(inst->thisptr);
          rcode = (*attr->getmethod)(clientData,interp,2, objv);
          objv[1] = oldarg;
          Tcl_DecrRefCount(inst->thisptr);
          return rcode;
        }
        attr++;
      }
      if (strcmp(attrname, "-this") == 0) {
        Tcl_SetObjResult(interp, Tcl_DuplicateObj(inst->thisptr));
        return TCL_OK;
      }
      if (strcmp(attrname, "-thisown") == 0) {
        if (SWIG_Thisown(inst->thisvalue)) {
          Tcl_SetResult(interp,(char*)"1",TCL_STATIC);
        } else {
          Tcl_SetResult(interp,(char*)"0",TCL_STATIC);
        }
        return TCL_OK;
      }
    } else if (strcmp(method, "configure") == 0) {
      int i;
      if (objc < 4) {
        Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
        return TCL_ERROR;
      }
      i = 2;
      while (i < objc) {
        attrname = Tcl_GetStringFromObj(objv[i],NULL);
        attr = cls->attributes;
        while (attr && attr->name) {
          if ((strcmp(attr->name, attrname) == 0) && (attr->setmethod)) {
            oldarg = objv[i];
            objv[i] = inst->thisptr;
            Tcl_IncrRefCount(inst->thisptr);
            rcode = (*attr->setmethod)(clientData,interp,3, &objv[i-1]);
            objv[i] = oldarg;
            Tcl_DecrRefCount(inst->thisptr);
            if (rcode != TCL_OK) return rcode;
            numconf += 2;
          }
          attr++;
        }
        i+=2;
      }
    }
  }
  if (strcmp(method,"configure") == 0) {
    if (numconf >= objc) {
      return TCL_OK;
    } else {
      Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
      return TCL_ERROR;
    }
  }
  if (strcmp(method,"cget") == 0) {
    Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
    return TCL_ERROR;
  }
  Tcl_SetResult(interp, (char *) "Invalid method. Must be one of: configure cget -acquire -disown -delete", TCL_STATIC);
  cls = inst->classptr;
  bi = 0;
  while (cls) {
    meth = cls->methods;
    while (meth && meth->name) {
      char *cr = (char *) Tcl_GetStringResult(interp);
      size_t meth_len = strlen(meth->name);
      char* where = strchr(cr,':');
      while(where) {
        where = strstr(where, meth->name);
        if(where) {
          if(where[-1] == ' ' && (where[meth_len] == ' ' || where[meth_len]==0)) {
            break;
          } else {
            where++;
          }
        }
      }

      if (!where)
        Tcl_AppendElement(interp, (char *) meth->name);
      meth++;
    }
    cls = inst->classptr->bases[bi++];
  }
  return TCL_ERROR;
}

/* This function takes the current result and turns it into an object command */
SWIGRUNTIME Tcl_Obj *
SWIG_Tcl_NewInstanceObj(Tcl_Interp *interp, void *thisvalue, swig_type_info *type, int flags) {
  Tcl_Obj *robj = SWIG_NewPointerObj(thisvalue, type,0);
  /* Check to see if this pointer belongs to a class or not */
  if (thisvalue && (type->clientdata) && (interp)) {
    Tcl_CmdInfo    ci;
    char          *name;
    name = Tcl_GetStringFromObj(robj,NULL);
    if (!Tcl_GetCommandInfo(interp,name, &ci) || (flags)) {
      swig_instance *newinst = (swig_instance *) malloc(sizeof(swig_instance));
      newinst->thisptr = Tcl_DuplicateObj(robj);
      Tcl_IncrRefCount(newinst->thisptr);
      newinst->thisvalue = thisvalue;
      newinst->classptr = (swig_class *) type->clientdata;
      newinst->destroy = flags;
      newinst->cmdtok = Tcl_CreateObjCommand(interp, Tcl_GetStringFromObj(robj,NULL), (swig_wrapper_func) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
      if (flags) {
        SWIG_Acquire(thisvalue);
      }
    }
  }
  return robj;
}

/* Function to create objects */
SWIGRUNTIME int
SWIG_Tcl_ObjectConstructor(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj          *newObj = 0;
  void             *thisvalue = 0;
  swig_instance   *newinst = 0;
  swig_class      *classptr = (swig_class *) clientData;
  swig_wrapper     cons = 0;
  char             *name = 0;
  int               firstarg = 0;
  int               thisarg = 0;
  int               destroy = 1;

  if (!classptr) {
    Tcl_SetResult(interp, (char *) "swig: internal runtime error. No class object defined.", TCL_STATIC);
    return TCL_ERROR;
  }
  cons = classptr->constructor;
  if (objc > 1) {
    char *s = Tcl_GetStringFromObj(objv[1],NULL);
    if (strcmp(s,"-this") == 0) {
      thisarg = 2;
      cons = 0;
    } else if (strcmp(s,"-args") == 0) {
      firstarg = 1;
    } else if (objc == 2) {
      firstarg = 1;
      name = s;
    } else if (objc >= 3) {
      char *s1;
      name = s;
      s1 = Tcl_GetStringFromObj(objv[2],NULL);
      if (strcmp(s1,"-this") == 0) {
	thisarg = 3;
	cons = 0;
      } else {
	firstarg = 1;
      }
    }
  }
  if (cons) {
    int result;
    result = (*cons)(0, interp, objc-firstarg, &objv[firstarg]);
    if (result != TCL_OK) {
      return result;
    }
    newObj = Tcl_DuplicateObj(Tcl_GetObjResult(interp));
    if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
  } else if (thisarg > 0) {
    if (thisarg < objc) {
      destroy = 0;
      newObj = Tcl_DuplicateObj(objv[thisarg]);
      if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
    } else {
      Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
      return TCL_ERROR;
    }
  } else {
    Tcl_SetResult(interp, (char *) "No constructor available.", TCL_STATIC);
    return TCL_ERROR;
  }
  if (SWIG_Tcl_ConvertPtr(interp,newObj, (void **) &thisvalue, *(classptr->type), 0) != SWIG_OK) {
    Tcl_DecrRefCount(newObj);
    return TCL_ERROR;
  }
  newinst = (swig_instance *) malloc(sizeof(swig_instance));
  newinst->thisptr = newObj;
  Tcl_IncrRefCount(newObj);
  newinst->thisvalue = thisvalue;
  newinst->classptr = classptr;
  newinst->destroy = destroy;
  if (destroy) {
    SWIG_Acquire(thisvalue);
  }
  newinst->cmdtok = Tcl_CreateObjCommand(interp,name, (swig_wrapper) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
  return TCL_OK;
}

/* -----------------------------------------------------------------------------*
 *   Get arguments 
 * -----------------------------------------------------------------------------*/
SWIGRUNTIME int
SWIG_Tcl_GetArgs(Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], const char *fmt, ...) {
  int        argno = 0, opt = 0;
  long       tempi;
  double     tempd;
  const char *c;
  va_list    ap;
  void      *vptr;
  Tcl_Obj   *obj = 0;
  swig_type_info *ty;

  va_start(ap,fmt);
  for (c = fmt; (*c && (*c != ':') && (*c != ';')); c++,argno++) {
    if (*c == '|') {
      opt = 1;
      c++;
    }
    if (argno >= (objc-1)) {
      if (!opt) {
        Tcl_SetResult(interp, (char *) "Wrong number of arguments ", TCL_STATIC);
        goto argerror;
      } else {
        va_end(ap);
        return TCL_OK;
      }
    }

    vptr = va_arg(ap,void *);
    if (vptr) {
      if (isupper(*c)) {
        obj = SWIG_Tcl_GetConstantObj(Tcl_GetStringFromObj(objv[argno+1],0));
        if (!obj) obj = objv[argno+1];
      } else {
        obj = objv[argno+1];
      }
      switch(*c) {
      case 'i': case 'I':
      case 'l': case 'L':
      case 'h': case 'H':
      case 'b': case 'B':
        if (Tcl_GetLongFromObj(interp,obj,&tempi) != TCL_OK) goto argerror;
        if ((*c == 'i') || (*c == 'I')) *((int *)vptr) = (int)tempi;
        else if ((*c == 'l') || (*c == 'L')) *((long *)vptr) = (long)tempi;
        else if ((*c == 'h') || (*c == 'H')) *((short*)vptr) = (short)tempi;
        else if ((*c == 'b') || (*c == 'B')) *((unsigned char *)vptr) = (unsigned char)tempi;
        break;
      case 'f': case 'F':
      case 'd': case 'D':
        if (Tcl_GetDoubleFromObj(interp,obj,&tempd) != TCL_OK) goto argerror;
        if ((*c == 'f') || (*c == 'F')) *((float *) vptr) = (float)tempd;
        else if ((*c == 'd') || (*c == 'D')) *((double*) vptr) = tempd;
        break;
      case 's': case 'S':
        if (*(c+1) == '#') {
          int *vlptr = (int *) va_arg(ap, void *);
          *((char **) vptr) = Tcl_GetStringFromObj(obj, vlptr);
          c++;
        } else {
          *((char **)vptr) = Tcl_GetStringFromObj(obj,NULL);
        }
        break;
      case 'c': case 'C':
        *((char *)vptr) = *(Tcl_GetStringFromObj(obj,NULL));
        break;
      case 'p': case 'P':
        ty = (swig_type_info *) va_arg(ap, void *);
        if (SWIG_Tcl_ConvertPtr(interp, obj, (void **) vptr, ty, 0) != SWIG_OK) goto argerror;
        break;
      case 'o': case 'O':
        *((Tcl_Obj **)vptr) = objv[argno+1];
        break;
      default:
        break;
      }
    }
  }

  if ((*c != ';') && ((objc-1) > argno)) {
    Tcl_SetResult(interp, (char *) "Wrong # args.", TCL_STATIC);
    goto argerror;
  }
  va_end(ap);
  return TCL_OK;

 argerror:
  {
    char temp[32];
    sprintf(temp,"%d", argno+1);
    c = strchr(fmt,':');
    if (!c) c = strchr(fmt,';');
    if (!c) c = (char *)"";
    Tcl_AppendResult(interp,c," argument ", temp, NULL);
    va_end(ap);
    return TCL_ERROR;
  }
}

#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_char swig_types[0]
#define SWIGTYPE_p_double swig_types[1]
#define SWIGTYPE_p_float swig_types[2]
#define SWIGTYPE_p_int16_t swig_types[3]
#define SWIGTYPE_p_int32_t swig_types[4]
#define SWIGTYPE_p_int64_t swig_types[5]
#define SWIGTYPE_p_int8_t swig_types[6]
#define SWIGTYPE_p_intptr_t swig_types[7]
#define SWIGTYPE_p_p_char swig_types[8]
#define SWIGTYPE_p_p_void swig_types[9]
#define SWIGTYPE_p_uint16_t swig_types[10]
#define SWIGTYPE_p_uint32_t swig_types[11]
#define SWIGTYPE_p_uint64_t swig_types[12]
#define SWIGTYPE_p_uint8_t swig_types[13]
#define SWIGTYPE_p_void swig_types[14]
static swig_type_info *swig_types[16];
static swig_module_info swig_module = {swig_types, 15, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    Gl_Init
#define SWIG_name    "gl"
#define SWIG_prefix  ""
#define SWIG_version "0.0"

#define SWIGVERSION 0x030011 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>



#ifdef __cplusplus
extern "C" {
#endif
#ifdef MAC_TCL
#pragma export on
#endif
SWIGEXPORT int SWIG_init(Tcl_Interp *);
#ifdef MAC_TCL
#pragma export off
#endif
#ifdef __cplusplus
}
#endif

/* Compatibility version for TCL stubs */
#ifndef SWIG_TCL_STUBS_VERSION
#define SWIG_TCL_STUBS_VERSION "8.1"
#endif



    #include "GraphicsPlatform.h"


GLfloat *newfv4(GLfloat a, GLfloat b, GLfloat c, GLfloat d)
{
  GLfloat *f = (GLfloat*) malloc(4 * sizeof(GLfloat));
  f[0] = a;
  f[1] = b;
  f[2] = c;
  f[3] = d;
  return f;
}


#include <float.h>


#include <math.h>


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined __cplusplus && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 */
namespace std { }
template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_double SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, double *val)
{
  double v;
  if (Tcl_GetDoubleFromObj(0, obj, &v) == TCL_OK) {
    if (val) *val = v;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_float SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


void delfv(void *m)
{
    free(m);
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERNINLINE Tcl_Obj* 
SWIG_From_long  (long value)
{
  if (((long) INT_MIN <= value) && (value <= (long) INT_MAX)) {
    return Tcl_NewIntObj(static_cast< int >(value));
  } else {
    return Tcl_NewLongObj(value);
  }
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(Tcl_Obj *obj, char** cptr, size_t* psize, int *alloc)
{ 
  int len = 0;
  char *cstr = Tcl_GetStringFromObj(obj, &len);
  if (cstr) {
    if (cptr)  *cptr = cstr;
    if (psize) *psize = len + 1;
    if (alloc) *alloc = SWIG_OLDOBJ;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}




#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN int _wrap_newfv4(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ; GLfloat *result = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:newfv4 a b c d ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "newfv4" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "newfv4" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "newfv4" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "newfv4" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); result = (GLfloat *)newfv4(arg1,arg2,arg3,arg4);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_float,0)); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_delfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  void *arg1 = (void *) 0 ; int res1 ; if (SWIG_GetArgs(interp, objc, objv,"o:delfv m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1],SWIG_as_voidptrptr(&arg1), 0, 0); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delfv" "', argument " "1"" of type '" "void *""'");  }  delfv(arg1);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glAccum(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glAccum op value ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glAccum" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glAccum" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glAccum" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glAccum(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glAlphaFunc(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLclampf arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glAlphaFunc func ref ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glAlphaFunc" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glAlphaFunc" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glAlphaFunc" "', argument " "2"" of type '" "GLclampf""'"); }  
  arg2 = static_cast< GLclampf >(val2); glAlphaFunc(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glAreTexturesResident(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; GLboolean *arg3 = (GLboolean *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glAreTexturesResident n textures residences ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glAreTexturesResident" "', argument " "1"" of type '" "GLsizei""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glAreTexturesResident" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glAreTexturesResident" "', argument " "2"" of type '" "GLuint const *""'");  }
   arg2 = reinterpret_cast< GLuint * >(argp2); res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glAreTexturesResident" "', argument " "3"" of type '" "GLboolean *""'");  }
   arg3 = reinterpret_cast< GLboolean * >(argp3); result = glAreTexturesResident(arg1,(uint32_t const *)arg2,arg3);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glArrayElement(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glArrayElement i ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glArrayElement" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glArrayElement" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  glArrayElement(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glBegin(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glBegin mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBegin" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBegin" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glBegin(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glBindTexture(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLuint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glBindTexture target texture ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBindTexture" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBindTexture" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBindTexture" "', argument " "2"" of type '" "GLuint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBindTexture" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  glBindTexture(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glBitmap(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLsizei arg2 ; GLfloat arg3 ; GLfloat arg4 ; GLfloat arg5 ; GLfloat arg6 ; GLubyte *arg7 = (GLubyte *) 0 ;
  void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  float val5 ; int ecode5 = 0 ; float val6 ; int ecode6 = 0 ; void *argp7 = 0 ; int res7 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glBitmap width height xorig yorig xmove ymove bitmap ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBitmap" "', argument " "1"" of type '" "GLsizei""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBitmap" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBitmap" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBitmap" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glBitmap" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glBitmap" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); ecode5 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[5], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glBitmap" "', argument " "5"" of type '" "GLfloat""'"); }  
  arg5 = static_cast< GLfloat >(val5); ecode6 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[6], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "glBitmap" "', argument " "6"" of type '" "GLfloat""'"); }  
  arg6 = static_cast< GLfloat >(val6); res7 = SWIG_ConvertPtr(objv[7], &argp7,SWIGTYPE_p_uint8_t, 0 |  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glBitmap" "', argument " "7"" of type '" "GLubyte const *""'");  } 
  arg7 = reinterpret_cast< GLubyte * >(argp7); glBitmap(arg1,arg2,arg3,arg4,arg5,arg6,(uint8_t const *)arg7); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glBlendColor(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLclampf arg1 ; GLclampf arg2 ; GLclampf arg3 ; GLclampf arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glBlendColor red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glBlendColor" "', argument " "1"" of type '" "GLclampf""'"); }  
  arg1 = static_cast< GLclampf >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glBlendColor" "', argument " "2"" of type '" "GLclampf""'"); }  
  arg2 = static_cast< GLclampf >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glBlendColor" "', argument " "3"" of type '" "GLclampf""'"); }  
  arg3 = static_cast< GLclampf >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glBlendColor" "', argument " "4"" of type '" "GLclampf""'"); }  
  arg4 = static_cast< GLclampf >(val4); glBlendColor(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glBlendEquation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glBlendEquation mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBlendEquation" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendEquation" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glBlendEquation(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glBlendEquationSeparate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glBlendEquationSeparate modeRGB modeAlpha ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBlendEquationSeparate" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendEquationSeparate" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBlendEquationSeparate" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendEquationSeparate" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  glBlendEquationSeparate(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glBlendFunc(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glBlendFunc sfactor dfactor ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBlendFunc" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendFunc" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBlendFunc" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendFunc" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  glBlendFunc(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glCallList(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glCallList list ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCallList" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCallList" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glCallList(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glCallLists(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLenum arg2 ; GLvoid *arg3 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  int res3 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glCallLists n type lists ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCallLists" "', argument " "1"" of type '" "GLsizei""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCallLists" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCallLists" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCallLists" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCallLists" "', argument " "3"" of type '" "GLvoid const *""'");  }
   glCallLists(arg1,arg2,(void const *)arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glClear(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbitfield arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glClear mask ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glClear" "', argument " "1"" of type '" "GLbitfield""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glClear" "', argument " "1"" of type '" "GLbitfield""'"); }
     else { arg1 = *(reinterpret_cast< GLbitfield * >(argp1)); }  }  glClear(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glClearAccum(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glClearAccum red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glClearAccum" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glClearAccum" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glClearAccum" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glClearAccum" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); glClearAccum(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glClearColor(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLclampf arg1 ; GLclampf arg2 ; GLclampf arg3 ; GLclampf arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glClearColor red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glClearColor" "', argument " "1"" of type '" "GLclampf""'"); }  
  arg1 = static_cast< GLclampf >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glClearColor" "', argument " "2"" of type '" "GLclampf""'"); }  
  arg2 = static_cast< GLclampf >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glClearColor" "', argument " "3"" of type '" "GLclampf""'"); }  
  arg3 = static_cast< GLclampf >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glClearColor" "', argument " "4"" of type '" "GLclampf""'"); }  
  arg4 = static_cast< GLclampf >(val4); glClearColor(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glClearDepth(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLclampd arg1 ; double val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glClearDepth depth ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glClearDepth" "', argument " "1"" of type '" "GLclampd""'"); }  
  arg1 = static_cast< GLclampd >(val1); glClearDepth(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glClearIndex(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; float val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glClearIndex c ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glClearIndex" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); glClearIndex(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glClearStencil(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glClearStencil s ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glClearStencil" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glClearStencil" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  glClearStencil(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glClipPlane(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glClipPlane plane equation ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glClipPlane" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glClipPlane" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glClipPlane" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glClipPlane(arg1,(double const *)arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3b(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbyte arg1 ; GLbyte arg2 ; GLbyte arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColor3b red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3b" "', argument " "1"" of type '" "GLbyte""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3b" "', argument " "1"" of type '" "GLbyte""'"); }
     else { arg1 = *(reinterpret_cast< GLbyte * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor3b" "', argument " "2"" of type '" "GLbyte""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3b" "', argument " "2"" of type '" "GLbyte""'"); }
     else { arg2 = *(reinterpret_cast< GLbyte * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor3b" "', argument " "3"" of type '" "GLbyte""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3b" "', argument " "3"" of type '" "GLbyte""'"); }
     else { arg3 = *(reinterpret_cast< GLbyte * >(argp3)); }  }  glColor3b(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3bv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbyte *arg1 = (GLbyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor3bv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3bv" "', argument " "1"" of type '" "GLbyte const *""'");  } 
  arg1 = reinterpret_cast< GLbyte * >(argp1); glColor3bv((int8_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColor3d red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glColor3d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glColor3d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glColor3d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glColor3d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor3dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glColor3dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColor3f red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glColor3f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glColor3f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glColor3f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glColor3f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor3fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glColor3fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColor3i red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor3i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor3i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glColor3i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor3iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3iv" "', argument " "1"" of type '" "GLint const *""'");  } 
  arg1 = reinterpret_cast< GLint * >(argp1); glColor3iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColor3s red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor3s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor3s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glColor3s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor3sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glColor3sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3ub(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte arg1 ; GLubyte arg2 ; GLubyte arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColor3ub red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3ub" "', argument " "1"" of type '" "GLubyte""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3ub" "', argument " "1"" of type '" "GLubyte""'"); }
     else { arg1 = *(reinterpret_cast< GLubyte * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor3ub" "', argument " "2"" of type '" "GLubyte""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3ub" "', argument " "2"" of type '" "GLubyte""'"); }
     else { arg2 = *(reinterpret_cast< GLubyte * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor3ub" "', argument " "3"" of type '" "GLubyte""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3ub" "', argument " "3"" of type '" "GLubyte""'"); }
     else { arg3 = *(reinterpret_cast< GLubyte * >(argp3)); }  }  glColor3ub(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3ubv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte *arg1 = (GLubyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor3ubv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3ubv" "', argument " "1"" of type '" "GLubyte const *""'");  }
   arg1 = reinterpret_cast< GLubyte * >(argp1); glColor3ubv((uint8_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3ui(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLuint arg2 ; GLuint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColor3ui red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3ui" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3ui" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor3ui" "', argument " "2"" of type '" "GLuint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3ui" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor3ui" "', argument " "3"" of type '" "GLuint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3ui" "', argument " "3"" of type '" "GLuint""'"); }
     else { arg3 = *(reinterpret_cast< GLuint * >(argp3)); }  }  glColor3ui(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3uiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint *arg1 = (GLuint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor3uiv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3uiv" "', argument " "1"" of type '" "GLuint const *""'");  }
   arg1 = reinterpret_cast< GLuint * >(argp1); glColor3uiv((uint32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3us(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLushort arg1 ; GLushort arg2 ; GLushort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColor3us red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3us" "', argument " "1"" of type '" "GLushort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3us" "', argument " "1"" of type '" "GLushort""'"); }
     else { arg1 = *(reinterpret_cast< GLushort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor3us" "', argument " "2"" of type '" "GLushort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3us" "', argument " "2"" of type '" "GLushort""'"); }
     else { arg2 = *(reinterpret_cast< GLushort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor3us" "', argument " "3"" of type '" "GLushort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor3us" "', argument " "3"" of type '" "GLushort""'"); }
     else { arg3 = *(reinterpret_cast< GLushort * >(argp3)); }  }  glColor3us(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor3usv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLushort *arg1 = (GLushort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor3usv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor3usv" "', argument " "1"" of type '" "GLushort const *""'");  }
   arg1 = reinterpret_cast< GLushort * >(argp1); glColor3usv((uint16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4b(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbyte arg1 ; GLbyte arg2 ; GLbyte arg3 ; GLbyte arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColor4b red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4b" "', argument " "1"" of type '" "GLbyte""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4b" "', argument " "1"" of type '" "GLbyte""'"); }
     else { arg1 = *(reinterpret_cast< GLbyte * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor4b" "', argument " "2"" of type '" "GLbyte""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4b" "', argument " "2"" of type '" "GLbyte""'"); }
     else { arg2 = *(reinterpret_cast< GLbyte * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor4b" "', argument " "3"" of type '" "GLbyte""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4b" "', argument " "3"" of type '" "GLbyte""'"); }
     else { arg3 = *(reinterpret_cast< GLbyte * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColor4b" "', argument " "4"" of type '" "GLbyte""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4b" "', argument " "4"" of type '" "GLbyte""'"); }
     else { arg4 = *(reinterpret_cast< GLbyte * >(argp4)); }  }  glColor4b(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4bv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbyte *arg1 = (GLbyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor4bv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4bv" "', argument " "1"" of type '" "GLbyte const *""'");  } 
  arg1 = reinterpret_cast< GLbyte * >(argp1); glColor4bv((int8_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColor4d red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glColor4d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glColor4d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glColor4d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glColor4d" "', argument " "4"" of type '" "GLdouble""'"); }  
  arg4 = static_cast< GLdouble >(val4); glColor4d(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor4dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glColor4dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColor4f red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glColor4f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glColor4f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glColor4f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glColor4f" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); glColor4f(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor4fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glColor4fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColor4i red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor4i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor4i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColor4i" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4i" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  glColor4i(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor4iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4iv" "', argument " "1"" of type '" "GLint const *""'");  } 
  arg1 = reinterpret_cast< GLint * >(argp1); glColor4iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColor4s red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor4s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor4s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColor4s" "', argument " "4"" of type '" "GLshort""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4s" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  glColor4s(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor4sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glColor4sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4ub(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte arg1 ; GLubyte arg2 ; GLubyte arg3 ; GLubyte arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColor4ub red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4ub" "', argument " "1"" of type '" "GLubyte""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4ub" "', argument " "1"" of type '" "GLubyte""'"); }
     else { arg1 = *(reinterpret_cast< GLubyte * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor4ub" "', argument " "2"" of type '" "GLubyte""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4ub" "', argument " "2"" of type '" "GLubyte""'"); }
     else { arg2 = *(reinterpret_cast< GLubyte * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor4ub" "', argument " "3"" of type '" "GLubyte""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4ub" "', argument " "3"" of type '" "GLubyte""'"); }
     else { arg3 = *(reinterpret_cast< GLubyte * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColor4ub" "', argument " "4"" of type '" "GLubyte""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4ub" "', argument " "4"" of type '" "GLubyte""'"); }
     else { arg4 = *(reinterpret_cast< GLubyte * >(argp4)); }  }  glColor4ub(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4ubv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte *arg1 = (GLubyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor4ubv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4ubv" "', argument " "1"" of type '" "GLubyte const *""'");  }
   arg1 = reinterpret_cast< GLubyte * >(argp1); glColor4ubv((uint8_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4ui(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLuint arg2 ; GLuint arg3 ; GLuint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColor4ui red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4ui" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4ui" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor4ui" "', argument " "2"" of type '" "GLuint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4ui" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor4ui" "', argument " "3"" of type '" "GLuint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4ui" "', argument " "3"" of type '" "GLuint""'"); }
     else { arg3 = *(reinterpret_cast< GLuint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColor4ui" "', argument " "4"" of type '" "GLuint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4ui" "', argument " "4"" of type '" "GLuint""'"); }
     else { arg4 = *(reinterpret_cast< GLuint * >(argp4)); }  }  glColor4ui(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4uiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint *arg1 = (GLuint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor4uiv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4uiv" "', argument " "1"" of type '" "GLuint const *""'");  }
   arg1 = reinterpret_cast< GLuint * >(argp1); glColor4uiv((uint32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4us(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLushort arg1 ; GLushort arg2 ; GLushort arg3 ; GLushort arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColor4us red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4us" "', argument " "1"" of type '" "GLushort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4us" "', argument " "1"" of type '" "GLushort""'"); }
     else { arg1 = *(reinterpret_cast< GLushort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColor4us" "', argument " "2"" of type '" "GLushort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4us" "', argument " "2"" of type '" "GLushort""'"); }
     else { arg2 = *(reinterpret_cast< GLushort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColor4us" "', argument " "3"" of type '" "GLushort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4us" "', argument " "3"" of type '" "GLushort""'"); }
     else { arg3 = *(reinterpret_cast< GLushort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColor4us" "', argument " "4"" of type '" "GLushort""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColor4us" "', argument " "4"" of type '" "GLushort""'"); }
     else { arg4 = *(reinterpret_cast< GLushort * >(argp4)); }  }  glColor4us(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColor4usv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLushort *arg1 = (GLushort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glColor4usv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColor4usv" "', argument " "1"" of type '" "GLushort const *""'");  }
   arg1 = reinterpret_cast< GLushort * >(argp1); glColor4usv((uint16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColorMask(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLboolean arg1 ; GLboolean arg2 ; GLboolean arg3 ; GLboolean arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColorMask red green blue alpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColorMask" "', argument " "1"" of type '" "GLboolean""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorMask" "', argument " "1"" of type '" "GLboolean""'"); }
     else { arg1 = *(reinterpret_cast< GLboolean * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColorMask" "', argument " "2"" of type '" "GLboolean""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorMask" "', argument " "2"" of type '" "GLboolean""'"); }
     else { arg2 = *(reinterpret_cast< GLboolean * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColorMask" "', argument " "3"" of type '" "GLboolean""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorMask" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColorMask" "', argument " "4"" of type '" "GLboolean""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorMask" "', argument " "4"" of type '" "GLboolean""'"); }
     else { arg4 = *(reinterpret_cast< GLboolean * >(argp4)); }  }  glColorMask(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColorMaterial(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glColorMaterial face mode ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColorMaterial" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorMaterial" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColorMaterial" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorMaterial" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  glColorMaterial(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glColorPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLenum arg2 ; GLsizei arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glColorPointer size type stride pointer ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColorPointer" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorPointer" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColorPointer" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorPointer" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColorPointer" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorPointer" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColorPointer" "', argument " "4"" of type '" "GLvoid const *""'");  }
   glColorPointer(arg1,arg2,arg3,(void const *)arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColorSubTable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLsizei arg2 ; GLsizei arg3 ; GLenum arg4 ; GLenum arg5 ; GLvoid *arg6 = (GLvoid *) 0 ; void *argp1 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; int res6 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glColorSubTable target start count format type data ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColorSubTable" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorSubTable" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColorSubTable" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorSubTable" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColorSubTable" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorSubTable" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColorSubTable" "', argument " "4"" of type '" "GLenum""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorSubTable" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glColorSubTable" "', argument " "5"" of type '" "GLenum""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorSubTable" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  } 
  res6 = SWIG_ConvertPtr(objv[6],SWIG_as_voidptrptr(&arg6), 0, 0); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glColorSubTable" "', argument " "6"" of type '" "GLvoid const *""'");  }
   glColorSubTable(arg1,arg2,arg3,arg4,arg5,(void const *)arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glColorTable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLsizei arg3 ; GLenum arg4 ; GLenum arg5 ; GLvoid *arg6 = (GLvoid *) 0 ; void *argp1 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; int res6 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glColorTable target internalformat width format type table ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColorTable" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTable" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColorTable" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTable" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColorTable" "', argument " "3"" of type '" "GLsizei""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTable" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glColorTable" "', argument " "4"" of type '" "GLenum""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTable" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glColorTable" "', argument " "5"" of type '" "GLenum""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTable" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  } 
  res6 = SWIG_ConvertPtr(objv[6],SWIG_as_voidptrptr(&arg6), 0, 0); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glColorTable" "', argument " "6"" of type '" "GLvoid const *""'");  }
   glColorTable(arg1,arg2,arg3,arg4,arg5,(void const *)arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glColorTableParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColorTableParameterfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColorTableParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTableParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColorTableParameterfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTableParameterfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColorTableParameterfv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glColorTableParameterfv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glColorTableParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glColorTableParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glColorTableParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTableParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glColorTableParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glColorTableParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glColorTableParameteriv" "', argument " "3"" of type '" "GLint const *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glColorTableParameteriv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glConvolutionFilter1D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLsizei arg3 ; GLenum arg4 ; GLenum arg5 ; GLvoid *arg6 = (GLvoid *) 0 ; void *argp1 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; int res6 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glConvolutionFilter1D target internalformat width format type image ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glConvolutionFilter1D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter1D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glConvolutionFilter1D" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter1D" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glConvolutionFilter1D" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter1D" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glConvolutionFilter1D" "', argument " "4"" of type '" "GLenum""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter1D" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glConvolutionFilter1D" "', argument " "5"" of type '" "GLenum""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter1D" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  } 
  res6 = SWIG_ConvertPtr(objv[6],SWIG_as_voidptrptr(&arg6), 0, 0); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glConvolutionFilter1D" "', argument " "6"" of type '" "GLvoid const *""'");  }
   glConvolutionFilter1D(arg1,arg2,arg3,arg4,arg5,(void const *)arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glConvolutionFilter2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLsizei arg3 ; GLsizei arg4 ; GLenum arg5 ; GLenum arg6 ; GLvoid *arg7 = (GLvoid *) 0 ;
  void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; int res7 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glConvolutionFilter2D target internalformat width height format type image ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glConvolutionFilter2D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glConvolutionFilter2D" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter2D" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glConvolutionFilter2D" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter2D" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glConvolutionFilter2D" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter2D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glConvolutionFilter2D" "', argument " "5"" of type '" "GLenum""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter2D" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glConvolutionFilter2D" "', argument " "6"" of type '" "GLenum""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionFilter2D" "', argument " "6"" of type '" "GLenum""'"); }
     else { arg6 = *(reinterpret_cast< GLenum * >(argp6)); }  } 
  res7 = SWIG_ConvertPtr(objv[7],SWIG_as_voidptrptr(&arg7), 0, 0); if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glConvolutionFilter2D" "', argument " "7"" of type '" "GLvoid const *""'");  }
   glConvolutionFilter2D(arg1,arg2,arg3,arg4,arg5,arg6,(void const *)arg7); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glConvolutionParameterf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glConvolutionParameterf target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glConvolutionParameterf" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameterf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glConvolutionParameterf" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameterf" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glConvolutionParameterf" "', argument " "3"" of type '" "GLfloat""'"); }
    arg3 = static_cast< GLfloat >(val3); glConvolutionParameterf(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glConvolutionParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glConvolutionParameterfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glConvolutionParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glConvolutionParameterfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameterfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glConvolutionParameterfv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glConvolutionParameterfv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glConvolutionParameteri(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glConvolutionParameteri target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glConvolutionParameteri" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameteri" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glConvolutionParameteri" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameteri" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glConvolutionParameteri" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameteri" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glConvolutionParameteri(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glConvolutionParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glConvolutionParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glConvolutionParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glConvolutionParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glConvolutionParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glConvolutionParameteriv" "', argument " "3"" of type '" "GLint const *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glConvolutionParameteriv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glCopyColorSubTable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLsizei arg2 ; GLint arg3 ; GLint arg4 ; GLsizei arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glCopyColorSubTable target start x y width ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyColorSubTable" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorSubTable" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyColorSubTable" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorSubTable" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyColorSubTable" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorSubTable" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyColorSubTable" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorSubTable" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyColorSubTable" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorSubTable" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  glCopyColorSubTable(arg1,arg2,arg3,arg4,arg5); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glCopyColorTable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; GLint arg4 ; GLsizei arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glCopyColorTable target internalformat x y width ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyColorTable" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorTable" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyColorTable" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorTable" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyColorTable" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorTable" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyColorTable" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorTable" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyColorTable" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyColorTable" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  glCopyColorTable(arg1,arg2,arg3,arg4,arg5); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glCopyConvolutionFilter1D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; GLint arg4 ; GLsizei arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glCopyConvolutionFilter1D target internalformat x y width ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyConvolutionFilter1D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter1D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyConvolutionFilter1D" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter1D" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyConvolutionFilter1D" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter1D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyConvolutionFilter1D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter1D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyConvolutionFilter1D" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter1D" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  glCopyConvolutionFilter1D(arg1,arg2,arg3,arg4,arg5);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glCopyConvolutionFilter2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; GLint arg4 ; GLsizei arg5 ; GLsizei arg6 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ;
  int res6 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glCopyConvolutionFilter2D target internalformat x y width height ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyConvolutionFilter2D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyConvolutionFilter2D" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter2D" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyConvolutionFilter2D" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter2D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyConvolutionFilter2D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter2D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyConvolutionFilter2D" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter2D" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCopyConvolutionFilter2D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyConvolutionFilter2D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  glCopyConvolutionFilter2D(arg1,arg2,arg3,arg4,arg5,arg6);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glCopyPixels(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLsizei arg3 ; GLsizei arg4 ; GLenum arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glCopyPixels x y width height type ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyPixels" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyPixels" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyPixels" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyPixels" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyPixels" "', argument " "3"" of type '" "GLsizei""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyPixels" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyPixels" "', argument " "4"" of type '" "GLsizei""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyPixels" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyPixels" "', argument " "5"" of type '" "GLenum""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyPixels" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  }  glCopyPixels(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glCopyTexImage1D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLenum arg3 ; GLint arg4 ; GLint arg5 ; GLsizei arg6 ; GLint arg7 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glCopyTexImage1D target level internalformat x y width border ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyTexImage1D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage1D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyTexImage1D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage1D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyTexImage1D" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage1D" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyTexImage1D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage1D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyTexImage1D" "', argument " "5"" of type '" "GLint""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage1D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCopyTexImage1D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage1D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCopyTexImage1D" "', argument " "7"" of type '" "GLint""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage1D" "', argument " "7"" of type '" "GLint""'"); }
     else { arg7 = *(reinterpret_cast< GLint * >(argp7)); }  }  glCopyTexImage1D(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glCopyTexImage2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLenum arg3 ; GLint arg4 ; GLint arg5 ; GLsizei arg6 ; GLsizei arg7 ; GLint arg8 ; void *argp1 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ; void *argp8 ; int res8 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:glCopyTexImage2D target level internalformat x y width height border ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyTexImage2D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyTexImage2D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage2D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyTexImage2D" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage2D" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyTexImage2D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage2D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyTexImage2D" "', argument " "5"" of type '" "GLint""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage2D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCopyTexImage2D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage2D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCopyTexImage2D" "', argument " "7"" of type '" "GLsizei""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage2D" "', argument " "7"" of type '" "GLsizei""'"); }
     else { arg7 = *(reinterpret_cast< GLsizei * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glCopyTexImage2D" "', argument " "8"" of type '" "GLint""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexImage2D" "', argument " "8"" of type '" "GLint""'"); }
     else { arg8 = *(reinterpret_cast< GLint * >(argp8)); }  }  glCopyTexImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glCopyTexSubImage1D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLint arg2 ; GLint arg3 ; GLint arg4 ; GLint arg5 ; GLsizei arg6 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glCopyTexSubImage1D target level xoffset x y width ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyTexSubImage1D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage1D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyTexSubImage1D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage1D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyTexSubImage1D" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage1D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyTexSubImage1D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage1D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyTexSubImage1D" "', argument " "5"" of type '" "GLint""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage1D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCopyTexSubImage1D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage1D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  glCopyTexSubImage1D(arg1,arg2,arg3,arg4,arg5,arg6);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glCopyTexSubImage2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLint arg2 ; GLint arg3 ; GLint arg4 ; GLint arg5 ; GLint arg6 ; GLsizei arg7 ; GLsizei arg8 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ; void *argp8 ; int res8 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:glCopyTexSubImage2D target level xoffset yoffset x y width height ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyTexSubImage2D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyTexSubImage2D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage2D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyTexSubImage2D" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage2D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyTexSubImage2D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage2D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyTexSubImage2D" "', argument " "5"" of type '" "GLint""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage2D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCopyTexSubImage2D" "', argument " "6"" of type '" "GLint""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage2D" "', argument " "6"" of type '" "GLint""'"); }
     else { arg6 = *(reinterpret_cast< GLint * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCopyTexSubImage2D" "', argument " "7"" of type '" "GLsizei""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage2D" "', argument " "7"" of type '" "GLsizei""'"); }
     else { arg7 = *(reinterpret_cast< GLsizei * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glCopyTexSubImage2D" "', argument " "8"" of type '" "GLsizei""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage2D" "', argument " "8"" of type '" "GLsizei""'"); }
     else { arg8 = *(reinterpret_cast< GLsizei * >(argp8)); }  }  glCopyTexSubImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glCopyTexSubImage3D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLint arg2 ; GLint arg3 ; GLint arg4 ; GLint arg5 ; GLint arg6 ; GLint arg7 ; GLsizei arg8 ; GLsizei arg9 ; void *argp1 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ; void *argp8 ; int res8 = 0 ; void *argp9 ;
  int res9 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooo:glCopyTexSubImage3D target level xoffset yoffset zoffset x y width height ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCopyTexSubImage3D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCopyTexSubImage3D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCopyTexSubImage3D" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCopyTexSubImage3D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCopyTexSubImage3D" "', argument " "5"" of type '" "GLint""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCopyTexSubImage3D" "', argument " "6"" of type '" "GLint""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "6"" of type '" "GLint""'"); }
     else { arg6 = *(reinterpret_cast< GLint * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCopyTexSubImage3D" "', argument " "7"" of type '" "GLint""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "7"" of type '" "GLint""'"); }
     else { arg7 = *(reinterpret_cast< GLint * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glCopyTexSubImage3D" "', argument " "8"" of type '" "GLsizei""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "8"" of type '" "GLsizei""'"); }
     else { arg8 = *(reinterpret_cast< GLsizei * >(argp8)); }  }  {
    res9 = SWIG_ConvertPtr(objv[9], &argp9, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glCopyTexSubImage3D" "', argument " "9"" of type '" "GLsizei""'");  }
       if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCopyTexSubImage3D" "', argument " "9"" of type '" "GLsizei""'"); }
     else { arg9 = *(reinterpret_cast< GLsizei * >(argp9)); }  } 
  glCopyTexSubImage3D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glCullFace(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glCullFace mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCullFace" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCullFace" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glCullFace(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDeleteLists(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLsizei arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glDeleteLists list range ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDeleteLists" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDeleteLists" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDeleteLists" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDeleteLists" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  glDeleteLists(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glDeleteTextures(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glDeleteTextures n textures ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDeleteTextures" "', argument " "1"" of type '" "GLsizei""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDeleteTextures" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDeleteTextures" "', argument " "2"" of type '" "GLuint const *""'");  }
   arg2 = reinterpret_cast< GLuint * >(argp2); glDeleteTextures(arg1,(uint32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glDepthFunc(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glDepthFunc func ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDepthFunc" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDepthFunc" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glDepthFunc(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDepthMask(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLboolean arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glDepthMask flag ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDepthMask" "', argument " "1"" of type '" "GLboolean""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDepthMask" "', argument " "1"" of type '" "GLboolean""'"); }
     else { arg1 = *(reinterpret_cast< GLboolean * >(argp1)); }  }  glDepthMask(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDepthRange(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLclampd arg1 ; GLclampd arg2 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glDepthRange zNear zFar ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glDepthRange" "', argument " "1"" of type '" "GLclampd""'"); }  
  arg1 = static_cast< GLclampd >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glDepthRange" "', argument " "2"" of type '" "GLclampd""'"); }  
  arg2 = static_cast< GLclampd >(val2); glDepthRange(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDisable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glDisable cap ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDisable" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDisable" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glDisable(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glDisableClientState(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glDisableClientState array ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDisableClientState" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDisableClientState" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glDisableClientState(arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glDrawArrays(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLsizei arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glDrawArrays mode first count ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDrawArrays" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawArrays" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDrawArrays" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawArrays" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glDrawArrays" "', argument " "3"" of type '" "GLsizei""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawArrays" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  glDrawArrays(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glDrawBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glDrawBuffer mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDrawBuffer" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawBuffer" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glDrawBuffer(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDrawElements(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLsizei arg2 ; GLenum arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glDrawElements mode count type indices ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDrawElements" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawElements" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDrawElements" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawElements" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glDrawElements" "', argument " "3"" of type '" "GLenum""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawElements" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glDrawElements" "', argument " "4"" of type '" "GLvoid const *""'");  }
   glDrawElements(arg1,arg2,arg3,(void const *)arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDrawPixels(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLsizei arg2 ; GLenum arg3 ; GLenum arg4 ; GLvoid *arg5 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; int res5 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glDrawPixels width height format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDrawPixels" "', argument " "1"" of type '" "GLsizei""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawPixels" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDrawPixels" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawPixels" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glDrawPixels" "', argument " "3"" of type '" "GLenum""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawPixels" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glDrawPixels" "', argument " "4"" of type '" "GLenum""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawPixels" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  } 
  res5 = SWIG_ConvertPtr(objv[5],SWIG_as_voidptrptr(&arg5), 0, 0); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glDrawPixels" "', argument " "5"" of type '" "GLvoid const *""'");  }
   glDrawPixels(arg1,arg2,arg3,arg4,(void const *)arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glDrawRangeElements(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLuint arg2 ; GLuint arg3 ; GLsizei arg4 ; GLenum arg5 ; GLvoid *arg6 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; int res6 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glDrawRangeElements mode start end count type indices ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDrawRangeElements" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawRangeElements" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDrawRangeElements" "', argument " "2"" of type '" "GLuint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawRangeElements" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glDrawRangeElements" "', argument " "3"" of type '" "GLuint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawRangeElements" "', argument " "3"" of type '" "GLuint""'"); }
     else { arg3 = *(reinterpret_cast< GLuint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glDrawRangeElements" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawRangeElements" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glDrawRangeElements" "', argument " "5"" of type '" "GLenum""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawRangeElements" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  } 
  res6 = SWIG_ConvertPtr(objv[6],SWIG_as_voidptrptr(&arg6), 0, 0); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glDrawRangeElements" "', argument " "6"" of type '" "GLvoid const *""'");  }
   glDrawRangeElements(arg1,arg2,arg3,arg4,arg5,(void const *)arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEdgeFlag(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLboolean arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEdgeFlag flag ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEdgeFlag" "', argument " "1"" of type '" "GLboolean""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEdgeFlag" "', argument " "1"" of type '" "GLboolean""'"); }
     else { arg1 = *(reinterpret_cast< GLboolean * >(argp1)); }  }  glEdgeFlag(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEdgeFlagPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLvoid *arg2 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; int res2 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glEdgeFlagPointer stride pointer ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEdgeFlagPointer" "', argument " "1"" of type '" "GLsizei""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEdgeFlagPointer" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2],SWIG_as_voidptrptr(&arg2), 0, 0); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glEdgeFlagPointer" "', argument " "2"" of type '" "GLvoid const *""'");  }
   glEdgeFlagPointer(arg1,(void const *)arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEdgeFlagv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLboolean *arg1 = (GLboolean *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEdgeFlagv flag ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEdgeFlagv" "', argument " "1"" of type '" "GLboolean const *""'");  }
   arg1 = reinterpret_cast< GLboolean * >(argp1); glEdgeFlagv((uint8_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEnable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEnable cap ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEnable" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEnable" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glEnable(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glEnableClientState(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEnableClientState array ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEnableClientState" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEnableClientState" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glEnableClientState(arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glEnd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glEnd ") == TCL_ERROR) SWIG_fail; glEnd(); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEndList(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glEndList ") == TCL_ERROR) SWIG_fail; glEndList(); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalCoord1d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; double val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEvalCoord1d u ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glEvalCoord1d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); glEvalCoord1d(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalCoord1dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEvalCoord1dv u ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEvalCoord1dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glEvalCoord1dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalCoord1f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; float val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEvalCoord1f u ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glEvalCoord1f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); glEvalCoord1f(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalCoord1fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEvalCoord1fv u ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEvalCoord1fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glEvalCoord1fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalCoord2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glEvalCoord2d u v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glEvalCoord2d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glEvalCoord2d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); glEvalCoord2d(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalCoord2dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEvalCoord2dv u ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEvalCoord2dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glEvalCoord2dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalCoord2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glEvalCoord2f u v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glEvalCoord2f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glEvalCoord2f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glEvalCoord2f(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalCoord2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEvalCoord2fv u ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEvalCoord2fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glEvalCoord2fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalMesh1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glEvalMesh1 mode i1 i2 ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEvalMesh1" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalMesh1" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glEvalMesh1" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalMesh1" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glEvalMesh1" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalMesh1" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glEvalMesh1(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalMesh2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; GLint arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glEvalMesh2 mode i1 i2 j1 j2 ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEvalMesh2" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalMesh2" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glEvalMesh2" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalMesh2" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glEvalMesh2" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalMesh2" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glEvalMesh2" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalMesh2" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glEvalMesh2" "', argument " "5"" of type '" "GLint""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalMesh2" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  glEvalMesh2(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalPoint1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEvalPoint1 i ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEvalPoint1" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalPoint1" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  glEvalPoint1(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glEvalPoint2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glEvalPoint2 i j ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEvalPoint2" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalPoint2" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glEvalPoint2" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEvalPoint2" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glEvalPoint2(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFeedbackBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glFeedbackBuffer size type buffer ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFeedbackBuffer" "', argument " "1"" of type '" "GLsizei""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFeedbackBuffer" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glFeedbackBuffer" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFeedbackBuffer" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glFeedbackBuffer" "', argument " "3"" of type '" "GLfloat *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glFeedbackBuffer(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFinish(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glFinish ") == TCL_ERROR) SWIG_fail; glFinish(); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFlush(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glFlush ") == TCL_ERROR) SWIG_fail; glFlush(); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFogf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glFogf pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFogf" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFogf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glFogf" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glFogf(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFogfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glFogfv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFogfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFogfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glFogfv" "', argument " "2"" of type '" "GLfloat const *""'");  } 
  arg2 = reinterpret_cast< GLfloat * >(argp2); glFogfv(arg1,(float const *)arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFogi(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glFogi pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFogi" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFogi" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glFogi" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFogi" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glFogi(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFogiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glFogiv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFogiv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFogiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glFogiv" "', argument " "2"" of type '" "GLint const *""'");  } 
  arg2 = reinterpret_cast< GLint * >(argp2); glFogiv(arg1,(int32_t const *)arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFrontFace(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glFrontFace mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFrontFace" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFrontFace" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glFrontFace(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFrustum(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; GLdouble arg5 ; GLdouble arg6 ; double val1 ; int ecode1 = 0 ;
  double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ;
  double val6 ; int ecode6 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glFrustum left right bottom top zNear zFar ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glFrustum" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glFrustum" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glFrustum" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glFrustum" "', argument " "4"" of type '" "GLdouble""'"); }  
  arg4 = static_cast< GLdouble >(val4); ecode5 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glFrustum" "', argument " "5"" of type '" "GLdouble""'"); }  
  arg5 = static_cast< GLdouble >(val5); ecode6 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "glFrustum" "', argument " "6"" of type '" "GLdouble""'"); }  
  arg6 = static_cast< GLdouble >(val6); glFrustum(arg1,arg2,arg3,arg4,arg5,arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGenLists(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; void *argp1 ; int res1 = 0 ; GLuint result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glGenLists range ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGenLists" "', argument " "1"" of type '" "GLsizei""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGenLists" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  }  result = glGenLists(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLuint(static_cast< const GLuint& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGenTextures(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGenTextures n textures ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGenTextures" "', argument " "1"" of type '" "GLsizei""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGenTextures" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGenTextures" "', argument " "2"" of type '" "GLuint *""'");  } 
  arg2 = reinterpret_cast< GLuint * >(argp2); glGenTextures(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetBooleanv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLboolean *arg2 = (GLboolean *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetBooleanv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetBooleanv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetBooleanv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetBooleanv" "', argument " "2"" of type '" "GLboolean *""'");  } 
  arg2 = reinterpret_cast< GLboolean * >(argp2); glGetBooleanv(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetClipPlane(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetClipPlane plane equation ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetClipPlane" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetClipPlane" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetClipPlane" "', argument " "2"" of type '" "GLdouble *""'");  } 
  arg2 = reinterpret_cast< GLdouble * >(argp2); glGetClipPlane(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetColorTable(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLenum arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetColorTable target format type table ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetColorTable" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetColorTable" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetColorTable" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetColorTable" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetColorTable" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetColorTable" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetColorTable" "', argument " "4"" of type '" "GLvoid *""'");  } 
  glGetColorTable(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetColorTableParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetColorTableParameterfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetColorTableParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetColorTableParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetColorTableParameterfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetColorTableParameterfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetColorTableParameterfv" "', argument " "3"" of type '" "GLfloat *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glGetColorTableParameterfv(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetColorTableParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetColorTableParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetColorTableParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetColorTableParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetColorTableParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetColorTableParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetColorTableParameteriv" "', argument " "3"" of type '" "GLint *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glGetColorTableParameteriv(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetConvolutionFilter(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLenum arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetConvolutionFilter target format type image ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetConvolutionFilter" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetConvolutionFilter" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetConvolutionFilter" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetConvolutionFilter" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetConvolutionFilter" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetConvolutionFilter" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetConvolutionFilter" "', argument " "4"" of type '" "GLvoid *""'");  }
   glGetConvolutionFilter(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetConvolutionParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetConvolutionParameterfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetConvolutionParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetConvolutionParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetConvolutionParameterfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetConvolutionParameterfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetConvolutionParameterfv" "', argument " "3"" of type '" "GLfloat *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glGetConvolutionParameterfv(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetConvolutionParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetConvolutionParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetConvolutionParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetConvolutionParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetConvolutionParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetConvolutionParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetConvolutionParameteriv" "', argument " "3"" of type '" "GLint *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glGetConvolutionParameteriv(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glGetDoublev(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetDoublev pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetDoublev" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetDoublev" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetDoublev" "', argument " "2"" of type '" "GLdouble *""'");  } 
  arg2 = reinterpret_cast< GLdouble * >(argp2); glGetDoublev(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetError(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum result; if (SWIG_GetArgs(interp, objc, objv,":glGetError ") == TCL_ERROR) SWIG_fail; result = glGetError();
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLenum(static_cast< const GLenum& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetFloatv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetFloatv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetFloatv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetFloatv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetFloatv" "', argument " "2"" of type '" "GLfloat *""'");  } 
  arg2 = reinterpret_cast< GLfloat * >(argp2); glGetFloatv(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetHistogram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLboolean arg2 ; GLenum arg3 ; GLenum arg4 ; GLvoid *arg5 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; int res5 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glGetHistogram target reset format type values ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetHistogram" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetHistogram" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetHistogram" "', argument " "2"" of type '" "GLboolean""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetHistogram" "', argument " "2"" of type '" "GLboolean""'"); }
     else { arg2 = *(reinterpret_cast< GLboolean * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetHistogram" "', argument " "3"" of type '" "GLenum""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetHistogram" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetHistogram" "', argument " "4"" of type '" "GLenum""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetHistogram" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  } 
  res5 = SWIG_ConvertPtr(objv[5],SWIG_as_voidptrptr(&arg5), 0, 0); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glGetHistogram" "', argument " "5"" of type '" "GLvoid *""'");  } 
  glGetHistogram(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetHistogramParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetHistogramParameterfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetHistogramParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetHistogramParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetHistogramParameterfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetHistogramParameterfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetHistogramParameterfv" "', argument " "3"" of type '" "GLfloat *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glGetHistogramParameterfv(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetHistogramParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetHistogramParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetHistogramParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetHistogramParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetHistogramParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetHistogramParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetHistogramParameteriv" "', argument " "3"" of type '" "GLint *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glGetHistogramParameteriv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetIntegerv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetIntegerv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetIntegerv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetIntegerv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetIntegerv" "', argument " "2"" of type '" "GLint *""'");  } 
  arg2 = reinterpret_cast< GLint * >(argp2); glGetIntegerv(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetLightfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetLightfv light pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetLightfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetLightfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetLightfv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetLightfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetLightfv" "', argument " "3"" of type '" "GLfloat *""'");  } 
  arg3 = reinterpret_cast< GLfloat * >(argp3); glGetLightfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetLightiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetLightiv light pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetLightiv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetLightiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetLightiv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetLightiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetLightiv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetLightiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetMapdv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLdouble *arg3 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetMapdv target query v ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetMapdv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMapdv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetMapdv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMapdv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetMapdv" "', argument " "3"" of type '" "GLdouble *""'");  } 
  arg3 = reinterpret_cast< GLdouble * >(argp3); glGetMapdv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetMapfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetMapfv target query v ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetMapfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMapfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetMapfv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMapfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetMapfv" "', argument " "3"" of type '" "GLfloat *""'");  } 
  arg3 = reinterpret_cast< GLfloat * >(argp3); glGetMapfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetMapiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetMapiv target query v ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetMapiv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMapiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetMapiv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMapiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetMapiv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetMapiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetMaterialfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetMaterialfv face pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetMaterialfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMaterialfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetMaterialfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMaterialfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetMaterialfv" "', argument " "3"" of type '" "GLfloat *""'");  } 
  arg3 = reinterpret_cast< GLfloat * >(argp3); glGetMaterialfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetMaterialiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetMaterialiv face pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetMaterialiv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMaterialiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetMaterialiv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMaterialiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetMaterialiv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetMaterialiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetMinmax(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLboolean arg2 ; GLenum arg3 ; GLenum arg4 ; GLvoid *arg5 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; int res5 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glGetMinmax target reset format type values ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetMinmax" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMinmax" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetMinmax" "', argument " "2"" of type '" "GLboolean""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMinmax" "', argument " "2"" of type '" "GLboolean""'"); }
     else { arg2 = *(reinterpret_cast< GLboolean * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetMinmax" "', argument " "3"" of type '" "GLenum""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMinmax" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetMinmax" "', argument " "4"" of type '" "GLenum""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMinmax" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  } 
  res5 = SWIG_ConvertPtr(objv[5],SWIG_as_voidptrptr(&arg5), 0, 0); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glGetMinmax" "', argument " "5"" of type '" "GLvoid *""'");  } 
  glGetMinmax(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetMinmaxParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetMinmaxParameterfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetMinmaxParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMinmaxParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetMinmaxParameterfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMinmaxParameterfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetMinmaxParameterfv" "', argument " "3"" of type '" "GLfloat *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glGetMinmaxParameterfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetMinmaxParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetMinmaxParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetMinmaxParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMinmaxParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetMinmaxParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetMinmaxParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetMinmaxParameteriv" "', argument " "3"" of type '" "GLint *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glGetMinmaxParameteriv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetPixelMapfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetPixelMapfv map values ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetPixelMapfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetPixelMapfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetPixelMapfv" "', argument " "2"" of type '" "GLfloat *""'");  } 
  arg2 = reinterpret_cast< GLfloat * >(argp2); glGetPixelMapfv(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetPixelMapuiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetPixelMapuiv map values ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetPixelMapuiv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetPixelMapuiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetPixelMapuiv" "', argument " "2"" of type '" "GLuint *""'");  } 
  arg2 = reinterpret_cast< GLuint * >(argp2); glGetPixelMapuiv(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetPixelMapusv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLushort *arg2 = (GLushort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetPixelMapusv map values ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetPixelMapusv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetPixelMapusv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetPixelMapusv" "', argument " "2"" of type '" "GLushort *""'");  }
   arg2 = reinterpret_cast< GLushort * >(argp2); glGetPixelMapusv(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetPointerv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLvoid **arg2 = (GLvoid **) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetPointerv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetPointerv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetPointerv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_p_void, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetPointerv" "', argument " "2"" of type '" "GLvoid **""'");  } 
  arg2 = reinterpret_cast< GLvoid ** >(argp2); glGetPointerv(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetPolygonStipple(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte *arg1 = (GLubyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glGetPolygonStipple mask ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetPolygonStipple" "', argument " "1"" of type '" "GLubyte *""'");  }
   arg1 = reinterpret_cast< GLubyte * >(argp1); glGetPolygonStipple(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetSeparableFilter(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLenum arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; GLvoid *arg5 = (GLvoid *) 0 ;
  GLvoid *arg6 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  int res4 ; int res5 ; int res6 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glGetSeparableFilter target format type row column span ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetSeparableFilter" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetSeparableFilter" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetSeparableFilter" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetSeparableFilter" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetSeparableFilter" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetSeparableFilter" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetSeparableFilter" "', argument " "4"" of type '" "GLvoid *""'");  }
   res5 = SWIG_ConvertPtr(objv[5],SWIG_as_voidptrptr(&arg5), 0, 0); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glGetSeparableFilter" "', argument " "5"" of type '" "GLvoid *""'");  }
   res6 = SWIG_ConvertPtr(objv[6],SWIG_as_voidptrptr(&arg6), 0, 0); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glGetSeparableFilter" "', argument " "6"" of type '" "GLvoid *""'");  }
   glGetSeparableFilter(arg1,arg2,arg3,arg4,arg5,arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetString(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ; GLubyte *result = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glGetString name ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetString" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetString" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  result = (GLubyte *)glGetString(arg1);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_uint8_t,0)); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glGetTexEnvfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetTexEnvfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexEnvfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexEnvfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexEnvfv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexEnvfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexEnvfv" "', argument " "3"" of type '" "GLfloat *""'");  } 
  arg3 = reinterpret_cast< GLfloat * >(argp3); glGetTexEnvfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetTexEnviv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetTexEnviv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexEnviv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexEnviv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexEnviv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexEnviv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexEnviv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetTexEnviv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetTexGendv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLdouble *arg3 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetTexGendv coord pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexGendv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexGendv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexGendv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexGendv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexGendv" "', argument " "3"" of type '" "GLdouble *""'");  } 
  arg3 = reinterpret_cast< GLdouble * >(argp3); glGetTexGendv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetTexGenfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetTexGenfv coord pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexGenfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexGenfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexGenfv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexGenfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexGenfv" "', argument " "3"" of type '" "GLfloat *""'");  } 
  arg3 = reinterpret_cast< GLfloat * >(argp3); glGetTexGenfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetTexGeniv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetTexGeniv coord pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexGeniv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexGeniv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexGeniv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexGeniv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexGeniv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetTexGeniv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetTexImage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLenum arg3 ; GLenum arg4 ; GLvoid *arg5 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; int res5 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glGetTexImage target level format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexImage" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexImage" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexImage" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexImage" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexImage" "', argument " "3"" of type '" "GLenum""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexImage" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetTexImage" "', argument " "4"" of type '" "GLenum""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexImage" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  } 
  res5 = SWIG_ConvertPtr(objv[5],SWIG_as_voidptrptr(&arg5), 0, 0); if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glGetTexImage" "', argument " "5"" of type '" "GLvoid *""'");  } 
  glGetTexImage(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetTexLevelParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLenum arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetTexLevelParameterfv target level pname params ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexLevelParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexLevelParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexLevelParameterfv" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexLevelParameterfv" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexLevelParameterfv" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexLevelParameterfv" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetTexLevelParameterfv" "', argument " "4"" of type '" "GLfloat *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glGetTexLevelParameterfv(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetTexLevelParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLenum arg3 ; GLint *arg4 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetTexLevelParameteriv target level pname params ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexLevelParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexLevelParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexLevelParameteriv" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexLevelParameteriv" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexLevelParameteriv" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexLevelParameteriv" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetTexLevelParameteriv" "', argument " "4"" of type '" "GLint *""'");  }
   arg4 = reinterpret_cast< GLint * >(argp4); glGetTexLevelParameteriv(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetTexParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetTexParameterfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexParameterfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexParameterfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexParameterfv" "', argument " "3"" of type '" "GLfloat *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glGetTexParameterfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetTexParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetTexParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetTexParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetTexParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetTexParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetTexParameteriv" "', argument " "3"" of type '" "GLint *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glGetTexParameteriv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glHint(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glHint target mode ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glHint" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glHint" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glHint" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glHint" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  glHint(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glHistogram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLsizei arg2 ; GLenum arg3 ; GLboolean arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glHistogram target width internalformat sink ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glHistogram" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glHistogram" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glHistogram" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glHistogram" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glHistogram" "', argument " "3"" of type '" "GLenum""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glHistogram" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glHistogram" "', argument " "4"" of type '" "GLboolean""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glHistogram" "', argument " "4"" of type '" "GLboolean""'"); }
     else { arg4 = *(reinterpret_cast< GLboolean * >(argp4)); }  }  glHistogram(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexMask(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexMask mask ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexMask" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIndexMask" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glIndexMask(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLsizei arg2 ; GLvoid *arg3 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  int res3 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glIndexPointer type stride pointer ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexPointer" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIndexPointer" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glIndexPointer" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIndexPointer" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glIndexPointer" "', argument " "3"" of type '" "GLvoid const *""'");  }
   glIndexPointer(arg1,arg2,(void const *)arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; double val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexd c ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glIndexd" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); glIndexd(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexdv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexdv c ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexdv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glIndexdv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; float val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexf c ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glIndexf" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); glIndexf(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexfv c ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexfv" "', argument " "1"" of type '" "GLfloat const *""'");  } 
  arg1 = reinterpret_cast< GLfloat * >(argp1); glIndexfv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexi(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexi c ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexi" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIndexi" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  glIndexi(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexiv c ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexiv" "', argument " "1"" of type '" "GLint const *""'");  } 
  arg1 = reinterpret_cast< GLint * >(argp1); glIndexiv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexs(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexs c ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexs" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIndexs" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  glIndexs(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexsv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexsv c ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexsv" "', argument " "1"" of type '" "GLshort const *""'");  } 
  arg1 = reinterpret_cast< GLshort * >(argp1); glIndexsv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexub(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexub c ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexub" "', argument " "1"" of type '" "GLubyte""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIndexub" "', argument " "1"" of type '" "GLubyte""'"); }
     else { arg1 = *(reinterpret_cast< GLubyte * >(argp1)); }  }  glIndexub(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIndexubv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte *arg1 = (GLubyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIndexubv c ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIndexubv" "', argument " "1"" of type '" "GLubyte const *""'");  }
   arg1 = reinterpret_cast< GLubyte * >(argp1); glIndexubv((uint8_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glInitNames(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glInitNames ") == TCL_ERROR) SWIG_fail; glInitNames(); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glInterleavedArrays(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLsizei arg2 ; GLvoid *arg3 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; int res3 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glInterleavedArrays format stride pointer ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glInterleavedArrays" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glInterleavedArrays" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glInterleavedArrays" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glInterleavedArrays" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glInterleavedArrays" "', argument " "3"" of type '" "GLvoid const *""'");  }
   glInterleavedArrays(arg1,arg2,(void const *)arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIsEnabled(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIsEnabled cap ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIsEnabled" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIsEnabled" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  result = glIsEnabled(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIsList(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIsList list ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIsList" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIsList" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  result = glIsList(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIsTexture(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIsTexture texture ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIsTexture" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIsTexture" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  result = glIsTexture(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLightModelf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glLightModelf pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLightModelf" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightModelf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glLightModelf" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glLightModelf(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLightModelfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glLightModelfv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLightModelfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightModelfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glLightModelfv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glLightModelfv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glLightModeli(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glLightModeli pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLightModeli" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightModeli" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glLightModeli" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightModeli" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glLightModeli(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glLightModeliv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glLightModeliv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLightModeliv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightModeliv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glLightModeliv" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); glLightModeliv(arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glLightf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glLightf light pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLightf" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glLightf" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightf" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glLightf" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glLightf(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLightfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glLightfv light pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLightfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glLightfv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glLightfv" "', argument " "3"" of type '" "GLfloat const *""'");  } 
  arg3 = reinterpret_cast< GLfloat * >(argp3); glLightfv(arg1,arg2,(float const *)arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLighti(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glLighti light pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLighti" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLighti" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glLighti" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLighti" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glLighti" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLighti" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glLighti(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glLightiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glLightiv light pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLightiv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glLightiv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLightiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glLightiv" "', argument " "3"" of type '" "GLint const *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glLightiv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLineStipple(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLushort arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glLineStipple factor pattern ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLineStipple" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLineStipple" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glLineStipple" "', argument " "2"" of type '" "GLushort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLineStipple" "', argument " "2"" of type '" "GLushort""'"); }
     else { arg2 = *(reinterpret_cast< GLushort * >(argp2)); }  }  glLineStipple(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glLineWidth(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; float val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glLineWidth width ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glLineWidth" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); glLineWidth(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glListBase(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glListBase base ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glListBase" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glListBase" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glListBase(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLoadIdentity(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glLoadIdentity ") == TCL_ERROR) SWIG_fail; glLoadIdentity(); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glLoadMatrixd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glLoadMatrixd m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLoadMatrixd" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glLoadMatrixd((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLoadMatrixf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glLoadMatrixf m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLoadMatrixf" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glLoadMatrixf((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLoadName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glLoadName name ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLoadName" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLoadName" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glLoadName(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glLogicOp(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glLogicOp opcode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLogicOp" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLogicOp" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glLogicOp(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMap1d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLint arg4 ; GLint arg5 ; GLdouble *arg6 = (GLdouble *) 0 ; void *argp1 ;
  int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; void *argp6 = 0 ; int res6 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glMap1d target u1 u2 stride order points ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMap1d" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap1d" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMap1d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMap1d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); { res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMap1d" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap1d" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glMap1d" "', argument " "5"" of type '" "GLint""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap1d" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  } 
  res6 = SWIG_ConvertPtr(objv[6], &argp6,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glMap1d" "', argument " "6"" of type '" "GLdouble const *""'");  } 
  arg6 = reinterpret_cast< GLdouble * >(argp6); glMap1d(arg1,arg2,arg3,arg4,arg5,(double const *)arg6); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMap1f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLint arg4 ; GLint arg5 ; GLfloat *arg6 = (GLfloat *) 0 ; void *argp1 ;
  int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; void *argp6 = 0 ; int res6 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glMap1f target u1 u2 stride order points ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMap1f" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap1f" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMap1f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMap1f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); { res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMap1f" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap1f" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glMap1f" "', argument " "5"" of type '" "GLint""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap1f" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  } 
  res6 = SWIG_ConvertPtr(objv[6], &argp6,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glMap1f" "', argument " "6"" of type '" "GLfloat const *""'");  } 
  arg6 = reinterpret_cast< GLfloat * >(argp6); glMap1f(arg1,arg2,arg3,arg4,arg5,(float const *)arg6); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMap2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLint arg4 ; GLint arg5 ; GLdouble arg6 ; GLdouble arg7 ; GLint arg8 ;
  GLint arg9 ; GLdouble *arg10 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; double val6 ; int ecode6 = 0 ; double val7 ;
  int ecode7 = 0 ; void *argp8 ; int res8 = 0 ; void *argp9 ; int res9 = 0 ; void *argp10 = 0 ; int res10 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooooooo:glMap2d target u1 u2 ustride uorder v1 v2 vstride vorder points ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMap2d" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2d" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMap2d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMap2d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); { res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMap2d" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2d" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glMap2d" "', argument " "5"" of type '" "GLint""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2d" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  ecode6 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "glMap2d" "', argument " "6"" of type '" "GLdouble""'"); }  
  arg6 = static_cast< GLdouble >(val6); ecode7 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[7], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "glMap2d" "', argument " "7"" of type '" "GLdouble""'"); }  
  arg7 = static_cast< GLdouble >(val7); { res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glMap2d" "', argument " "8"" of type '" "GLint""'");  }   
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2d" "', argument " "8"" of type '" "GLint""'"); }
     else { arg8 = *(reinterpret_cast< GLint * >(argp8)); }  }  {
    res9 = SWIG_ConvertPtr(objv[9], &argp9, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glMap2d" "', argument " "9"" of type '" "GLint""'");  }   
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2d" "', argument " "9"" of type '" "GLint""'"); }
     else { arg9 = *(reinterpret_cast< GLint * >(argp9)); }  } 
  res10 = SWIG_ConvertPtr(objv[10], &argp10,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "glMap2d" "', argument " "10"" of type '" "GLdouble const *""'");  }
   arg10 = reinterpret_cast< GLdouble * >(argp10); glMap2d(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,(double const *)arg10);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMap2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLint arg4 ; GLint arg5 ; GLfloat arg6 ; GLfloat arg7 ; GLint arg8 ; GLint arg9 ;
  GLfloat *arg10 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ; int ecode3 = 0 ;
  void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; float val6 ; int ecode6 = 0 ; float val7 ; int ecode7 = 0 ;
  void *argp8 ; int res8 = 0 ; void *argp9 ; int res9 = 0 ; void *argp10 = 0 ; int res10 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooooooo:glMap2f target u1 u2 ustride uorder v1 v2 vstride vorder points ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMap2f" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2f" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMap2f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMap2f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); { res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMap2f" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2f" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glMap2f" "', argument " "5"" of type '" "GLint""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2f" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  ecode6 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "glMap2f" "', argument " "6"" of type '" "GLfloat""'"); }  
  arg6 = static_cast< GLfloat >(val6); ecode7 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[7], &val7); if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "glMap2f" "', argument " "7"" of type '" "GLfloat""'"); }  
  arg7 = static_cast< GLfloat >(val7); { res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glMap2f" "', argument " "8"" of type '" "GLint""'");  }   
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2f" "', argument " "8"" of type '" "GLint""'"); }
     else { arg8 = *(reinterpret_cast< GLint * >(argp8)); }  }  {
    res9 = SWIG_ConvertPtr(objv[9], &argp9, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glMap2f" "', argument " "9"" of type '" "GLint""'");  }   
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMap2f" "', argument " "9"" of type '" "GLint""'"); }
     else { arg9 = *(reinterpret_cast< GLint * >(argp9)); }  } 
  res10 = SWIG_ConvertPtr(objv[10], &argp10,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "glMap2f" "', argument " "10"" of type '" "GLfloat const *""'");  } 
  arg10 = reinterpret_cast< GLfloat * >(argp10); glMap2f(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,(float const *)arg10);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMapGrid1d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLdouble arg2 ; GLdouble arg3 ; void *argp1 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMapGrid1d un u1 u2 ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMapGrid1d" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMapGrid1d" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMapGrid1d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMapGrid1d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glMapGrid1d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMapGrid1f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLfloat arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMapGrid1f un u1 u2 ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMapGrid1f" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMapGrid1f" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMapGrid1f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMapGrid1f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glMapGrid1f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMapGrid2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLint arg4 ; GLdouble arg5 ; GLdouble arg6 ; void *argp1 ; int res1 = 0 ;
  double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; void *argp4 ; int res4 = 0 ; double val5 ; int ecode5 = 0 ;
  double val6 ; int ecode6 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glMapGrid2d un u1 u2 vn v1 v2 ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMapGrid2d" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMapGrid2d" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMapGrid2d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMapGrid2d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); { res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMapGrid2d" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMapGrid2d" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  ecode5 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glMapGrid2d" "', argument " "5"" of type '" "GLdouble""'"); }  
  arg5 = static_cast< GLdouble >(val5); ecode6 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "glMapGrid2d" "', argument " "6"" of type '" "GLdouble""'"); }  
  arg6 = static_cast< GLdouble >(val6); glMapGrid2d(arg1,arg2,arg3,arg4,arg5,arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMapGrid2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLint arg4 ; GLfloat arg5 ; GLfloat arg6 ; void *argp1 ; int res1 = 0 ;
  float val2 ; int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; void *argp4 ; int res4 = 0 ; float val5 ; int ecode5 = 0 ;
  float val6 ; int ecode6 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glMapGrid2f un u1 u2 vn v1 v2 ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMapGrid2f" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMapGrid2f" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMapGrid2f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMapGrid2f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); { res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMapGrid2f" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMapGrid2f" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  ecode5 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glMapGrid2f" "', argument " "5"" of type '" "GLfloat""'"); }  
  arg5 = static_cast< GLfloat >(val5); ecode6 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[6], &val6); if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "glMapGrid2f" "', argument " "6"" of type '" "GLfloat""'"); }  
  arg6 = static_cast< GLfloat >(val6); glMapGrid2f(arg1,arg2,arg3,arg4,arg5,arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMaterialf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMaterialf face pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMaterialf" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMaterialf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMaterialf" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMaterialf" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMaterialf" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glMaterialf(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMaterialfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMaterialfv face pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMaterialfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMaterialfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMaterialfv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMaterialfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMaterialfv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glMaterialfv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMateriali(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMateriali face pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMateriali" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMateriali" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMateriali" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMateriali" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMateriali" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMateriali" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glMateriali(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMaterialiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMaterialiv face pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMaterialiv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMaterialiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMaterialiv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMaterialiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMaterialiv" "', argument " "3"" of type '" "GLint const *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glMaterialiv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMatrixMode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glMatrixMode mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMatrixMode" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMatrixMode" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glMatrixMode(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMinmax(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLboolean arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMinmax target internalformat sink ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMinmax" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMinmax" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMinmax" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMinmax" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMinmax" "', argument " "3"" of type '" "GLboolean""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMinmax" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  }  glMinmax(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultMatrixd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glMultMatrixd m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultMatrixd" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glMultMatrixd((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultMatrixf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glMultMatrixf m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultMatrixf" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glMultMatrixf((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNewList(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLenum arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glNewList list mode ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNewList" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNewList" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glNewList" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNewList" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  glNewList(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3b(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbyte arg1 ; GLbyte arg2 ; GLbyte arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glNormal3b nx ny nz ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormal3b" "', argument " "1"" of type '" "GLbyte""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3b" "', argument " "1"" of type '" "GLbyte""'"); }
     else { arg1 = *(reinterpret_cast< GLbyte * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glNormal3b" "', argument " "2"" of type '" "GLbyte""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3b" "', argument " "2"" of type '" "GLbyte""'"); }
     else { arg2 = *(reinterpret_cast< GLbyte * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glNormal3b" "', argument " "3"" of type '" "GLbyte""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3b" "', argument " "3"" of type '" "GLbyte""'"); }
     else { arg3 = *(reinterpret_cast< GLbyte * >(argp3)); }  }  glNormal3b(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3bv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbyte *arg1 = (GLbyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glNormal3bv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormal3bv" "', argument " "1"" of type '" "GLbyte const *""'");  }
   arg1 = reinterpret_cast< GLbyte * >(argp1); glNormal3bv((int8_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glNormal3d nx ny nz ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glNormal3d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glNormal3d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glNormal3d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glNormal3d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glNormal3dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormal3dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glNormal3dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glNormal3f nx ny nz ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glNormal3f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glNormal3f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glNormal3f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glNormal3f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glNormal3fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormal3fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glNormal3fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glNormal3i nx ny nz ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormal3i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glNormal3i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glNormal3i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glNormal3i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glNormal3iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormal3iv" "', argument " "1"" of type '" "GLint const *""'");  } 
  arg1 = reinterpret_cast< GLint * >(argp1); glNormal3iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glNormal3s nx ny nz ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormal3s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glNormal3s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glNormal3s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormal3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glNormal3s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glNormal3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glNormal3sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormal3sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glNormal3sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glNormalPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLsizei arg2 ; GLvoid *arg3 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  int res3 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glNormalPointer type stride pointer ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glNormalPointer" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormalPointer" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glNormalPointer" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glNormalPointer" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glNormalPointer" "', argument " "3"" of type '" "GLvoid const *""'");  }
   glNormalPointer(arg1,arg2,(void const *)arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glOrtho(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; GLdouble arg5 ; GLdouble arg6 ; double val1 ; int ecode1 = 0 ;
  double val2 ; int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ;
  double val6 ; int ecode6 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glOrtho left right bottom top zNear zFar ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glOrtho" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glOrtho" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glOrtho" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glOrtho" "', argument " "4"" of type '" "GLdouble""'"); }  
  arg4 = static_cast< GLdouble >(val4); ecode5 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glOrtho" "', argument " "5"" of type '" "GLdouble""'"); }  
  arg5 = static_cast< GLdouble >(val5); ecode6 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "glOrtho" "', argument " "6"" of type '" "GLdouble""'"); }  
  arg6 = static_cast< GLdouble >(val6); glOrtho(arg1,arg2,arg3,arg4,arg5,arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPassThrough(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; float val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glPassThrough token ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glPassThrough" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); glPassThrough(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPixelMapfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glPixelMapfv map mapsize values ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPixelMapfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelMapfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPixelMapfv" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelMapfv" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glPixelMapfv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glPixelMapfv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPixelMapuiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLuint *arg3 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glPixelMapuiv map mapsize values ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPixelMapuiv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelMapuiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPixelMapuiv" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelMapuiv" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glPixelMapuiv" "', argument " "3"" of type '" "GLuint const *""'");  }
   arg3 = reinterpret_cast< GLuint * >(argp3); glPixelMapuiv(arg1,arg2,(uint32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPixelMapusv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLushort *arg3 = (GLushort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glPixelMapusv map mapsize values ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPixelMapusv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelMapusv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPixelMapusv" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelMapusv" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_uint16_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glPixelMapusv" "', argument " "3"" of type '" "GLushort const *""'");  }
   arg3 = reinterpret_cast< GLushort * >(argp3); glPixelMapusv(arg1,arg2,(uint16_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPixelStoref(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPixelStoref pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPixelStoref" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelStoref" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glPixelStoref" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glPixelStoref(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPixelStorei(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPixelStorei pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPixelStorei" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelStorei" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPixelStorei" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelStorei" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glPixelStorei(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPixelTransferf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPixelTransferf pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPixelTransferf" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelTransferf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glPixelTransferf" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); glPixelTransferf(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPixelTransferi(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPixelTransferi pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPixelTransferi" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelTransferi" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPixelTransferi" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPixelTransferi" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glPixelTransferi(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPixelZoom(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPixelZoom xfactor yfactor ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glPixelZoom" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glPixelZoom" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glPixelZoom(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPointSize(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; float val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glPointSize size ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glPointSize" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); glPointSize(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPolygonMode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPolygonMode face mode ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPolygonMode" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPolygonMode" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPolygonMode" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPolygonMode" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  glPolygonMode(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPolygonOffset(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPolygonOffset factor units ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glPolygonOffset" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glPolygonOffset" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glPolygonOffset(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPolygonStipple(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte *arg1 = (GLubyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glPolygonStipple mask ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPolygonStipple" "', argument " "1"" of type '" "GLubyte const *""'");  }
   arg1 = reinterpret_cast< GLubyte * >(argp1); glPolygonStipple((uint8_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPopAttrib(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glPopAttrib ") == TCL_ERROR) SWIG_fail; glPopAttrib(); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPopClientAttrib(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glPopClientAttrib ") == TCL_ERROR) SWIG_fail; glPopClientAttrib(); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPopMatrix(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glPopMatrix ") == TCL_ERROR) SWIG_fail; glPopMatrix(); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPopName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glPopName ") == TCL_ERROR) SWIG_fail; glPopName(); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glPrioritizeTextures(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; GLclampf *arg3 = (GLclampf *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glPrioritizeTextures n textures priorities ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPrioritizeTextures" "', argument " "1"" of type '" "GLsizei""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPrioritizeTextures" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPrioritizeTextures" "', argument " "2"" of type '" "GLuint const *""'");  }
   arg2 = reinterpret_cast< GLuint * >(argp2); res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glPrioritizeTextures" "', argument " "3"" of type '" "GLclampf const *""'");  }
   arg3 = reinterpret_cast< GLclampf * >(argp3); glPrioritizeTextures(arg1,(uint32_t const *)arg2,(float const *)arg3);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPushAttrib(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbitfield arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glPushAttrib mask ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPushAttrib" "', argument " "1"" of type '" "GLbitfield""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPushAttrib" "', argument " "1"" of type '" "GLbitfield""'"); }
     else { arg1 = *(reinterpret_cast< GLbitfield * >(argp1)); }  }  glPushAttrib(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPushClientAttrib(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbitfield arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glPushClientAttrib mask ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPushClientAttrib" "', argument " "1"" of type '" "GLbitfield""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPushClientAttrib" "', argument " "1"" of type '" "GLbitfield""'"); }
     else { arg1 = *(reinterpret_cast< GLbitfield * >(argp1)); }  }  glPushClientAttrib(arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPushMatrix(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  if (SWIG_GetArgs(interp, objc, objv,":glPushMatrix ") == TCL_ERROR) SWIG_fail; glPushMatrix(); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPushName(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glPushName name ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPushName" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPushName" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glPushName(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glRasterPos2d x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRasterPos2d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRasterPos2d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); glRasterPos2d(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos2dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos2dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos2dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glRasterPos2dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glRasterPos2f x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRasterPos2f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRasterPos2f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glRasterPos2f(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos2fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos2fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glRasterPos2fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos2i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glRasterPos2i x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos2i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos2i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRasterPos2i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos2i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glRasterPos2i(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos2iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos2iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos2iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glRasterPos2iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos2s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glRasterPos2s x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos2s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos2s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRasterPos2s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos2s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  glRasterPos2s(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos2sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos2sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos2sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glRasterPos2sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glRasterPos3d x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRasterPos3d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRasterPos3d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glRasterPos3d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glRasterPos3d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos3dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos3dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glRasterPos3dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glRasterPos3f x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRasterPos3f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRasterPos3f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glRasterPos3f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glRasterPos3f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos3fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos3fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glRasterPos3fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glRasterPos3i x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos3i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos3i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRasterPos3i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glRasterPos3i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glRasterPos3i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos3iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos3iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glRasterPos3iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glRasterPos3s x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos3s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos3s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRasterPos3s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glRasterPos3s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glRasterPos3s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos3sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos3sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glRasterPos3sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos4d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRasterPos4d x y z w ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRasterPos4d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRasterPos4d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glRasterPos4d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glRasterPos4d" "', argument " "4"" of type '" "GLdouble""'"); }  
  arg4 = static_cast< GLdouble >(val4); glRasterPos4d(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos4dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos4dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos4dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glRasterPos4dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos4f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRasterPos4f x y z w ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRasterPos4f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRasterPos4f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glRasterPos4f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glRasterPos4f" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); glRasterPos4f(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos4fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos4fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glRasterPos4fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos4i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRasterPos4i x y z w ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos4i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos4i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRasterPos4i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos4i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glRasterPos4i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos4i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glRasterPos4i" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos4i" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  glRasterPos4i(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos4iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos4iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos4iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glRasterPos4iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos4s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRasterPos4s x y z w ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos4s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos4s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRasterPos4s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos4s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glRasterPos4s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos4s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glRasterPos4s" "', argument " "4"" of type '" "GLshort""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRasterPos4s" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  glRasterPos4s(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRasterPos4sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRasterPos4sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRasterPos4sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glRasterPos4sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glReadBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glReadBuffer mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glReadBuffer" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glReadBuffer" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glReadBuffer(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glReadPixels(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLsizei arg3 ; GLsizei arg4 ; GLenum arg5 ; GLenum arg6 ; GLvoid *arg7 = (GLvoid *) 0 ;
  void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; int res7 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glReadPixels x y width height format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glReadPixels" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glReadPixels" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glReadPixels" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glReadPixels" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glReadPixels" "', argument " "3"" of type '" "GLsizei""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glReadPixels" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glReadPixels" "', argument " "4"" of type '" "GLsizei""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glReadPixels" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glReadPixels" "', argument " "5"" of type '" "GLenum""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glReadPixels" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glReadPixels" "', argument " "6"" of type '" "GLenum""'");  }   
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glReadPixels" "', argument " "6"" of type '" "GLenum""'"); }
     else { arg6 = *(reinterpret_cast< GLenum * >(argp6)); }  } 
  res7 = SWIG_ConvertPtr(objv[7],SWIG_as_voidptrptr(&arg7), 0, 0); if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glReadPixels" "', argument " "7"" of type '" "GLvoid *""'");  } 
  glReadPixels(arg1,arg2,arg3,arg4,arg5,arg6,arg7); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRectd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRectd x1 y1 x2 y2 ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRectd" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRectd" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glRectd" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glRectd" "', argument " "4"" of type '" "GLdouble""'"); }  
  arg4 = static_cast< GLdouble >(val4); glRectd(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRectdv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; if (SWIG_GetArgs(interp, objc, objv,"oo:glRectdv v1 v2 ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRectdv" "', argument " "1"" of type '" "GLdouble const *""'");  } 
  arg1 = reinterpret_cast< GLdouble * >(argp1); res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRectdv" "', argument " "2"" of type '" "GLdouble const *""'");  } 
  arg2 = reinterpret_cast< GLdouble * >(argp2); glRectdv((double const *)arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRectf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRectf x1 y1 x2 y2 ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRectf" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRectf" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glRectf" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glRectf" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); glRectf(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRectfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; if (SWIG_GetArgs(interp, objc, objv,"oo:glRectfv v1 v2 ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRectfv" "', argument " "1"" of type '" "GLfloat const *""'");  } 
  arg1 = reinterpret_cast< GLfloat * >(argp1); res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRectfv" "', argument " "2"" of type '" "GLfloat const *""'");  } 
  arg2 = reinterpret_cast< GLfloat * >(argp2); glRectfv((float const *)arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRecti(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRecti x1 y1 x2 y2 ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRecti" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRecti" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRecti" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRecti" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glRecti" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRecti" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glRecti" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRecti" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  glRecti(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRectiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; GLint *arg2 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glRectiv v1 v2 ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRectiv" "', argument " "1"" of type '" "GLint const *""'");  } 
  arg1 = reinterpret_cast< GLint * >(argp1); res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRectiv" "', argument " "2"" of type '" "GLint const *""'");  } 
  arg2 = reinterpret_cast< GLint * >(argp2); glRectiv((int32_t const *)arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRects(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRects x1 y1 x2 y2 ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRects" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRects" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRects" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRects" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glRects" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRects" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glRects" "', argument " "4"" of type '" "GLshort""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRects" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  glRects(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRectsv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ; void *argp2 = 0 ;
  int res2 = 0 ; if (SWIG_GetArgs(interp, objc, objv,"oo:glRectsv v1 v2 ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRectsv" "', argument " "1"" of type '" "GLshort const *""'");  } 
  arg1 = reinterpret_cast< GLshort * >(argp1); res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glRectsv" "', argument " "2"" of type '" "GLshort const *""'");  } 
  arg2 = reinterpret_cast< GLshort * >(argp2); glRectsv((int16_t const *)arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glRenderMode(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ; GLint result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glRenderMode mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glRenderMode" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glRenderMode" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  result = glRenderMode(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLint(static_cast< const GLint& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glResetHistogram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glResetHistogram target ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glResetHistogram" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glResetHistogram" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glResetHistogram(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glResetMinmax(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glResetMinmax target ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glResetMinmax" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glResetMinmax" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glResetMinmax(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRotated(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRotated angle x y z ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRotated" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRotated" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glRotated" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glRotated" "', argument " "4"" of type '" "GLdouble""'"); }  
  arg4 = static_cast< GLdouble >(val4); glRotated(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glRotatef(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glRotatef angle x y z ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glRotatef" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glRotatef" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glRotatef" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glRotatef" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); glRotatef(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glScaled(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glScaled x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glScaled" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glScaled" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glScaled" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glScaled(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glScalef(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glScalef x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glScalef" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glScalef" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glScalef" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glScalef(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glScissor(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLsizei arg3 ; GLsizei arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glScissor x y width height ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glScissor" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glScissor" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glScissor" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glScissor" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glScissor" "', argument " "3"" of type '" "GLsizei""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glScissor" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glScissor" "', argument " "4"" of type '" "GLsizei""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glScissor" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  glScissor(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glSelectBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glSelectBuffer size buffer ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSelectBuffer" "', argument " "1"" of type '" "GLsizei""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSelectBuffer" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSelectBuffer" "', argument " "2"" of type '" "GLuint *""'");  } 
  arg2 = reinterpret_cast< GLuint * >(argp2); glSelectBuffer(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glSeparableFilter2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLenum arg2 ; GLsizei arg3 ; GLsizei arg4 ; GLenum arg5 ; GLenum arg6 ; GLvoid *arg7 = (GLvoid *) 0 ;
  GLvoid *arg8 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; int res7 ; int res8 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:glSeparableFilter2D target internalformat width height format type row column ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSeparableFilter2D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSeparableFilter2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSeparableFilter2D" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSeparableFilter2D" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glSeparableFilter2D" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSeparableFilter2D" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glSeparableFilter2D" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSeparableFilter2D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glSeparableFilter2D" "', argument " "5"" of type '" "GLenum""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSeparableFilter2D" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glSeparableFilter2D" "', argument " "6"" of type '" "GLenum""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSeparableFilter2D" "', argument " "6"" of type '" "GLenum""'"); }
     else { arg6 = *(reinterpret_cast< GLenum * >(argp6)); }  } 
  res7 = SWIG_ConvertPtr(objv[7],SWIG_as_voidptrptr(&arg7), 0, 0); if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glSeparableFilter2D" "', argument " "7"" of type '" "GLvoid const *""'");  }
   res8 = SWIG_ConvertPtr(objv[8],SWIG_as_voidptrptr(&arg8), 0, 0); if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glSeparableFilter2D" "', argument " "8"" of type '" "GLvoid const *""'");  }
   glSeparableFilter2D(arg1,arg2,arg3,arg4,arg5,arg6,(void const *)arg7,(void const *)arg8); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glShadeModel(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glShadeModel mode ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glShadeModel" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glShadeModel" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glShadeModel(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glStencilFunc(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLuint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glStencilFunc func ref mask ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glStencilFunc" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilFunc" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glStencilFunc" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilFunc" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glStencilFunc" "', argument " "3"" of type '" "GLuint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilFunc" "', argument " "3"" of type '" "GLuint""'"); }
     else { arg3 = *(reinterpret_cast< GLuint * >(argp3)); }  }  glStencilFunc(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glStencilMask(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glStencilMask mask ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glStencilMask" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilMask" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glStencilMask(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glStencilOp(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLenum arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glStencilOp fail zfail zpass ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glStencilOp" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilOp" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glStencilOp" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilOp" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glStencilOp" "', argument " "3"" of type '" "GLenum""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilOp" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  glStencilOp(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord1d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; double val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord1d s ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTexCoord1d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); glTexCoord1d(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord1dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord1dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord1dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glTexCoord1dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord1f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; float val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord1f s ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTexCoord1f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); glTexCoord1f(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord1fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord1fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord1fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glTexCoord1fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord1i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord1i s ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord1i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord1i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  glTexCoord1i(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord1iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord1iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord1iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glTexCoord1iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord1s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord1s s ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord1s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord1s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  glTexCoord1s(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord1sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord1sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord1sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glTexCoord1sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glTexCoord2d s t ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTexCoord2d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glTexCoord2d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); glTexCoord2d(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord2dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord2dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord2dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glTexCoord2dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glTexCoord2f s t ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTexCoord2f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glTexCoord2f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glTexCoord2f(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord2fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord2fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glTexCoord2fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord2i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glTexCoord2i s t ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord2i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord2i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexCoord2i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord2i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glTexCoord2i(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord2iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord2iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord2iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glTexCoord2iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord2s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glTexCoord2s s t ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord2s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord2s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexCoord2s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord2s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  glTexCoord2s(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord2sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord2sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord2sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glTexCoord2sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexCoord3d s t r ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTexCoord3d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glTexCoord3d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTexCoord3d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glTexCoord3d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord3dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord3dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glTexCoord3dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexCoord3f s t r ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTexCoord3f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glTexCoord3f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTexCoord3f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glTexCoord3f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord3fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord3fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glTexCoord3fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexCoord3i s t r ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord3i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord3i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexCoord3i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexCoord3i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glTexCoord3i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord3iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord3iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glTexCoord3iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexCoord3s s t r ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord3s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord3s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexCoord3s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexCoord3s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glTexCoord3s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord3sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord3sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glTexCoord3sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord4d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glTexCoord4d s t r q ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTexCoord4d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glTexCoord4d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTexCoord4d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glTexCoord4d" "', argument " "4"" of type '" "GLdouble""'"); }  
  arg4 = static_cast< GLdouble >(val4); glTexCoord4d(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord4dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord4dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord4dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glTexCoord4dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord4f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glTexCoord4f s t r q ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTexCoord4f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glTexCoord4f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTexCoord4f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glTexCoord4f" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); glTexCoord4f(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord4fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord4fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glTexCoord4fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord4i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glTexCoord4i s t r q ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord4i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord4i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexCoord4i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord4i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexCoord4i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord4i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexCoord4i" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord4i" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  glTexCoord4i(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord4iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord4iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord4iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glTexCoord4iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord4s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glTexCoord4s s t r q ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord4s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord4s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexCoord4s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord4s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexCoord4s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord4s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexCoord4s" "', argument " "4"" of type '" "GLshort""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoord4s" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  glTexCoord4s(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoord4sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glTexCoord4sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoord4sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glTexCoord4sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexCoordPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLenum arg2 ; GLsizei arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glTexCoordPointer size type stride pointer ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexCoordPointer" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoordPointer" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexCoordPointer" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoordPointer" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexCoordPointer" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexCoordPointer" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexCoordPointer" "', argument " "4"" of type '" "GLvoid const *""'");  }
   glTexCoordPointer(arg1,arg2,arg3,(void const *)arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexEnvf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexEnvf target pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexEnvf" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnvf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexEnvf" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnvf" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTexEnvf" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glTexEnvf(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexEnvfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexEnvfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexEnvfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnvfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexEnvfv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnvfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexEnvfv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glTexEnvfv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexEnvi(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexEnvi target pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexEnvi" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnvi" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexEnvi" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnvi" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexEnvi" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnvi" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glTexEnvi(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexEnviv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexEnviv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexEnviv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnviv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexEnviv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexEnviv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexEnviv" "', argument " "3"" of type '" "GLint const *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glTexEnviv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexGend(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLdouble arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexGend coord pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexGend" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGend" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexGend" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGend" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTexGend" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glTexGend(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexGendv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLdouble *arg3 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexGendv coord pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexGendv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGendv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexGendv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGendv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexGendv" "', argument " "3"" of type '" "GLdouble const *""'");  }
   arg3 = reinterpret_cast< GLdouble * >(argp3); glTexGendv(arg1,arg2,(double const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexGenf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexGenf coord pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexGenf" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGenf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexGenf" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGenf" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTexGenf" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glTexGenf(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexGenfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexGenfv coord pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexGenfv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGenfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexGenfv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGenfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexGenfv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glTexGenfv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexGeni(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexGeni coord pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexGeni" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGeni" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexGeni" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGeni" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexGeni" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGeni" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glTexGeni(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexGeniv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexGeniv coord pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexGeniv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGeniv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexGeniv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexGeniv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexGeniv" "', argument " "3"" of type '" "GLint const *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glTexGeniv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexImage1D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLsizei arg4 ; GLint arg5 ; GLenum arg6 ; GLenum arg7 ; GLvoid *arg8 = (GLvoid *) 0 ;
  void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ; int res8 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:glTexImage1D target level internalformat width border format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexImage1D" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage1D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexImage1D" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage1D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexImage1D" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage1D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexImage1D" "', argument " "4"" of type '" "GLsizei""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage1D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glTexImage1D" "', argument " "5"" of type '" "GLint""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage1D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glTexImage1D" "', argument " "6"" of type '" "GLenum""'");  }   
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage1D" "', argument " "6"" of type '" "GLenum""'"); }
     else { arg6 = *(reinterpret_cast< GLenum * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glTexImage1D" "', argument " "7"" of type '" "GLenum""'");  }   
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage1D" "', argument " "7"" of type '" "GLenum""'"); }
     else { arg7 = *(reinterpret_cast< GLenum * >(argp7)); }  } 
  res8 = SWIG_ConvertPtr(objv[8],SWIG_as_voidptrptr(&arg8), 0, 0); if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glTexImage1D" "', argument " "8"" of type '" "GLvoid const *""'");  }
   glTexImage1D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,(void const *)arg8); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexImage2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLsizei arg4 ; GLsizei arg5 ; GLint arg6 ; GLenum arg7 ; GLenum arg8 ;
  GLvoid *arg9 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ;
  void *argp8 ; int res8 = 0 ; int res9 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooo:glTexImage2D target level internalformat width height border format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexImage2D" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexImage2D" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage2D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexImage2D" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage2D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexImage2D" "', argument " "4"" of type '" "GLsizei""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage2D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glTexImage2D" "', argument " "5"" of type '" "GLsizei""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage2D" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glTexImage2D" "', argument " "6"" of type '" "GLint""'");  }   
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage2D" "', argument " "6"" of type '" "GLint""'"); }
     else { arg6 = *(reinterpret_cast< GLint * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glTexImage2D" "', argument " "7"" of type '" "GLenum""'");  }   
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage2D" "', argument " "7"" of type '" "GLenum""'"); }
     else { arg7 = *(reinterpret_cast< GLenum * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glTexImage2D" "', argument " "8"" of type '" "GLenum""'");  }   
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage2D" "', argument " "8"" of type '" "GLenum""'"); }
     else { arg8 = *(reinterpret_cast< GLenum * >(argp8)); }  } 
  res9 = SWIG_ConvertPtr(objv[9],SWIG_as_voidptrptr(&arg9), 0, 0); if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glTexImage2D" "', argument " "9"" of type '" "GLvoid const *""'");  }
   glTexImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,(void const *)arg9); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexImage3D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLsizei arg4 ; GLsizei arg5 ; GLsizei arg6 ; GLint arg7 ; GLenum arg8 ; GLenum arg9 ;
  GLvoid *arg10 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ;
  void *argp8 ; int res8 = 0 ; void *argp9 ; int res9 = 0 ; int res10 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooooooo:glTexImage3D target level internalformat width height depth border format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexImage3D" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexImage3D" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexImage3D" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexImage3D" "', argument " "4"" of type '" "GLsizei""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glTexImage3D" "', argument " "5"" of type '" "GLsizei""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glTexImage3D" "', argument " "6"" of type '" "GLsizei""'");  }   
    if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glTexImage3D" "', argument " "7"" of type '" "GLint""'");  }   
    if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "7"" of type '" "GLint""'"); }
     else { arg7 = *(reinterpret_cast< GLint * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glTexImage3D" "', argument " "8"" of type '" "GLenum""'");  }   
    if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "8"" of type '" "GLenum""'"); }
     else { arg8 = *(reinterpret_cast< GLenum * >(argp8)); }  }  {
    res9 = SWIG_ConvertPtr(objv[9], &argp9, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glTexImage3D" "', argument " "9"" of type '" "GLenum""'");  }   
    if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexImage3D" "', argument " "9"" of type '" "GLenum""'"); }
     else { arg9 = *(reinterpret_cast< GLenum * >(argp9)); }  } 
  res10 = SWIG_ConvertPtr(objv[10],SWIG_as_voidptrptr(&arg10), 0, 0); if (!SWIG_IsOK(res10)) {
    SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "glTexImage3D" "', argument " "10"" of type '" "GLvoid const *""'");  }
   glTexImage3D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,(void const *)arg10); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexParameterf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexParameterf target pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexParameterf" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameterf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexParameterf" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameterf" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTexParameterf" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glTexParameterf(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexParameterfv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexParameterfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameterfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexParameterfv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glTexParameterfv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexParameteri(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexParameteri target pname param ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexParameteri" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameteri" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexParameteri" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameteri" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexParameteri" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameteri" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glTexParameteri(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTexParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexParameteriv" "', argument " "3"" of type '" "GLint const *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glTexParameteriv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTexSubImage1D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLsizei arg4 ; GLenum arg5 ; GLenum arg6 ; GLvoid *arg7 = (GLvoid *) 0 ; void *argp1 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; void *argp6 ; int res6 = 0 ; int res7 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glTexSubImage1D target level xoffset width format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexSubImage1D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage1D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexSubImage1D" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage1D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexSubImage1D" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage1D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexSubImage1D" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage1D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glTexSubImage1D" "', argument " "5"" of type '" "GLenum""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage1D" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glTexSubImage1D" "', argument " "6"" of type '" "GLenum""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage1D" "', argument " "6"" of type '" "GLenum""'"); }
     else { arg6 = *(reinterpret_cast< GLenum * >(argp6)); }  } 
  res7 = SWIG_ConvertPtr(objv[7],SWIG_as_voidptrptr(&arg7), 0, 0); if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glTexSubImage1D" "', argument " "7"" of type '" "GLvoid const *""'");  }
   glTexSubImage1D(arg1,arg2,arg3,arg4,arg5,arg6,(void const *)arg7); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexSubImage2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; GLsizei arg5 ; GLsizei arg6 ; GLenum arg7 ; GLenum arg8 ;
  GLvoid *arg9 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ;
  void *argp8 ; int res8 = 0 ; int res9 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooo:glTexSubImage2D target level xoffset yoffset width height format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexSubImage2D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexSubImage2D" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage2D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexSubImage2D" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage2D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexSubImage2D" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage2D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glTexSubImage2D" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage2D" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glTexSubImage2D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage2D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glTexSubImage2D" "', argument " "7"" of type '" "GLenum""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage2D" "', argument " "7"" of type '" "GLenum""'"); }
     else { arg7 = *(reinterpret_cast< GLenum * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glTexSubImage2D" "', argument " "8"" of type '" "GLenum""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage2D" "', argument " "8"" of type '" "GLenum""'"); }
     else { arg8 = *(reinterpret_cast< GLenum * >(argp8)); }  } 
  res9 = SWIG_ConvertPtr(objv[9],SWIG_as_voidptrptr(&arg9), 0, 0); if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glTexSubImage2D" "', argument " "9"" of type '" "GLvoid const *""'");  }
   glTexSubImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,(void const *)arg9); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTexSubImage3D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; GLint arg5 ; GLsizei arg6 ; GLsizei arg7 ; GLsizei arg8 ; GLenum arg9 ;
  GLenum arg10 ; GLvoid *arg11 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ;
  int res7 = 0 ; void *argp8 ; int res8 = 0 ; void *argp9 ; int res9 = 0 ; void *argp10 ; int res10 = 0 ; int res11 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooooo:glTexSubImage3D target level xoffset yoffset zoffset width height depth format type pixels ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glTexSubImage3D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glTexSubImage3D" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glTexSubImage3D" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glTexSubImage3D" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glTexSubImage3D" "', argument " "5"" of type '" "GLint""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glTexSubImage3D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glTexSubImage3D" "', argument " "7"" of type '" "GLsizei""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "7"" of type '" "GLsizei""'"); }
     else { arg7 = *(reinterpret_cast< GLsizei * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glTexSubImage3D" "', argument " "8"" of type '" "GLsizei""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "8"" of type '" "GLsizei""'"); }
     else { arg8 = *(reinterpret_cast< GLsizei * >(argp8)); }  }  {
    res9 = SWIG_ConvertPtr(objv[9], &argp9, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glTexSubImage3D" "', argument " "9"" of type '" "GLenum""'");  }
       if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "9"" of type '" "GLenum""'"); }
     else { arg9 = *(reinterpret_cast< GLenum * >(argp9)); }  }  {
    res10 = SWIG_ConvertPtr(objv[10], &argp10, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "glTexSubImage3D" "', argument " "10"" of type '" "GLenum""'");  }
       if (!argp10) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glTexSubImage3D" "', argument " "10"" of type '" "GLenum""'"); }
     else { arg10 = *(reinterpret_cast< GLenum * >(argp10)); }  } 
  res11 = SWIG_ConvertPtr(objv[11],SWIG_as_voidptrptr(&arg11), 0, 0); if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "glTexSubImage3D" "', argument " "11"" of type '" "GLvoid const *""'");  }
   glTexSubImage3D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(void const *)arg11); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glTranslated(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTranslated x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTranslated" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glTranslated" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTranslated" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glTranslated(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glTranslatef(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glTranslatef x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glTranslatef" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glTranslatef" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glTranslatef" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glTranslatef(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertex2d x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glVertex2d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertex2d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); glVertex2d(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex2dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex2dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex2dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glVertex2dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertex2f x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glVertex2f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertex2f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glVertex2f(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex2fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex2fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glVertex2fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex2i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertex2i x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex2i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex2i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertex2i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex2i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glVertex2i(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex2iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex2iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex2iv" "', argument " "1"" of type '" "GLint const *""'");  } 
  arg1 = reinterpret_cast< GLint * >(argp1); glVertex2iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex2s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertex2s x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex2s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex2s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertex2s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex2s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  glVertex2s(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex2sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex2sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex2sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glVertex2sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glVertex3d x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glVertex3d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertex3d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertex3d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glVertex3d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex3dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex3dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glVertex3dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glVertex3f x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glVertex3f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertex3f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertex3f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glVertex3f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex3fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex3fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glVertex3fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glVertex3i x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex3i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex3i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertex3i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertex3i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glVertex3i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex3iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex3iv" "', argument " "1"" of type '" "GLint const *""'");  } 
  arg1 = reinterpret_cast< GLint * >(argp1); glVertex3iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glVertex3s x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex3s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex3s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertex3s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertex3s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glVertex3s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex3sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex3sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glVertex3sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex4d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glVertex4d x y z w ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glVertex4d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertex4d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertex4d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glVertex4d" "', argument " "4"" of type '" "GLdouble""'"); }  
  arg4 = static_cast< GLdouble >(val4); glVertex4d(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex4dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex4dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex4dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glVertex4dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex4f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glVertex4f x y z w ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glVertex4f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertex4f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertex4f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glVertex4f" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); glVertex4f(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex4fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex4fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glVertex4fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex4i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glVertex4i x y z w ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex4i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex4i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertex4i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex4i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertex4i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex4i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glVertex4i" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex4i" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  glVertex4i(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex4iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex4iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex4iv" "', argument " "1"" of type '" "GLint const *""'");  } 
  arg1 = reinterpret_cast< GLint * >(argp1); glVertex4iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex4s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glVertex4s x y z w ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex4s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex4s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertex4s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex4s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertex4s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex4s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glVertex4s" "', argument " "4"" of type '" "GLshort""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertex4s" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  glVertex4s(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertex4sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glVertex4sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertex4sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glVertex4sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLenum arg2 ; GLsizei arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glVertexPointer size type stride pointer ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexPointer" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexPointer" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexPointer" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexPointer" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertexPointer" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexPointer" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glVertexPointer" "', argument " "4"" of type '" "GLvoid const *""'");  }
   glVertexPointer(arg1,arg2,arg3,(void const *)arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glViewport(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLsizei arg3 ; GLsizei arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glViewport x y width height ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glViewport" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glViewport" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glViewport" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glViewport" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glViewport" "', argument " "3"" of type '" "GLsizei""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glViewport" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glViewport" "', argument " "4"" of type '" "GLsizei""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glViewport" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  glViewport(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glSampleCoverage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLclampf arg1 ; GLboolean arg2 ; float val1 ; int ecode1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glSampleCoverage value invert ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glSampleCoverage" "', argument " "1"" of type '" "GLclampf""'"); }
    arg1 = static_cast< GLclampf >(val1); { res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSampleCoverage" "', argument " "2"" of type '" "GLboolean""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSampleCoverage" "', argument " "2"" of type '" "GLboolean""'"); }
     else { arg2 = *(reinterpret_cast< GLboolean * >(argp2)); }  }  glSampleCoverage(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glLoadTransposeMatrixf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glLoadTransposeMatrixf m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLoadTransposeMatrixf" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glLoadTransposeMatrixf((float const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glLoadTransposeMatrixd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glLoadTransposeMatrixd m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLoadTransposeMatrixd" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glLoadTransposeMatrixd((double const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glMultTransposeMatrixf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glMultTransposeMatrixf m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultTransposeMatrixf" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glMultTransposeMatrixf((float const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glMultTransposeMatrixd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glMultTransposeMatrixd m ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultTransposeMatrixd" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glMultTransposeMatrixd((double const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glCompressedTexImage3D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLenum arg3 ; GLsizei arg4 ; GLsizei arg5 ; GLsizei arg6 ; GLint arg7 ; GLsizei arg8 ;
  GLvoid *arg9 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ;
  void *argp8 ; int res8 = 0 ; int res9 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooo:glCompressedTexImage3D target level internalformat width height depth border imageSize data ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCompressedTexImage3D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage3D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCompressedTexImage3D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage3D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCompressedTexImage3D" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage3D" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCompressedTexImage3D" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage3D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCompressedTexImage3D" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage3D" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCompressedTexImage3D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage3D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCompressedTexImage3D" "', argument " "7"" of type '" "GLint""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage3D" "', argument " "7"" of type '" "GLint""'"); }
     else { arg7 = *(reinterpret_cast< GLint * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glCompressedTexImage3D" "', argument " "8"" of type '" "GLsizei""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage3D" "', argument " "8"" of type '" "GLsizei""'"); }
     else { arg8 = *(reinterpret_cast< GLsizei * >(argp8)); }  } 
  res9 = SWIG_ConvertPtr(objv[9],SWIG_as_voidptrptr(&arg9), 0, 0); if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glCompressedTexImage3D" "', argument " "9"" of type '" "GLvoid const *""'");  }
   glCompressedTexImage3D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,(void const *)arg9); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glCompressedTexImage2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLenum arg3 ; GLsizei arg4 ; GLsizei arg5 ; GLint arg6 ; GLsizei arg7 ;
  GLvoid *arg8 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ; int res8 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooooo:glCompressedTexImage2D target level internalformat width height border imageSize data ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCompressedTexImage2D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCompressedTexImage2D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage2D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCompressedTexImage2D" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage2D" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCompressedTexImage2D" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage2D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCompressedTexImage2D" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage2D" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCompressedTexImage2D" "', argument " "6"" of type '" "GLint""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage2D" "', argument " "6"" of type '" "GLint""'"); }
     else { arg6 = *(reinterpret_cast< GLint * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCompressedTexImage2D" "', argument " "7"" of type '" "GLsizei""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage2D" "', argument " "7"" of type '" "GLsizei""'"); }
     else { arg7 = *(reinterpret_cast< GLsizei * >(argp7)); }  } 
  res8 = SWIG_ConvertPtr(objv[8],SWIG_as_voidptrptr(&arg8), 0, 0); if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glCompressedTexImage2D" "', argument " "8"" of type '" "GLvoid const *""'");  }
   glCompressedTexImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,(void const *)arg8); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glCompressedTexImage1D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLenum arg3 ; GLsizei arg4 ; GLint arg5 ; GLsizei arg6 ; GLvoid *arg7 = (GLvoid *) 0 ;
  void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; int res7 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glCompressedTexImage1D target level internalformat width border imageSize data ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCompressedTexImage1D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage1D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCompressedTexImage1D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage1D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCompressedTexImage1D" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage1D" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCompressedTexImage1D" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage1D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCompressedTexImage1D" "', argument " "5"" of type '" "GLint""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage1D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCompressedTexImage1D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexImage1D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  } 
  res7 = SWIG_ConvertPtr(objv[7],SWIG_as_voidptrptr(&arg7), 0, 0); if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCompressedTexImage1D" "', argument " "7"" of type '" "GLvoid const *""'");  }
   glCompressedTexImage1D(arg1,arg2,arg3,arg4,arg5,arg6,(void const *)arg7); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glCompressedTexSubImage3D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; GLint arg5 ; GLsizei arg6 ; GLsizei arg7 ; GLsizei arg8 ; GLenum arg9 ;
  GLsizei arg10 ; GLvoid *arg11 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ;
  int res7 = 0 ; void *argp8 ; int res8 = 0 ; void *argp9 ; int res9 = 0 ; void *argp10 ; int res10 = 0 ; int res11 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooooo:glCompressedTexSubImage3D target level xoffset yoffset zoffset width height depth format imageSize data ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCompressedTexSubImage3D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCompressedTexSubImage3D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCompressedTexSubImage3D" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCompressedTexSubImage3D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCompressedTexSubImage3D" "', argument " "5"" of type '" "GLint""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCompressedTexSubImage3D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCompressedTexSubImage3D" "', argument " "7"" of type '" "GLsizei""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "7"" of type '" "GLsizei""'"); }
     else { arg7 = *(reinterpret_cast< GLsizei * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glCompressedTexSubImage3D" "', argument " "8"" of type '" "GLsizei""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "8"" of type '" "GLsizei""'"); }
     else { arg8 = *(reinterpret_cast< GLsizei * >(argp8)); }  }  {
    res9 = SWIG_ConvertPtr(objv[9], &argp9, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res9)) {
      SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glCompressedTexSubImage3D" "', argument " "9"" of type '" "GLenum""'");  }
       if (!argp9) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "9"" of type '" "GLenum""'"); }
     else { arg9 = *(reinterpret_cast< GLenum * >(argp9)); }  }  {
    res10 = SWIG_ConvertPtr(objv[10], &argp10, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "glCompressedTexSubImage3D" "', argument " "10"" of type '" "GLsizei""'");  }
       if (!argp10) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage3D" "', argument " "10"" of type '" "GLsizei""'"); }
     else { arg10 = *(reinterpret_cast< GLsizei * >(argp10)); }  } 
  res11 = SWIG_ConvertPtr(objv[11],SWIG_as_voidptrptr(&arg11), 0, 0); if (!SWIG_IsOK(res11)) {
    SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "glCompressedTexSubImage3D" "', argument " "11"" of type '" "GLvoid const *""'");  }
   glCompressedTexSubImage3D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10,(void const *)arg11); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glCompressedTexSubImage2D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; GLsizei arg5 ; GLsizei arg6 ; GLenum arg7 ; GLsizei arg8 ;
  GLvoid *arg9 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; void *argp7 ; int res7 = 0 ;
  void *argp8 ; int res8 = 0 ; int res9 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooo:glCompressedTexSubImage2D target level xoffset yoffset width height format imageSize data ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCompressedTexSubImage2D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage2D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCompressedTexSubImage2D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage2D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCompressedTexSubImage2D" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage2D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCompressedTexSubImage2D" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage2D" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCompressedTexSubImage2D" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage2D" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCompressedTexSubImage2D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage2D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  }  {
    res7 = SWIG_ConvertPtr(objv[7], &argp7, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCompressedTexSubImage2D" "', argument " "7"" of type '" "GLenum""'");  }
       if (!argp7) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage2D" "', argument " "7"" of type '" "GLenum""'"); }
     else { arg7 = *(reinterpret_cast< GLenum * >(argp7)); }  }  {
    res8 = SWIG_ConvertPtr(objv[8], &argp8, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res8)) {
      SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "glCompressedTexSubImage2D" "', argument " "8"" of type '" "GLsizei""'");  }
       if (!argp8) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage2D" "', argument " "8"" of type '" "GLsizei""'"); }
     else { arg8 = *(reinterpret_cast< GLsizei * >(argp8)); }  } 
  res9 = SWIG_ConvertPtr(objv[9],SWIG_as_voidptrptr(&arg9), 0, 0); if (!SWIG_IsOK(res9)) {
    SWIG_exception_fail(SWIG_ArgError(res9), "in method '" "glCompressedTexSubImage2D" "', argument " "9"" of type '" "GLvoid const *""'");  }
   glCompressedTexSubImage2D(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,(void const *)arg9); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glCompressedTexSubImage1D(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLsizei arg4 ; GLenum arg5 ; GLsizei arg6 ; GLvoid *arg7 = (GLvoid *) 0 ;
  void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  void *argp5 ; int res5 = 0 ; void *argp6 ; int res6 = 0 ; int res7 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glCompressedTexSubImage1D target level xoffset width format imageSize data ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCompressedTexSubImage1D" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage1D" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glCompressedTexSubImage1D" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage1D" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glCompressedTexSubImage1D" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage1D" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glCompressedTexSubImage1D" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage1D" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glCompressedTexSubImage1D" "', argument " "5"" of type '" "GLenum""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage1D" "', argument " "5"" of type '" "GLenum""'"); }
     else { arg5 = *(reinterpret_cast< GLenum * >(argp5)); }  }  {
    res6 = SWIG_ConvertPtr(objv[6], &argp6, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glCompressedTexSubImage1D" "', argument " "6"" of type '" "GLsizei""'");  }
       if (!argp6) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompressedTexSubImage1D" "', argument " "6"" of type '" "GLsizei""'"); }
     else { arg6 = *(reinterpret_cast< GLsizei * >(argp6)); }  } 
  res7 = SWIG_ConvertPtr(objv[7],SWIG_as_voidptrptr(&arg7), 0, 0); if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glCompressedTexSubImage1D" "', argument " "7"" of type '" "GLvoid const *""'");  }
   glCompressedTexSubImage1D(arg1,arg2,arg3,arg4,arg5,arg6,(void const *)arg7); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetCompressedTexImage(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLvoid *arg3 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; int res3 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetCompressedTexImage target lod img ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetCompressedTexImage" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetCompressedTexImage" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetCompressedTexImage" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetCompressedTexImage" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetCompressedTexImage" "', argument " "3"" of type '" "GLvoid *""'");  }
   glGetCompressedTexImage(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glActiveTexture(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glActiveTexture texture ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glActiveTexture" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glActiveTexture" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glActiveTexture(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glClientActiveTexture(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glClientActiveTexture texture ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glClientActiveTexture" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glClientActiveTexture" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glClientActiveTexture(arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord1d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble arg2 ; void *argp1 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord1d target s ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord1d" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1d" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMultiTexCoord1d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); glMultiTexCoord1d(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord1dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord1dv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord1dv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1dv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord1dv" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glMultiTexCoord1dv(arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord1f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord1f target s ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord1f" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1f" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMultiTexCoord1f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); glMultiTexCoord1f(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord1fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord1fv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord1fv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1fv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord1fv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glMultiTexCoord1fv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord1i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord1i target s ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord1i" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1i" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord1i" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glMultiTexCoord1i(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord1iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord1iv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord1iv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1iv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord1iv" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); glMultiTexCoord1iv(arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord1s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLshort arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord1s target s ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord1s" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1s" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord1s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  glMultiTexCoord1s(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord1sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord1sv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord1sv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord1sv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord1sv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glMultiTexCoord1sv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble arg2 ; GLdouble arg3 ; void *argp1 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMultiTexCoord2d target s t ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord2d" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2d" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMultiTexCoord2d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMultiTexCoord2d" "', argument " "3"" of type '" "GLdouble""'"); }
    arg3 = static_cast< GLdouble >(val3); glMultiTexCoord2d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord2dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord2dv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord2dv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2dv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord2dv" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glMultiTexCoord2dv(arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMultiTexCoord2f target s t ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord2f" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2f" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMultiTexCoord2f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMultiTexCoord2f" "', argument " "3"" of type '" "GLfloat""'"); }
    arg3 = static_cast< GLfloat >(val3); glMultiTexCoord2f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord2fv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord2fv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2fv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord2fv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glMultiTexCoord2fv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord2i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMultiTexCoord2i target s t ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord2i" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2i" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord2i" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMultiTexCoord2i" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glMultiTexCoord2i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord2iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord2iv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord2iv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2iv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord2iv" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); glMultiTexCoord2iv(arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord2s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glMultiTexCoord2s target s t ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord2s" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2s" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord2s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMultiTexCoord2s" "', argument " "3"" of type '" "GLshort""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glMultiTexCoord2s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord2sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord2sv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord2sv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord2sv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord2sv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glMultiTexCoord2sv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; void *argp1 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glMultiTexCoord3d target s t r ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord3d" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3d" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMultiTexCoord3d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMultiTexCoord3d" "', argument " "3"" of type '" "GLdouble""'"); }
    arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glMultiTexCoord3d" "', argument " "4"" of type '" "GLdouble""'"); }
    arg4 = static_cast< GLdouble >(val4); glMultiTexCoord3d(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord3dv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord3dv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3dv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord3dv" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glMultiTexCoord3dv(arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glMultiTexCoord3f target s t r ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord3f" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3f" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMultiTexCoord3f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMultiTexCoord3f" "', argument " "3"" of type '" "GLfloat""'"); }
    arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glMultiTexCoord3f" "', argument " "4"" of type '" "GLfloat""'"); }
    arg4 = static_cast< GLfloat >(val4); glMultiTexCoord3f(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord3fv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord3fv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3fv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord3fv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glMultiTexCoord3fv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glMultiTexCoord3i target s t r ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord3i" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3i" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord3i" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMultiTexCoord3i" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMultiTexCoord3i" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3i" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  glMultiTexCoord3i(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord3iv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord3iv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3iv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord3iv" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); glMultiTexCoord3iv(arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glMultiTexCoord3s target s t r ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord3s" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3s" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord3s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMultiTexCoord3s" "', argument " "3"" of type '" "GLshort""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMultiTexCoord3s" "', argument " "4"" of type '" "GLshort""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3s" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  glMultiTexCoord3s(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord3sv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord3sv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord3sv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord3sv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glMultiTexCoord3sv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord4d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; GLdouble arg5 ; void *argp1 ; int res1 = 0 ; double val2 ;
  int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glMultiTexCoord4d target s t r q ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord4d" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4d" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMultiTexCoord4d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMultiTexCoord4d" "', argument " "3"" of type '" "GLdouble""'"); }
    arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glMultiTexCoord4d" "', argument " "4"" of type '" "GLdouble""'"); }
    arg4 = static_cast< GLdouble >(val4); ecode5 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glMultiTexCoord4d" "', argument " "5"" of type '" "GLdouble""'"); }
    arg5 = static_cast< GLdouble >(val5); glMultiTexCoord4d(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord4dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord4dv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord4dv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4dv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord4dv" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glMultiTexCoord4dv(arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord4f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; GLfloat arg5 ; void *argp1 ; int res1 = 0 ; float val2 ;
  int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ; float val5 ; int ecode5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glMultiTexCoord4f target s t r q ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord4f" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4f" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glMultiTexCoord4f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glMultiTexCoord4f" "', argument " "3"" of type '" "GLfloat""'"); }
    arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glMultiTexCoord4f" "', argument " "4"" of type '" "GLfloat""'"); }
    arg4 = static_cast< GLfloat >(val4); ecode5 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glMultiTexCoord4f" "', argument " "5"" of type '" "GLfloat""'"); }
    arg5 = static_cast< GLfloat >(val5); glMultiTexCoord4f(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord4fv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord4fv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4fv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord4fv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glMultiTexCoord4fv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord4i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; GLint arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glMultiTexCoord4i target s t r q ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord4i" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4i" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord4i" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMultiTexCoord4i" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMultiTexCoord4i" "', argument " "4"" of type '" "GLint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4i" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glMultiTexCoord4i" "', argument " "5"" of type '" "GLint""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4i" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  glMultiTexCoord4i(arg1,arg2,arg3,arg4,arg5); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord4iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord4iv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord4iv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4iv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord4iv" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); glMultiTexCoord4iv(arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord4s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; GLshort arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glMultiTexCoord4s target s t r q ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord4s" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4s" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord4s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMultiTexCoord4s" "', argument " "3"" of type '" "GLshort""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMultiTexCoord4s" "', argument " "4"" of type '" "GLshort""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4s" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glMultiTexCoord4s" "', argument " "5"" of type '" "GLshort""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4s" "', argument " "5"" of type '" "GLshort""'"); }
     else { arg5 = *(reinterpret_cast< GLshort * >(argp5)); }  }  glMultiTexCoord4s(arg1,arg2,arg3,arg4,arg5); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiTexCoord4sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMultiTexCoord4sv target v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiTexCoord4sv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiTexCoord4sv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiTexCoord4sv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glMultiTexCoord4sv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glFogCoordf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; float val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glFogCoordf coord ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glFogCoordf" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); glFogCoordf(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFogCoordfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glFogCoordfv coord ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFogCoordfv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glFogCoordfv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFogCoordd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; double val1 ; int ecode1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glFogCoordd coord ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glFogCoordd" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); glFogCoordd(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFogCoorddv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glFogCoorddv coord ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFogCoorddv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glFogCoorddv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glFogCoordPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLsizei arg2 ; GLvoid *arg3 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  int res3 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glFogCoordPointer type stride pointer ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glFogCoordPointer" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFogCoordPointer" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glFogCoordPointer" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glFogCoordPointer" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glFogCoordPointer" "', argument " "3"" of type '" "GLvoid const *""'");  }
   glFogCoordPointer(arg1,arg2,(void const *)arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glSecondaryColor3b(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbyte arg1 ; GLbyte arg2 ; GLbyte arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glSecondaryColor3b red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3b" "', argument " "1"" of type '" "GLbyte""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3b" "', argument " "1"" of type '" "GLbyte""'"); }
     else { arg1 = *(reinterpret_cast< GLbyte * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSecondaryColor3b" "', argument " "2"" of type '" "GLbyte""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3b" "', argument " "2"" of type '" "GLbyte""'"); }
     else { arg2 = *(reinterpret_cast< GLbyte * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glSecondaryColor3b" "', argument " "3"" of type '" "GLbyte""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3b" "', argument " "3"" of type '" "GLbyte""'"); }
     else { arg3 = *(reinterpret_cast< GLbyte * >(argp3)); }  }  glSecondaryColor3b(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3bv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLbyte *arg1 = (GLbyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glSecondaryColor3bv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3bv" "', argument " "1"" of type '" "GLbyte const *""'");  }
   arg1 = reinterpret_cast< GLbyte * >(argp1); glSecondaryColor3bv((int8_t const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glSecondaryColor3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glSecondaryColor3d red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glSecondaryColor3d" "', argument " "1"" of type '" "GLdouble""'"); }
    arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glSecondaryColor3d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glSecondaryColor3d" "', argument " "3"" of type '" "GLdouble""'"); }
    arg3 = static_cast< GLdouble >(val3); glSecondaryColor3d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glSecondaryColor3dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glSecondaryColor3dv((double const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glSecondaryColor3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glSecondaryColor3f red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glSecondaryColor3f" "', argument " "1"" of type '" "GLfloat""'"); }
    arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glSecondaryColor3f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glSecondaryColor3f" "', argument " "3"" of type '" "GLfloat""'"); }
    arg3 = static_cast< GLfloat >(val3); glSecondaryColor3f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glSecondaryColor3fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glSecondaryColor3fv((float const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glSecondaryColor3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glSecondaryColor3i red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3i" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSecondaryColor3i" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glSecondaryColor3i" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glSecondaryColor3i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glSecondaryColor3iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glSecondaryColor3iv((int32_t const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glSecondaryColor3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glSecondaryColor3s red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3s" "', argument " "1"" of type '" "GLshort""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSecondaryColor3s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glSecondaryColor3s" "', argument " "3"" of type '" "GLshort""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glSecondaryColor3s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glSecondaryColor3sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glSecondaryColor3sv((int16_t const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3ub(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte arg1 ; GLubyte arg2 ; GLubyte arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glSecondaryColor3ub red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3ub" "', argument " "1"" of type '" "GLubyte""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3ub" "', argument " "1"" of type '" "GLubyte""'"); }
     else { arg1 = *(reinterpret_cast< GLubyte * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSecondaryColor3ub" "', argument " "2"" of type '" "GLubyte""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3ub" "', argument " "2"" of type '" "GLubyte""'"); }
     else { arg2 = *(reinterpret_cast< GLubyte * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glSecondaryColor3ub" "', argument " "3"" of type '" "GLubyte""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3ub" "', argument " "3"" of type '" "GLubyte""'"); }
     else { arg3 = *(reinterpret_cast< GLubyte * >(argp3)); }  }  glSecondaryColor3ub(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3ubv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLubyte *arg1 = (GLubyte *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glSecondaryColor3ubv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3ubv" "', argument " "1"" of type '" "GLubyte const *""'");  }
   arg1 = reinterpret_cast< GLubyte * >(argp1); glSecondaryColor3ubv((uint8_t const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3ui(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLuint arg2 ; GLuint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glSecondaryColor3ui red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3ui" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3ui" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSecondaryColor3ui" "', argument " "2"" of type '" "GLuint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3ui" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glSecondaryColor3ui" "', argument " "3"" of type '" "GLuint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3ui" "', argument " "3"" of type '" "GLuint""'"); }
     else { arg3 = *(reinterpret_cast< GLuint * >(argp3)); }  }  glSecondaryColor3ui(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3uiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint *arg1 = (GLuint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glSecondaryColor3uiv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3uiv" "', argument " "1"" of type '" "GLuint const *""'");  }
   arg1 = reinterpret_cast< GLuint * >(argp1); glSecondaryColor3uiv((uint32_t const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3us(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLushort arg1 ; GLushort arg2 ; GLushort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glSecondaryColor3us red green blue ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3us" "', argument " "1"" of type '" "GLushort""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3us" "', argument " "1"" of type '" "GLushort""'"); }
     else { arg1 = *(reinterpret_cast< GLushort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSecondaryColor3us" "', argument " "2"" of type '" "GLushort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3us" "', argument " "2"" of type '" "GLushort""'"); }
     else { arg2 = *(reinterpret_cast< GLushort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glSecondaryColor3us" "', argument " "3"" of type '" "GLushort""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColor3us" "', argument " "3"" of type '" "GLushort""'"); }
     else { arg3 = *(reinterpret_cast< GLushort * >(argp3)); }  }  glSecondaryColor3us(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColor3usv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLushort *arg1 = (GLushort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glSecondaryColor3usv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_uint16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColor3usv" "', argument " "1"" of type '" "GLushort const *""'");  }
   arg1 = reinterpret_cast< GLushort * >(argp1); glSecondaryColor3usv((uint16_t const *)arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glSecondaryColorPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLenum arg2 ; GLsizei arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glSecondaryColorPointer size type stride pointer ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glSecondaryColorPointer" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColorPointer" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glSecondaryColorPointer" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColorPointer" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glSecondaryColorPointer" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glSecondaryColorPointer" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glSecondaryColorPointer" "', argument " "4"" of type '" "GLvoid const *""'");  }
   glSecondaryColorPointer(arg1,arg2,arg3,(void const *)arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPointParameterf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPointParameterf pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPointParameterf" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPointParameterf" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glPointParameterf" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); glPointParameterf(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glPointParameterfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPointParameterfv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPointParameterfv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPointParameterfv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPointParameterfv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glPointParameterfv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPointParameteri(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPointParameteri pname param ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPointParameteri" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPointParameteri" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPointParameteri" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPointParameteri" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glPointParameteri(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glPointParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glPointParameteriv pname params ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glPointParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glPointParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glPointParameteriv" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); glPointParameteriv(arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glBlendFuncSeparate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLenum arg2 ; GLenum arg3 ; GLenum arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glBlendFuncSeparate srcRGB dstRGB srcAlpha dstAlpha ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBlendFuncSeparate" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendFuncSeparate" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBlendFuncSeparate" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendFuncSeparate" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glBlendFuncSeparate" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendFuncSeparate" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glBlendFuncSeparate" "', argument " "4"" of type '" "GLenum""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBlendFuncSeparate" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  }  glBlendFuncSeparate(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glMultiDrawArrays(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLint *arg2 = (GLint *) 0 ; GLsizei *arg3 = (GLsizei *) 0 ; GLsizei arg4 ; void *argp1 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glMultiDrawArrays mode first count primcount ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiDrawArrays" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiDrawArrays" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiDrawArrays" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMultiDrawArrays" "', argument " "3"" of type '" "GLsizei const *""'");  }
   arg3 = reinterpret_cast< GLsizei * >(argp3); { res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMultiDrawArrays" "', argument " "4"" of type '" "GLsizei""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiDrawArrays" "', argument " "4"" of type '" "GLsizei""'"); }
     else { arg4 = *(reinterpret_cast< GLsizei * >(argp4)); }  } 
  glMultiDrawArrays(arg1,(int32_t const *)arg2,(int32_t const *)arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glMultiDrawElements(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLsizei *arg2 = (GLsizei *) 0 ; GLenum arg3 ; GLvoid **arg4 = (GLvoid **) 0 ; GLsizei arg5 ; void *argp1 ; int res1 = 0 ;
  void *argp2 = 0 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glMultiDrawElements mode count type indices primcount ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMultiDrawElements" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiDrawElements" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMultiDrawElements" "', argument " "2"" of type '" "GLsizei const *""'");  }
   arg2 = reinterpret_cast< GLsizei * >(argp2); { res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 );
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glMultiDrawElements" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiDrawElements" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_p_void, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glMultiDrawElements" "', argument " "4"" of type '" "GLvoid const *const *""'");  }
   arg4 = reinterpret_cast< GLvoid ** >(argp4); { res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 );
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glMultiDrawElements" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMultiDrawElements" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  } 
  glMultiDrawElements(arg1,(int32_t const *)arg2,arg3,(void const *const *)arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glWindowPos2d x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glWindowPos2d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glWindowPos2d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); glWindowPos2d(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos2dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glWindowPos2dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos2dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glWindowPos2dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glWindowPos2f x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glWindowPos2f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glWindowPos2f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glWindowPos2f(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glWindowPos2fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos2fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glWindowPos2fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos2i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glWindowPos2i x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos2i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos2i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glWindowPos2i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos2i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glWindowPos2i(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos2iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glWindowPos2iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos2iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glWindowPos2iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos2s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glWindowPos2s x y ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos2s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos2s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glWindowPos2s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos2s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  glWindowPos2s(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos2sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glWindowPos2sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos2sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glWindowPos2sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble arg1 ; GLdouble arg2 ; GLdouble arg3 ; double val1 ; int ecode1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glWindowPos3d x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glWindowPos3d" "', argument " "1"" of type '" "GLdouble""'"); }  
  arg1 = static_cast< GLdouble >(val1); ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glWindowPos3d" "', argument " "2"" of type '" "GLdouble""'"); }  
  arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glWindowPos3d" "', argument " "3"" of type '" "GLdouble""'"); }  
  arg3 = static_cast< GLdouble >(val3); glWindowPos3d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLdouble *arg1 = (GLdouble *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glWindowPos3dv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos3dv" "', argument " "1"" of type '" "GLdouble const *""'");  }
   arg1 = reinterpret_cast< GLdouble * >(argp1); glWindowPos3dv((double const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat arg1 ; GLfloat arg2 ; GLfloat arg3 ; float val1 ; int ecode1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glWindowPos3f x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[1], &val1); if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "glWindowPos3f" "', argument " "1"" of type '" "GLfloat""'"); }  
  arg1 = static_cast< GLfloat >(val1); ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glWindowPos3f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glWindowPos3f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glWindowPos3f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLfloat *arg1 = (GLfloat *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glWindowPos3fv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos3fv" "', argument " "1"" of type '" "GLfloat const *""'");  }
   arg1 = reinterpret_cast< GLfloat * >(argp1); glWindowPos3fv((float const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glWindowPos3i x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos3i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos3i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glWindowPos3i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glWindowPos3i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glWindowPos3i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint *arg1 = (GLint *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glWindowPos3iv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos3iv" "', argument " "1"" of type '" "GLint const *""'");  }
   arg1 = reinterpret_cast< GLint * >(argp1); glWindowPos3iv((int32_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glWindowPos3s x y z ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos3s" "', argument " "1"" of type '" "GLshort""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos3s" "', argument " "1"" of type '" "GLshort""'"); }
     else { arg1 = *(reinterpret_cast< GLshort * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glWindowPos3s" "', argument " "2"" of type '" "GLshort""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glWindowPos3s" "', argument " "3"" of type '" "GLshort""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glWindowPos3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glWindowPos3s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glWindowPos3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLshort *arg1 = (GLshort *) 0 ; void *argp1 = 0 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glWindowPos3sv v ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glWindowPos3sv" "', argument " "1"" of type '" "GLshort const *""'");  }
   arg1 = reinterpret_cast< GLshort * >(argp1); glWindowPos3sv((int16_t const *)arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGenQueries(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGenQueries n ids ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGenQueries" "', argument " "1"" of type '" "GLsizei""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGenQueries" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGenQueries" "', argument " "2"" of type '" "GLuint *""'");  } 
  arg2 = reinterpret_cast< GLuint * >(argp2); glGenQueries(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDeleteQueries(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glDeleteQueries n ids ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDeleteQueries" "', argument " "1"" of type '" "GLsizei""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDeleteQueries" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDeleteQueries" "', argument " "2"" of type '" "GLuint const *""'");  }
   arg2 = reinterpret_cast< GLuint * >(argp2); glDeleteQueries(arg1,(uint32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glIsQuery(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIsQuery id ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIsQuery" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIsQuery" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  result = glIsQuery(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glBeginQuery(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLuint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glBeginQuery target id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBeginQuery" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBeginQuery" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBeginQuery" "', argument " "2"" of type '" "GLuint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBeginQuery" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  glBeginQuery(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glEndQuery(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEndQuery target ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEndQuery" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEndQuery" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  glEndQuery(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetQueryiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetQueryiv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetQueryiv" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetQueryiv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetQueryiv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetQueryiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetQueryiv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetQueryiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetQueryObjectiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetQueryObjectiv id pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetQueryObjectiv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetQueryObjectiv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetQueryObjectiv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetQueryObjectiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetQueryObjectiv" "', argument " "3"" of type '" "GLint *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glGetQueryObjectiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetQueryObjectuiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLenum arg2 ; GLuint *arg3 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetQueryObjectuiv id pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetQueryObjectuiv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetQueryObjectuiv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetQueryObjectuiv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetQueryObjectuiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetQueryObjectuiv" "', argument " "3"" of type '" "GLuint *""'");  }
   arg3 = reinterpret_cast< GLuint * >(argp3); glGetQueryObjectuiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glBindBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLuint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glBindBuffer target buffer ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBindBuffer" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBindBuffer" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBindBuffer" "', argument " "2"" of type '" "GLuint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBindBuffer" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  glBindBuffer(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glDeleteBuffers(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glDeleteBuffers n buffers ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDeleteBuffers" "', argument " "1"" of type '" "GLsizei""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDeleteBuffers" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDeleteBuffers" "', argument " "2"" of type '" "GLuint const *""'");  }
   arg2 = reinterpret_cast< GLuint * >(argp2); glDeleteBuffers(arg1,(uint32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glGenBuffers(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGenBuffers n buffers ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGenBuffers" "', argument " "1"" of type '" "GLsizei""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGenBuffers" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGenBuffers" "', argument " "2"" of type '" "GLuint *""'");  } 
  arg2 = reinterpret_cast< GLuint * >(argp2); glGenBuffers(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIsBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIsBuffer buffer ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIsBuffer" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIsBuffer" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  result = glIsBuffer(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glBufferData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLsizeiptr arg2 ; GLvoid *arg3 = (GLvoid *) 0 ; GLenum arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; int res3 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glBufferData target size data usage ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBufferData" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBufferData" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_intptr_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBufferData" "', argument " "2"" of type '" "GLsizeiptr""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBufferData" "', argument " "2"" of type '" "GLsizeiptr""'"); }
     else { arg2 = *(reinterpret_cast< GLsizeiptr * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3],SWIG_as_voidptrptr(&arg3), 0, 0); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glBufferData" "', argument " "3"" of type '" "GLvoid const *""'");  }
   { res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glBufferData" "', argument " "4"" of type '" "GLenum""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBufferData" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  }  glBufferData(arg1,arg2,(void const *)arg3,arg4); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glBufferSubData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLintptr arg2 ; GLsizeiptr arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glBufferSubData target offset size data ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBufferSubData" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBufferSubData" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_intptr_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBufferSubData" "', argument " "2"" of type '" "GLintptr""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBufferSubData" "', argument " "2"" of type '" "GLintptr""'"); }
     else { arg2 = *(reinterpret_cast< GLintptr * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_intptr_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glBufferSubData" "', argument " "3"" of type '" "GLsizeiptr""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBufferSubData" "', argument " "3"" of type '" "GLsizeiptr""'"); }
     else { arg3 = *(reinterpret_cast< GLsizeiptr * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glBufferSubData" "', argument " "4"" of type '" "GLvoid const *""'");  }
   glBufferSubData(arg1,arg2,arg3,(void const *)arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetBufferSubData(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLintptr arg2 ; GLsizeiptr arg3 ; GLvoid *arg4 = (GLvoid *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; int res4 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetBufferSubData target offset size data ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetBufferSubData" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetBufferSubData" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_intptr_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetBufferSubData" "', argument " "2"" of type '" "GLintptr""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetBufferSubData" "', argument " "2"" of type '" "GLintptr""'"); }
     else { arg2 = *(reinterpret_cast< GLintptr * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_intptr_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetBufferSubData" "', argument " "3"" of type '" "GLsizeiptr""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetBufferSubData" "', argument " "3"" of type '" "GLsizeiptr""'"); }
     else { arg3 = *(reinterpret_cast< GLsizeiptr * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4],SWIG_as_voidptrptr(&arg4), 0, 0); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetBufferSubData" "', argument " "4"" of type '" "GLvoid *""'");  }
   glGetBufferSubData(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glMapBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; GLvoid *result = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glMapBuffer target access ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glMapBuffer" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMapBuffer" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glMapBuffer" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glMapBuffer" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  result = (GLvoid *)glMapBuffer(arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_void,0)); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUnmapBuffer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glUnmapBuffer target ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUnmapBuffer" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUnmapBuffer" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  result = glUnmapBuffer(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetBufferParameteriv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetBufferParameteriv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetBufferParameteriv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetBufferParameteriv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetBufferParameteriv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetBufferParameteriv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetBufferParameteriv" "', argument " "3"" of type '" "GLint *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glGetBufferParameteriv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetBufferPointerv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLenum arg2 ; GLvoid **arg3 = (GLvoid **) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetBufferPointerv target pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetBufferPointerv" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetBufferPointerv" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetBufferPointerv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetBufferPointerv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_p_void, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetBufferPointerv" "', argument " "3"" of type '" "GLvoid **""'");  }
   arg3 = reinterpret_cast< GLvoid ** >(argp3); glGetBufferPointerv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDrawBuffers(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLsizei arg1 ; GLenum *arg2 = (GLenum *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glDrawBuffers n bufs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDrawBuffers" "', argument " "1"" of type '" "GLsizei""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDrawBuffers" "', argument " "1"" of type '" "GLsizei""'"); }
     else { arg1 = *(reinterpret_cast< GLsizei * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDrawBuffers" "', argument " "2"" of type '" "GLenum const *""'");  }
   arg2 = reinterpret_cast< GLenum * >(argp2); glDrawBuffers(arg1,(uint32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib1d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLdouble arg2 ; void *argp1 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib1d index x ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib1d" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib1d" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertexAttrib1d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); glVertexAttrib1d(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib1dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib1dv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib1dv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib1dv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib1dv" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glVertexAttrib1dv(arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib1f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib1f index x ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib1f" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib1f" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertexAttrib1f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); glVertexAttrib1f(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib1fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib1fv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib1fv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib1fv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib1fv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glVertexAttrib1fv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib1s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib1s index x ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib1s" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib1s" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib1s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib1s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  glVertexAttrib1s(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib1sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib1sv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib1sv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib1sv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib1sv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glVertexAttrib1sv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib2d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLdouble arg2 ; GLdouble arg3 ; void *argp1 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ; double val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glVertexAttrib2d index x y ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib2d" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib2d" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertexAttrib2d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertexAttrib2d" "', argument " "3"" of type '" "GLdouble""'"); }
    arg3 = static_cast< GLdouble >(val3); glVertexAttrib2d(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib2dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib2dv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib2dv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib2dv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib2dv" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glVertexAttrib2dv(arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLfloat arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glVertexAttrib2f index x y ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib2f" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib2f" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertexAttrib2f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertexAttrib2f" "', argument " "3"" of type '" "GLfloat""'"); }
    arg3 = static_cast< GLfloat >(val3); glVertexAttrib2f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib2fv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib2fv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib2fv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib2fv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glVertexAttrib2fv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib2s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort arg2 ; GLshort arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glVertexAttrib2s index x y ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib2s" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib2s" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib2s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib2s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertexAttrib2s" "', argument " "3"" of type '" "GLshort""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib2s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  glVertexAttrib2s(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib2sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib2sv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib2sv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib2sv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib2sv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glVertexAttrib2sv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib3d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; void *argp1 ; int res1 = 0 ; double val2 ; int ecode2 = 0 ;
  double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glVertexAttrib3d index x y z ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib3d" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3d" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertexAttrib3d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertexAttrib3d" "', argument " "3"" of type '" "GLdouble""'"); }
    arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glVertexAttrib3d" "', argument " "4"" of type '" "GLdouble""'"); }
    arg4 = static_cast< GLdouble >(val4); glVertexAttrib3d(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib3dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib3dv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib3dv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3dv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib3dv" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glVertexAttrib3dv(arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glVertexAttrib3f index x y z ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib3f" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3f" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertexAttrib3f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertexAttrib3f" "', argument " "3"" of type '" "GLfloat""'"); }
    arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glVertexAttrib3f" "', argument " "4"" of type '" "GLfloat""'"); }
    arg4 = static_cast< GLfloat >(val4); glVertexAttrib3f(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib3fv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib3fv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3fv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib3fv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glVertexAttrib3fv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib3s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glVertexAttrib3s index x y z ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib3s" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3s" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib3s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertexAttrib3s" "', argument " "3"" of type '" "GLshort""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glVertexAttrib3s" "', argument " "4"" of type '" "GLshort""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3s" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  glVertexAttrib3s(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib3sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib3sv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib3sv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib3sv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib3sv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glVertexAttrib3sv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4Nbv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLbyte *arg2 = (GLbyte *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4Nbv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4Nbv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nbv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int8_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4Nbv" "', argument " "2"" of type '" "GLbyte const *""'");  }
   arg2 = reinterpret_cast< GLbyte * >(argp2); glVertexAttrib4Nbv(arg1,(int8_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4Niv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4Niv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4Niv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Niv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4Niv" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); glVertexAttrib4Niv(arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4Nsv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4Nsv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4Nsv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nsv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4Nsv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glVertexAttrib4Nsv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4Nub(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLubyte arg2 ; GLubyte arg3 ; GLubyte arg4 ; GLubyte arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glVertexAttrib4Nub index x y z w ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4Nub" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nub" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4Nub" "', argument " "2"" of type '" "GLubyte""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nub" "', argument " "2"" of type '" "GLubyte""'"); }
     else { arg2 = *(reinterpret_cast< GLubyte * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertexAttrib4Nub" "', argument " "3"" of type '" "GLubyte""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nub" "', argument " "3"" of type '" "GLubyte""'"); }
     else { arg3 = *(reinterpret_cast< GLubyte * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glVertexAttrib4Nub" "', argument " "4"" of type '" "GLubyte""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nub" "', argument " "4"" of type '" "GLubyte""'"); }
     else { arg4 = *(reinterpret_cast< GLubyte * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glVertexAttrib4Nub" "', argument " "5"" of type '" "GLubyte""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nub" "', argument " "5"" of type '" "GLubyte""'"); }
     else { arg5 = *(reinterpret_cast< GLubyte * >(argp5)); }  }  glVertexAttrib4Nub(arg1,arg2,arg3,arg4,arg5); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glVertexAttrib4Nubv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLubyte *arg2 = (GLubyte *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4Nubv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4Nubv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nubv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4Nubv" "', argument " "2"" of type '" "GLubyte const *""'");  }
   arg2 = reinterpret_cast< GLubyte * >(argp2); glVertexAttrib4Nubv(arg1,(uint8_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glVertexAttrib4Nuiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4Nuiv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4Nuiv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nuiv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4Nuiv" "', argument " "2"" of type '" "GLuint const *""'");  }
   arg2 = reinterpret_cast< GLuint * >(argp2); glVertexAttrib4Nuiv(arg1,(uint32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glVertexAttrib4Nusv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLushort *arg2 = (GLushort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4Nusv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4Nusv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4Nusv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4Nusv" "', argument " "2"" of type '" "GLushort const *""'");  }
   arg2 = reinterpret_cast< GLushort * >(argp2); glVertexAttrib4Nusv(arg1,(uint16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4bv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLbyte *arg2 = (GLbyte *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4bv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4bv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4bv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int8_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4bv" "', argument " "2"" of type '" "GLbyte const *""'");  }
   arg2 = reinterpret_cast< GLbyte * >(argp2); glVertexAttrib4bv(arg1,(int8_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4d(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLdouble arg2 ; GLdouble arg3 ; GLdouble arg4 ; GLdouble arg5 ; void *argp1 ; int res1 = 0 ; double val2 ;
  int ecode2 = 0 ; double val3 ; int ecode3 = 0 ; double val4 ; int ecode4 = 0 ; double val5 ; int ecode5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glVertexAttrib4d index x y z w ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4d" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4d" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  ecode2 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[2], &val2); if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertexAttrib4d" "', argument " "2"" of type '" "GLdouble""'"); }
    arg2 = static_cast< GLdouble >(val2); ecode3 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertexAttrib4d" "', argument " "3"" of type '" "GLdouble""'"); }
    arg3 = static_cast< GLdouble >(val3); ecode4 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glVertexAttrib4d" "', argument " "4"" of type '" "GLdouble""'"); }
    arg4 = static_cast< GLdouble >(val4); ecode5 = SWIG_AsVal_double SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glVertexAttrib4d" "', argument " "5"" of type '" "GLdouble""'"); }
    arg5 = static_cast< GLdouble >(val5); glVertexAttrib4d(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4dv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLdouble *arg2 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4dv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4dv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4dv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4dv" "', argument " "2"" of type '" "GLdouble const *""'");  }
   arg2 = reinterpret_cast< GLdouble * >(argp2); glVertexAttrib4dv(arg1,(double const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; GLfloat arg5 ; void *argp1 ; int res1 = 0 ; float val2 ;
  int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ; float val5 ; int ecode5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glVertexAttrib4f index x y z w ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4f" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4f" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glVertexAttrib4f" "', argument " "2"" of type '" "GLfloat""'"); }
    arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glVertexAttrib4f" "', argument " "3"" of type '" "GLfloat""'"); }
    arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glVertexAttrib4f" "', argument " "4"" of type '" "GLfloat""'"); }
    arg4 = static_cast< GLfloat >(val4); ecode5 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glVertexAttrib4f" "', argument " "5"" of type '" "GLfloat""'"); }
    arg5 = static_cast< GLfloat >(val5); glVertexAttrib4f(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLfloat *arg2 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4fv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4fv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4fv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4fv" "', argument " "2"" of type '" "GLfloat const *""'");  }
   arg2 = reinterpret_cast< GLfloat * >(argp2); glVertexAttrib4fv(arg1,(float const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLint *arg2 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4iv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4iv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4iv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4iv" "', argument " "2"" of type '" "GLint const *""'");  }
   arg2 = reinterpret_cast< GLint * >(argp2); glVertexAttrib4iv(arg1,(int32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4s(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort arg2 ; GLshort arg3 ; GLshort arg4 ; GLshort arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glVertexAttrib4s index x y z w ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4s" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4s" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4s" "', argument " "2"" of type '" "GLshort""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4s" "', argument " "2"" of type '" "GLshort""'"); }
     else { arg2 = *(reinterpret_cast< GLshort * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertexAttrib4s" "', argument " "3"" of type '" "GLshort""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4s" "', argument " "3"" of type '" "GLshort""'"); }
     else { arg3 = *(reinterpret_cast< GLshort * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glVertexAttrib4s" "', argument " "4"" of type '" "GLshort""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4s" "', argument " "4"" of type '" "GLshort""'"); }
     else { arg4 = *(reinterpret_cast< GLshort * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int16_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glVertexAttrib4s" "', argument " "5"" of type '" "GLshort""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4s" "', argument " "5"" of type '" "GLshort""'"); }
     else { arg5 = *(reinterpret_cast< GLshort * >(argp5)); }  }  glVertexAttrib4s(arg1,arg2,arg3,arg4,arg5); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4sv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLshort *arg2 = (GLshort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4sv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4sv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4sv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_int16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4sv" "', argument " "2"" of type '" "GLshort const *""'");  }
   arg2 = reinterpret_cast< GLshort * >(argp2); glVertexAttrib4sv(arg1,(int16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4ubv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLubyte *arg2 = (GLubyte *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4ubv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4ubv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4ubv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint8_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4ubv" "', argument " "2"" of type '" "GLubyte const *""'");  }
   arg2 = reinterpret_cast< GLubyte * >(argp2); glVertexAttrib4ubv(arg1,(uint8_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4uiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLuint *arg2 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4uiv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4uiv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4uiv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint32_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4uiv" "', argument " "2"" of type '" "GLuint const *""'");  }
   arg2 = reinterpret_cast< GLuint * >(argp2); glVertexAttrib4uiv(arg1,(uint32_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glVertexAttrib4usv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLushort *arg2 = (GLushort *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 = 0 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glVertexAttrib4usv index v ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttrib4usv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttrib4usv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  } 
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_uint16_t, 0 |  0 ); if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttrib4usv" "', argument " "2"" of type '" "GLushort const *""'");  }
   arg2 = reinterpret_cast< GLushort * >(argp2); glVertexAttrib4usv(arg1,(uint16_t const *)arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glVertexAttribPointer(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLint arg2 ; GLenum arg3 ; GLboolean arg4 ; GLsizei arg5 ; GLvoid *arg6 = (GLvoid *) 0 ; void *argp1 ;
  int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ;
  int res5 = 0 ; int res6 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:glVertexAttribPointer index size type normalized stride pointer ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glVertexAttribPointer" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttribPointer" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glVertexAttribPointer" "', argument " "2"" of type '" "GLint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttribPointer" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glVertexAttribPointer" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttribPointer" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glVertexAttribPointer" "', argument " "4"" of type '" "GLboolean""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttribPointer" "', argument " "4"" of type '" "GLboolean""'"); }
     else { arg4 = *(reinterpret_cast< GLboolean * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glVertexAttribPointer" "', argument " "5"" of type '" "GLsizei""'");  }
       if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glVertexAttribPointer" "', argument " "5"" of type '" "GLsizei""'"); }
     else { arg5 = *(reinterpret_cast< GLsizei * >(argp5)); }  } 
  res6 = SWIG_ConvertPtr(objv[6],SWIG_as_voidptrptr(&arg6), 0, 0); if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glVertexAttribPointer" "', argument " "6"" of type '" "GLvoid const *""'");  }
   glVertexAttribPointer(arg1,arg2,arg3,arg4,arg5,(void const *)arg6); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glEnableVertexAttribArray(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glEnableVertexAttribArray index ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glEnableVertexAttribArray" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glEnableVertexAttribArray" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glEnableVertexAttribArray(arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glDisableVertexAttribArray(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glDisableVertexAttribArray index ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDisableVertexAttribArray" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDisableVertexAttribArray" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glDisableVertexAttribArray(arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetVertexAttribdv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLenum arg2 ; GLdouble *arg3 = (GLdouble *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetVertexAttribdv index pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetVertexAttribdv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetVertexAttribdv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetVertexAttribdv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetVertexAttribdv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_double, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetVertexAttribdv" "', argument " "3"" of type '" "GLdouble *""'");  }
   arg3 = reinterpret_cast< GLdouble * >(argp3); glGetVertexAttribdv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetVertexAttribfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLenum arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetVertexAttribfv index pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetVertexAttribfv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetVertexAttribfv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetVertexAttribfv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetVertexAttribfv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetVertexAttribfv" "', argument " "3"" of type '" "GLfloat *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glGetVertexAttribfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetVertexAttribiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 = 0 ;
  int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetVertexAttribiv index pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetVertexAttribiv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetVertexAttribiv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetVertexAttribiv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetVertexAttribiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetVertexAttribiv" "', argument " "3"" of type '" "GLint *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glGetVertexAttribiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetVertexAttribPointerv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLenum arg2 ; GLvoid **arg3 = (GLvoid **) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetVertexAttribPointerv index pname pointer ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetVertexAttribPointerv" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetVertexAttribPointerv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetVertexAttribPointerv" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetVertexAttribPointerv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_p_void, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetVertexAttribPointerv" "', argument " "3"" of type '" "GLvoid **""'");  }
   arg3 = reinterpret_cast< GLvoid ** >(argp3); glGetVertexAttribPointerv(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glDeleteShader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glDeleteShader shader ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDeleteShader" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDeleteShader" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glDeleteShader(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDetachShader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLuint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glDetachShader program shader ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDetachShader" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDetachShader" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glDetachShader" "', argument " "2"" of type '" "GLuint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDetachShader" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  glDetachShader(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glCreateShader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; void *argp1 ; int res1 = 0 ; GLuint result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glCreateShader type ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCreateShader" "', argument " "1"" of type '" "GLenum""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCreateShader" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  result = glCreateShader(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLuint(static_cast< const GLuint& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glShaderSource(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLsizei arg2 ; GLchar **arg3 = (GLchar **) 0 ; GLint *arg4 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glShaderSource shader count string length ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glShaderSource" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glShaderSource" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glShaderSource" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glShaderSource" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_p_char, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glShaderSource" "', argument " "3"" of type '" "GLchar const *const *""'");  }
   arg3 = reinterpret_cast< GLchar ** >(argp3); res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_int32_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glShaderSource" "', argument " "4"" of type '" "GLint const *""'");  }
   arg4 = reinterpret_cast< GLint * >(argp4); glShaderSource(arg1,arg2,(char const *const *)arg3,(int32_t const *)arg4);
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glCompileShader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glCompileShader shader ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glCompileShader" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glCompileShader" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glCompileShader(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glCreateProgram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint result; if (SWIG_GetArgs(interp, objc, objv,":glCreateProgram ") == TCL_ERROR) SWIG_fail; result = glCreateProgram();
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLuint(static_cast< const GLuint& >(result))), SWIGTYPE_p_uint32_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glAttachShader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLuint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glAttachShader program shader ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glAttachShader" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glAttachShader" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glAttachShader" "', argument " "2"" of type '" "GLuint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glAttachShader" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  glAttachShader(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glLinkProgram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glLinkProgram program ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glLinkProgram" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glLinkProgram" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glLinkProgram(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glUseProgram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glUseProgram program ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUseProgram" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUseProgram" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glUseProgram(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glDeleteProgram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glDeleteProgram program ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glDeleteProgram" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glDeleteProgram" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glDeleteProgram(arg1); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glValidateProgram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"o:glValidateProgram program ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glValidateProgram" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glValidateProgram" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  glValidateProgram(arg1); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform1f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLfloat arg2 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glUniform1f location v0 ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform1f" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform1f" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glUniform1f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); glUniform1f(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform2f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLfloat arg2 ; GLfloat arg3 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ; float val3 ;
  int ecode3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform2f location v0 v1 ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform2f" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform2f" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glUniform2f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glUniform2f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); glUniform2f(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform3f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; void *argp1 ; int res1 = 0 ; float val2 ; int ecode2 = 0 ;
  float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniform3f location v0 v1 v2 ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform3f" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3f" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glUniform3f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glUniform3f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glUniform3f" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); glUniform3f(arg1,arg2,arg3,arg4); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform4f(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLfloat arg2 ; GLfloat arg3 ; GLfloat arg4 ; GLfloat arg5 ; void *argp1 ; int res1 = 0 ; float val2 ;
  int ecode2 = 0 ; float val3 ; int ecode3 = 0 ; float val4 ; int ecode4 = 0 ; float val5 ; int ecode5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glUniform4f location v0 v1 v2 v3 ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform4f" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4f" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  ecode2 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "glUniform4f" "', argument " "2"" of type '" "GLfloat""'"); }  
  arg2 = static_cast< GLfloat >(val2); ecode3 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[3], &val3); if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "glUniform4f" "', argument " "3"" of type '" "GLfloat""'"); }  
  arg3 = static_cast< GLfloat >(val3); ecode4 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[4], &val4); if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "glUniform4f" "', argument " "4"" of type '" "GLfloat""'"); }  
  arg4 = static_cast< GLfloat >(val4); ecode5 = SWIG_AsVal_float SWIG_TCL_CALL_ARGS_2(objv[5], &val5); if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "glUniform4f" "', argument " "5"" of type '" "GLfloat""'"); }  
  arg5 = static_cast< GLfloat >(val5); glUniform4f(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform1i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glUniform1i location v0 ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform1i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform1i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform1i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform1i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  glUniform1i(arg1,arg2); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform2i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform2i location v0 v1 ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform2i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform2i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform2i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform2i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform2i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform2i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  glUniform2i(arg1,arg2,arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform3i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniform3i location v0 v1 v2 ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform3i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform3i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform3i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniform3i" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3i" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  glUniform3i(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform4i(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLint arg2 ; GLint arg3 ; GLint arg4 ; GLint arg5 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 ; int res4 = 0 ; void *argp5 ; int res5 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooo:glUniform4i location v0 v1 v2 v3 ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform4i" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4i" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform4i" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4i" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform4i" "', argument " "3"" of type '" "GLint""'");  }   
    if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4i" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniform4i" "', argument " "4"" of type '" "GLint""'");  }   
    if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4i" "', argument " "4"" of type '" "GLint""'"); }
     else { arg4 = *(reinterpret_cast< GLint * >(argp4)); }  }  {
    res5 = SWIG_ConvertPtr(objv[5], &argp5, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glUniform4i" "', argument " "5"" of type '" "GLint""'");  }   
    if (!argp5) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4i" "', argument " "5"" of type '" "GLint""'"); }
     else { arg5 = *(reinterpret_cast< GLint * >(argp5)); }  }  glUniform4i(arg1,arg2,arg3,arg4,arg5); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform1fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform1fv location count value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform1fv" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform1fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform1fv" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform1fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform1fv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glUniform1fv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform2fv location count value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform2fv" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform2fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform2fv" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform2fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform2fv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glUniform2fv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform3fv location count value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform3fv" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform3fv" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform3fv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glUniform3fv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform4fv location count value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform4fv" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform4fv" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform4fv" "', argument " "3"" of type '" "GLfloat const *""'");  }
   arg3 = reinterpret_cast< GLfloat * >(argp3); glUniform4fv(arg1,arg2,(float const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform1iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform1iv location count value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform1iv" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform1iv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform1iv" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform1iv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform1iv" "', argument " "3"" of type '" "GLint const *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glUniform1iv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform2iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform2iv location count value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform2iv" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform2iv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform2iv" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform2iv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform2iv" "', argument " "3"" of type '" "GLint const *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glUniform2iv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform3iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform3iv location count value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform3iv" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3iv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform3iv" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform3iv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform3iv" "', argument " "3"" of type '" "GLint const *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glUniform3iv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniform4iv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glUniform4iv location count value ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniform4iv" "', argument " "1"" of type '" "GLint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4iv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniform4iv" "', argument " "2"" of type '" "GLsizei""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniform4iv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniform4iv" "', argument " "3"" of type '" "GLint const *""'");  }
   arg3 = reinterpret_cast< GLint * >(argp3); glUniform4iv(arg1,arg2,(int32_t const *)arg3); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniformMatrix2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix2fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix2fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix2fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix2fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix2fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix2fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniformMatrix3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix3fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix3fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix3fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix3fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix3fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix3fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glUniformMatrix4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLint arg1 ; GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix4fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix4fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix4fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix4fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix4fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix4fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glIsShader(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIsShader shader ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIsShader" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIsShader" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  result = glIsShader(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glIsProgram(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; void *argp1 ; int res1 = 0 ; GLboolean result;
  if (SWIG_GetArgs(interp, objc, objv,"o:glIsProgram program ",(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glIsProgram" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glIsProgram" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  result = glIsProgram(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLboolean(static_cast< const GLboolean& >(result))), SWIGTYPE_p_uint8_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetShaderiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetShaderiv shader pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetShaderiv" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetShaderiv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetShaderiv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetShaderiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetShaderiv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetShaderiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetProgramiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLenum arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetProgramiv program pname params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetProgramiv" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetProgramiv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetProgramiv" "', argument " "2"" of type '" "GLenum""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetProgramiv" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetProgramiv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetProgramiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetAttachedShaders(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLsizei arg2 ; GLsizei *arg3 = (GLsizei *) 0 ; GLuint *arg4 = (GLuint *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetAttachedShaders program maxCount count shaders ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetAttachedShaders" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetAttachedShaders" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetAttachedShaders" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetAttachedShaders" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetAttachedShaders" "', argument " "3"" of type '" "GLsizei *""'");  }
   arg3 = reinterpret_cast< GLsizei * >(argp3); res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_uint32_t, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetAttachedShaders" "', argument " "4"" of type '" "GLuint *""'");  }
   arg4 = reinterpret_cast< GLuint * >(argp4); glGetAttachedShaders(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int _wrap_glGetShaderInfoLog(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLsizei arg2 ; GLsizei *arg3 = (GLsizei *) 0 ; GLchar *arg4 = (GLchar *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; int res4 ; char *buf4 = 0 ; int alloc4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetShaderInfoLog shader bufSize length infoLog ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetShaderInfoLog" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetShaderInfoLog" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetShaderInfoLog" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetShaderInfoLog" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetShaderInfoLog" "', argument " "3"" of type '" "GLsizei *""'");  }
   arg3 = reinterpret_cast< GLsizei * >(argp3); res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetShaderInfoLog" "', argument " "4"" of type '" "GLchar *""'"); }
   arg4 = reinterpret_cast< GLchar * >(buf4); glGetShaderInfoLog(arg1,arg2,arg3,arg4); if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK; fail: if (alloc4 == SWIG_NEWOBJ) delete[] buf4; return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetProgramInfoLog(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLsizei arg2 ; GLsizei *arg3 = (GLsizei *) 0 ; GLchar *arg4 = (GLchar *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ;
  int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; int res4 ; char *buf4 = 0 ; int alloc4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetProgramInfoLog program bufSize length infoLog ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetProgramInfoLog" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetProgramInfoLog" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetProgramInfoLog" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetProgramInfoLog" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetProgramInfoLog" "', argument " "3"" of type '" "GLsizei *""'");  }
   arg3 = reinterpret_cast< GLsizei * >(argp3); res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetProgramInfoLog" "', argument " "4"" of type '" "GLchar *""'"); }
   arg4 = reinterpret_cast< GLchar * >(buf4); glGetProgramInfoLog(arg1,arg2,arg3,arg4);
  if (alloc4 == SWIG_NEWOBJ) delete[] buf4; return TCL_OK; fail: if (alloc4 == SWIG_NEWOBJ) delete[] buf4; return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetUniformLocation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLchar *arg2 = (GLchar *) 0 ; void *argp1 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ;
  GLint result;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetUniformLocation program name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetUniformLocation" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetUniformLocation" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetUniformLocation" "', argument " "2"" of type '" "GLchar const *""'"); }
   arg2 = reinterpret_cast< GLchar * >(buf2); result = glGetUniformLocation(arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLint(static_cast< const GLint& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return TCL_OK; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return TCL_ERROR; }
SWIGINTERN int _wrap_glGetActiveUniform(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLuint arg2 ; GLsizei arg3 ; GLsizei *arg4 = (GLsizei *) 0 ; GLint *arg5 = (GLint *) 0 ;
  GLenum *arg6 = (GLenum *) 0 ; GLchar *arg7 = (GLchar *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; void *argp6 = 0 ;
  int res6 = 0 ; int res7 ; char *buf7 = 0 ; int alloc7 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glGetActiveUniform program index bufSize length size type name ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetActiveUniform" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetActiveUniform" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetActiveUniform" "', argument " "2"" of type '" "GLuint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetActiveUniform" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetActiveUniform" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetActiveUniform" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetActiveUniform" "', argument " "4"" of type '" "GLsizei *""'");  }
   arg4 = reinterpret_cast< GLsizei * >(argp4); res5 = SWIG_ConvertPtr(objv[5], &argp5,SWIGTYPE_p_int32_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glGetActiveUniform" "', argument " "5"" of type '" "GLint *""'");  }
   arg5 = reinterpret_cast< GLint * >(argp5); res6 = SWIG_ConvertPtr(objv[6], &argp6,SWIGTYPE_p_uint32_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glGetActiveUniform" "', argument " "6"" of type '" "GLenum *""'");  }
   arg6 = reinterpret_cast< GLenum * >(argp6); res7 = SWIG_AsCharPtrAndSize(objv[7], &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glGetActiveUniform" "', argument " "7"" of type '" "GLchar *""'"); }
   arg7 = reinterpret_cast< GLchar * >(buf7); glGetActiveUniform(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7; return TCL_OK; fail: if (alloc7 == SWIG_NEWOBJ) delete[] buf7; return TCL_ERROR; }
SWIGINTERN int _wrap_glGetUniformfv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLint arg2 ; GLfloat *arg3 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetUniformfv program location params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetUniformfv" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetUniformfv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetUniformfv" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetUniformfv" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetUniformfv" "', argument " "3"" of type '" "GLfloat *""'");  } 
  arg3 = reinterpret_cast< GLfloat * >(argp3); glGetUniformfv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetUniformiv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLint arg2 ; GLint *arg3 = (GLint *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 = 0 ; int res3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glGetUniformiv program location params ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetUniformiv" "', argument " "1"" of type '" "GLuint""'");  }   
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetUniformiv" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetUniformiv" "', argument " "2"" of type '" "GLint""'");  }   
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetUniformiv" "', argument " "2"" of type '" "GLint""'"); }
     else { arg2 = *(reinterpret_cast< GLint * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetUniformiv" "', argument " "3"" of type '" "GLint *""'");  } 
  arg3 = reinterpret_cast< GLint * >(argp3); glGetUniformiv(arg1,arg2,arg3); return TCL_OK; fail: return TCL_ERROR; }
SWIGINTERN int _wrap_glGetShaderSource(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLsizei arg2 ; GLsizei *arg3 = (GLsizei *) 0 ; GLchar *arg4 = (GLchar *) 0 ; void *argp1 ; int res1 = 0 ;
  void *argp2 ; int res2 = 0 ; void *argp3 = 0 ; int res3 = 0 ; int res4 ; char *buf4 = 0 ; int alloc4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glGetShaderSource shader bufSize length source ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetShaderSource" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetShaderSource" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetShaderSource" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetShaderSource" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  } 
  res3 = SWIG_ConvertPtr(objv[3], &argp3,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetShaderSource" "', argument " "3"" of type '" "GLsizei *""'");  }
   arg3 = reinterpret_cast< GLsizei * >(argp3); res4 = SWIG_AsCharPtrAndSize(objv[4], &buf4, NULL, &alloc4);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetShaderSource" "', argument " "4"" of type '" "GLchar *""'"); } 
  arg4 = reinterpret_cast< GLchar * >(buf4); glGetShaderSource(arg1,arg2,arg3,arg4); if (alloc4 == SWIG_NEWOBJ) delete[] buf4;
  return TCL_OK; fail: if (alloc4 == SWIG_NEWOBJ) delete[] buf4; return TCL_ERROR; }
SWIGINTERN int
_wrap_glBindAttribLocation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLuint arg2 ; GLchar *arg3 = (GLchar *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; int res3 ;
  char *buf3 = 0 ; int alloc3 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooo:glBindAttribLocation program index name ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glBindAttribLocation" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBindAttribLocation" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glBindAttribLocation" "', argument " "2"" of type '" "GLuint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glBindAttribLocation" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  res3 = SWIG_AsCharPtrAndSize(objv[3], &buf3, NULL, &alloc3);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glBindAttribLocation" "', argument " "3"" of type '" "GLchar const *""'"); }
   arg3 = reinterpret_cast< GLchar * >(buf3); glBindAttribLocation(arg1,arg2,(char const *)arg3);
  if (alloc3 == SWIG_NEWOBJ) delete[] buf3; return TCL_OK; fail: if (alloc3 == SWIG_NEWOBJ) delete[] buf3; return TCL_ERROR; }
SWIGINTERN int _wrap_glGetActiveAttrib(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLuint arg1 ; GLuint arg2 ; GLsizei arg3 ; GLsizei *arg4 = (GLsizei *) 0 ; GLint *arg5 = (GLint *) 0 ;
  GLenum *arg6 = (GLenum *) 0 ; GLchar *arg7 = (GLchar *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ; void *argp5 = 0 ; int res5 = 0 ; void *argp6 = 0 ;
  int res6 = 0 ; int res7 ; char *buf7 = 0 ; int alloc7 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:glGetActiveAttrib program index bufSize length size type name ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetActiveAttrib" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetActiveAttrib" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetActiveAttrib" "', argument " "2"" of type '" "GLuint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetActiveAttrib" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glGetActiveAttrib" "', argument " "3"" of type '" "GLsizei""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetActiveAttrib" "', argument " "3"" of type '" "GLsizei""'"); }
     else { arg3 = *(reinterpret_cast< GLsizei * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_int32_t, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glGetActiveAttrib" "', argument " "4"" of type '" "GLsizei *""'");  }
   arg4 = reinterpret_cast< GLsizei * >(argp4); res5 = SWIG_ConvertPtr(objv[5], &argp5,SWIGTYPE_p_int32_t, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "glGetActiveAttrib" "', argument " "5"" of type '" "GLint *""'");  } 
  arg5 = reinterpret_cast< GLint * >(argp5); res6 = SWIG_ConvertPtr(objv[6], &argp6,SWIGTYPE_p_uint32_t, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "glGetActiveAttrib" "', argument " "6"" of type '" "GLenum *""'");  }
   arg6 = reinterpret_cast< GLenum * >(argp6); res7 = SWIG_AsCharPtrAndSize(objv[7], &buf7, NULL, &alloc7);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "glGetActiveAttrib" "', argument " "7"" of type '" "GLchar *""'"); } 
  arg7 = reinterpret_cast< GLchar * >(buf7); glGetActiveAttrib(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  if (alloc7 == SWIG_NEWOBJ) delete[] buf7; return TCL_OK; fail: if (alloc7 == SWIG_NEWOBJ) delete[] buf7; return TCL_ERROR; }
SWIGINTERN int
_wrap_glGetAttribLocation(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLuint arg1 ;
  GLchar *arg2 = (GLchar *) 0 ; void *argp1 ; int res1 = 0 ; int res2 ; char *buf2 = 0 ; int alloc2 = 0 ; GLint result;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glGetAttribLocation program name ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glGetAttribLocation" "', argument " "1"" of type '" "GLuint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glGetAttribLocation" "', argument " "1"" of type '" "GLuint""'"); }
     else { arg1 = *(reinterpret_cast< GLuint * >(argp1)); }  }  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glGetAttribLocation" "', argument " "2"" of type '" "GLchar const *""'"); }
   arg2 = reinterpret_cast< GLchar * >(buf2); result = glGetAttribLocation(arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new GLint(static_cast< const GLint& >(result))), SWIGTYPE_p_int32_t, SWIG_POINTER_OWN | 0 ));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return TCL_OK; fail: if (alloc2 == SWIG_NEWOBJ) delete[] buf2; return TCL_ERROR; }
SWIGINTERN int
_wrap_glStencilFuncSeparate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLenum arg2 ; GLint arg3 ; GLuint arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glStencilFuncSeparate face func ref mask ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glStencilFuncSeparate" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilFuncSeparate" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glStencilFuncSeparate" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilFuncSeparate" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glStencilFuncSeparate" "', argument " "3"" of type '" "GLint""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilFuncSeparate" "', argument " "3"" of type '" "GLint""'"); }
     else { arg3 = *(reinterpret_cast< GLint * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glStencilFuncSeparate" "', argument " "4"" of type '" "GLuint""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilFuncSeparate" "', argument " "4"" of type '" "GLuint""'"); }
     else { arg4 = *(reinterpret_cast< GLuint * >(argp4)); }  }  glStencilFuncSeparate(arg1,arg2,arg3,arg4); return TCL_OK;
  fail: return TCL_ERROR; }
SWIGINTERN int
_wrap_glStencilOpSeparate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLenum arg1 ;
  GLenum arg2 ; GLenum arg3 ; GLenum arg4 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ; void *argp3 ;
  int res3 = 0 ; void *argp4 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glStencilOpSeparate face fail zfail zpass ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glStencilOpSeparate" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilOpSeparate" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glStencilOpSeparate" "', argument " "2"" of type '" "GLenum""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilOpSeparate" "', argument " "2"" of type '" "GLenum""'"); }
     else { arg2 = *(reinterpret_cast< GLenum * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glStencilOpSeparate" "', argument " "3"" of type '" "GLenum""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilOpSeparate" "', argument " "3"" of type '" "GLenum""'"); }
     else { arg3 = *(reinterpret_cast< GLenum * >(argp3)); }  }  {
    res4 = SWIG_ConvertPtr(objv[4], &argp4, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glStencilOpSeparate" "', argument " "4"" of type '" "GLenum""'");  }
       if (!argp4) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilOpSeparate" "', argument " "4"" of type '" "GLenum""'"); }
     else { arg4 = *(reinterpret_cast< GLenum * >(argp4)); }  }  glStencilOpSeparate(arg1,arg2,arg3,arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glStencilMaskSeparate(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  GLenum arg1 ; GLuint arg2 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oo:glStencilMaskSeparate face mask ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail; {
    res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glStencilMaskSeparate" "', argument " "1"" of type '" "GLenum""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilMaskSeparate" "', argument " "1"" of type '" "GLenum""'"); }
     else { arg1 = *(reinterpret_cast< GLenum * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_uint32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glStencilMaskSeparate" "', argument " "2"" of type '" "GLuint""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glStencilMaskSeparate" "', argument " "2"" of type '" "GLuint""'"); }
     else { arg2 = *(reinterpret_cast< GLuint * >(argp2)); }  }  glStencilMaskSeparate(arg1,arg2); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glUniformMatrix2x3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLint arg1 ;
  GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix2x3fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix2x3fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2x3fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix2x3fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2x3fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix2x3fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2x3fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix2x3fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix2x3fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glUniformMatrix3x2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLint arg1 ;
  GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix3x2fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix3x2fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3x2fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix3x2fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3x2fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix3x2fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3x2fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix3x2fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix3x2fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glUniformMatrix2x4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLint arg1 ;
  GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix2x4fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix2x4fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2x4fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix2x4fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2x4fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix2x4fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix2x4fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix2x4fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix2x4fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glUniformMatrix4x2fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLint arg1 ;
  GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix4x2fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix4x2fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4x2fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix4x2fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4x2fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix4x2fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4x2fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix4x2fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix4x2fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glUniformMatrix3x4fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLint arg1 ;
  GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix3x4fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix3x4fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3x4fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix3x4fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3x4fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix3x4fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix3x4fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix3x4fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix3x4fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }
SWIGINTERN int
_wrap_glUniformMatrix4x3fv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) { GLint arg1 ;
  GLsizei arg2 ; GLboolean arg3 ; GLfloat *arg4 = (GLfloat *) 0 ; void *argp1 ; int res1 = 0 ; void *argp2 ; int res2 = 0 ;
  void *argp3 ; int res3 = 0 ; void *argp4 = 0 ; int res4 = 0 ;
  if (SWIG_GetArgs(interp, objc, objv,"oooo:glUniformMatrix4x3fv location count transpose value ",(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  { res1 = SWIG_ConvertPtr(objv[1], &argp1, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "glUniformMatrix4x3fv" "', argument " "1"" of type '" "GLint""'");  }
       if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4x3fv" "', argument " "1"" of type '" "GLint""'"); }
     else { arg1 = *(reinterpret_cast< GLint * >(argp1)); }  }  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_int32_t,  0 ); if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "glUniformMatrix4x3fv" "', argument " "2"" of type '" "GLsizei""'");  }
       if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4x3fv" "', argument " "2"" of type '" "GLsizei""'"); }
     else { arg2 = *(reinterpret_cast< GLsizei * >(argp2)); }  }  {
    res3 = SWIG_ConvertPtr(objv[3], &argp3, SWIGTYPE_p_uint8_t,  0 ); if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "glUniformMatrix4x3fv" "', argument " "3"" of type '" "GLboolean""'");  }
       if (!argp3) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "glUniformMatrix4x3fv" "', argument " "3"" of type '" "GLboolean""'"); }
     else { arg3 = *(reinterpret_cast< GLboolean * >(argp3)); }  } 
  res4 = SWIG_ConvertPtr(objv[4], &argp4,SWIGTYPE_p_float, 0 |  0 ); if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "glUniformMatrix4x3fv" "', argument " "4"" of type '" "GLfloat const *""'");  }
   arg4 = reinterpret_cast< GLfloat * >(argp4); glUniformMatrix4x3fv(arg1,arg2,arg3,(float const *)arg4); return TCL_OK; fail:
  return TCL_ERROR; }

static swig_command_info swig_commands[] = {
    { SWIG_prefix "newfv4", (swig_wrapper_func) _wrap_newfv4, NULL},
    { SWIG_prefix "delfv", (swig_wrapper_func) _wrap_delfv, NULL},
    { SWIG_prefix "glAccum", (swig_wrapper_func) _wrap_glAccum, NULL},
    { SWIG_prefix "glAlphaFunc", (swig_wrapper_func) _wrap_glAlphaFunc, NULL},
    { SWIG_prefix "glAreTexturesResident", (swig_wrapper_func) _wrap_glAreTexturesResident, NULL},
    { SWIG_prefix "glArrayElement", (swig_wrapper_func) _wrap_glArrayElement, NULL},
    { SWIG_prefix "glBegin", (swig_wrapper_func) _wrap_glBegin, NULL},
    { SWIG_prefix "glBindTexture", (swig_wrapper_func) _wrap_glBindTexture, NULL},
    { SWIG_prefix "glBitmap", (swig_wrapper_func) _wrap_glBitmap, NULL},
    { SWIG_prefix "glBlendColor", (swig_wrapper_func) _wrap_glBlendColor, NULL},
    { SWIG_prefix "glBlendEquation", (swig_wrapper_func) _wrap_glBlendEquation, NULL},
    { SWIG_prefix "glBlendEquationSeparate", (swig_wrapper_func) _wrap_glBlendEquationSeparate, NULL},
    { SWIG_prefix "glBlendFunc", (swig_wrapper_func) _wrap_glBlendFunc, NULL},
    { SWIG_prefix "glCallList", (swig_wrapper_func) _wrap_glCallList, NULL},
    { SWIG_prefix "glCallLists", (swig_wrapper_func) _wrap_glCallLists, NULL},
    { SWIG_prefix "glClear", (swig_wrapper_func) _wrap_glClear, NULL},
    { SWIG_prefix "glClearAccum", (swig_wrapper_func) _wrap_glClearAccum, NULL},
    { SWIG_prefix "glClearColor", (swig_wrapper_func) _wrap_glClearColor, NULL},
    { SWIG_prefix "glClearDepth", (swig_wrapper_func) _wrap_glClearDepth, NULL},
    { SWIG_prefix "glClearIndex", (swig_wrapper_func) _wrap_glClearIndex, NULL},
    { SWIG_prefix "glClearStencil", (swig_wrapper_func) _wrap_glClearStencil, NULL},
    { SWIG_prefix "glClipPlane", (swig_wrapper_func) _wrap_glClipPlane, NULL},
    { SWIG_prefix "glColor3b", (swig_wrapper_func) _wrap_glColor3b, NULL},
    { SWIG_prefix "glColor3bv", (swig_wrapper_func) _wrap_glColor3bv, NULL},
    { SWIG_prefix "glColor3d", (swig_wrapper_func) _wrap_glColor3d, NULL},
    { SWIG_prefix "glColor3dv", (swig_wrapper_func) _wrap_glColor3dv, NULL},
    { SWIG_prefix "glColor3f", (swig_wrapper_func) _wrap_glColor3f, NULL},
    { SWIG_prefix "glColor3fv", (swig_wrapper_func) _wrap_glColor3fv, NULL},
    { SWIG_prefix "glColor3i", (swig_wrapper_func) _wrap_glColor3i, NULL},
    { SWIG_prefix "glColor3iv", (swig_wrapper_func) _wrap_glColor3iv, NULL},
    { SWIG_prefix "glColor3s", (swig_wrapper_func) _wrap_glColor3s, NULL},
    { SWIG_prefix "glColor3sv", (swig_wrapper_func) _wrap_glColor3sv, NULL},
    { SWIG_prefix "glColor3ub", (swig_wrapper_func) _wrap_glColor3ub, NULL},
    { SWIG_prefix "glColor3ubv", (swig_wrapper_func) _wrap_glColor3ubv, NULL},
    { SWIG_prefix "glColor3ui", (swig_wrapper_func) _wrap_glColor3ui, NULL},
    { SWIG_prefix "glColor3uiv", (swig_wrapper_func) _wrap_glColor3uiv, NULL},
    { SWIG_prefix "glColor3us", (swig_wrapper_func) _wrap_glColor3us, NULL},
    { SWIG_prefix "glColor3usv", (swig_wrapper_func) _wrap_glColor3usv, NULL},
    { SWIG_prefix "glColor4b", (swig_wrapper_func) _wrap_glColor4b, NULL},
    { SWIG_prefix "glColor4bv", (swig_wrapper_func) _wrap_glColor4bv, NULL},
    { SWIG_prefix "glColor4d", (swig_wrapper_func) _wrap_glColor4d, NULL},
    { SWIG_prefix "glColor4dv", (swig_wrapper_func) _wrap_glColor4dv, NULL},
    { SWIG_prefix "glColor4f", (swig_wrapper_func) _wrap_glColor4f, NULL},
    { SWIG_prefix "glColor4fv", (swig_wrapper_func) _wrap_glColor4fv, NULL},
    { SWIG_prefix "glColor4i", (swig_wrapper_func) _wrap_glColor4i, NULL},
    { SWIG_prefix "glColor4iv", (swig_wrapper_func) _wrap_glColor4iv, NULL},
    { SWIG_prefix "glColor4s", (swig_wrapper_func) _wrap_glColor4s, NULL},
    { SWIG_prefix "glColor4sv", (swig_wrapper_func) _wrap_glColor4sv, NULL},
    { SWIG_prefix "glColor4ub", (swig_wrapper_func) _wrap_glColor4ub, NULL},
    { SWIG_prefix "glColor4ubv", (swig_wrapper_func) _wrap_glColor4ubv, NULL},
    { SWIG_prefix "glColor4ui", (swig_wrapper_func) _wrap_glColor4ui, NULL},
    { SWIG_prefix "glColor4uiv", (swig_wrapper_func) _wrap_glColor4uiv, NULL},
    { SWIG_prefix "glColor4us", (swig_wrapper_func) _wrap_glColor4us, NULL},
    { SWIG_prefix "glColor4usv", (swig_wrapper_func) _wrap_glColor4usv, NULL},
    { SWIG_prefix "glColorMask", (swig_wrapper_func) _wrap_glColorMask, NULL},
    { SWIG_prefix "glColorMaterial", (swig_wrapper_func) _wrap_glColorMaterial, NULL},
    { SWIG_prefix "glColorPointer", (swig_wrapper_func) _wrap_glColorPointer, NULL},
    { SWIG_prefix "glColorSubTable", (swig_wrapper_func) _wrap_glColorSubTable, NULL},
    { SWIG_prefix "glColorTable", (swig_wrapper_func) _wrap_glColorTable, NULL},
    { SWIG_prefix "glColorTableParameterfv", (swig_wrapper_func) _wrap_glColorTableParameterfv, NULL},
    { SWIG_prefix "glColorTableParameteriv", (swig_wrapper_func) _wrap_glColorTableParameteriv, NULL},
    { SWIG_prefix "glConvolutionFilter1D", (swig_wrapper_func) _wrap_glConvolutionFilter1D, NULL},
    { SWIG_prefix "glConvolutionFilter2D", (swig_wrapper_func) _wrap_glConvolutionFilter2D, NULL},
    { SWIG_prefix "glConvolutionParameterf", (swig_wrapper_func) _wrap_glConvolutionParameterf, NULL},
    { SWIG_prefix "glConvolutionParameterfv", (swig_wrapper_func) _wrap_glConvolutionParameterfv, NULL},
    { SWIG_prefix "glConvolutionParameteri", (swig_wrapper_func) _wrap_glConvolutionParameteri, NULL},
    { SWIG_prefix "glConvolutionParameteriv", (swig_wrapper_func) _wrap_glConvolutionParameteriv, NULL},
    { SWIG_prefix "glCopyColorSubTable", (swig_wrapper_func) _wrap_glCopyColorSubTable, NULL},
    { SWIG_prefix "glCopyColorTable", (swig_wrapper_func) _wrap_glCopyColorTable, NULL},
    { SWIG_prefix "glCopyConvolutionFilter1D", (swig_wrapper_func) _wrap_glCopyConvolutionFilter1D, NULL},
    { SWIG_prefix "glCopyConvolutionFilter2D", (swig_wrapper_func) _wrap_glCopyConvolutionFilter2D, NULL},
    { SWIG_prefix "glCopyPixels", (swig_wrapper_func) _wrap_glCopyPixels, NULL},
    { SWIG_prefix "glCopyTexImage1D", (swig_wrapper_func) _wrap_glCopyTexImage1D, NULL},
    { SWIG_prefix "glCopyTexImage2D", (swig_wrapper_func) _wrap_glCopyTexImage2D, NULL},
    { SWIG_prefix "glCopyTexSubImage1D", (swig_wrapper_func) _wrap_glCopyTexSubImage1D, NULL},
    { SWIG_prefix "glCopyTexSubImage2D", (swig_wrapper_func) _wrap_glCopyTexSubImage2D, NULL},
    { SWIG_prefix "glCopyTexSubImage3D", (swig_wrapper_func) _wrap_glCopyTexSubImage3D, NULL},
    { SWIG_prefix "glCullFace", (swig_wrapper_func) _wrap_glCullFace, NULL},
    { SWIG_prefix "glDeleteLists", (swig_wrapper_func) _wrap_glDeleteLists, NULL},
    { SWIG_prefix "glDeleteTextures", (swig_wrapper_func) _wrap_glDeleteTextures, NULL},
    { SWIG_prefix "glDepthFunc", (swig_wrapper_func) _wrap_glDepthFunc, NULL},
    { SWIG_prefix "glDepthMask", (swig_wrapper_func) _wrap_glDepthMask, NULL},
    { SWIG_prefix "glDepthRange", (swig_wrapper_func) _wrap_glDepthRange, NULL},
    { SWIG_prefix "glDisable", (swig_wrapper_func) _wrap_glDisable, NULL},
    { SWIG_prefix "glDisableClientState", (swig_wrapper_func) _wrap_glDisableClientState, NULL},
    { SWIG_prefix "glDrawArrays", (swig_wrapper_func) _wrap_glDrawArrays, NULL},
    { SWIG_prefix "glDrawBuffer", (swig_wrapper_func) _wrap_glDrawBuffer, NULL},
    { SWIG_prefix "glDrawElements", (swig_wrapper_func) _wrap_glDrawElements, NULL},
    { SWIG_prefix "glDrawPixels", (swig_wrapper_func) _wrap_glDrawPixels, NULL},
    { SWIG_prefix "glDrawRangeElements", (swig_wrapper_func) _wrap_glDrawRangeElements, NULL},
    { SWIG_prefix "glEdgeFlag", (swig_wrapper_func) _wrap_glEdgeFlag, NULL},
    { SWIG_prefix "glEdgeFlagPointer", (swig_wrapper_func) _wrap_glEdgeFlagPointer, NULL},
    { SWIG_prefix "glEdgeFlagv", (swig_wrapper_func) _wrap_glEdgeFlagv, NULL},
    { SWIG_prefix "glEnable", (swig_wrapper_func) _wrap_glEnable, NULL},
    { SWIG_prefix "glEnableClientState", (swig_wrapper_func) _wrap_glEnableClientState, NULL},
    { SWIG_prefix "glEnd", (swig_wrapper_func) _wrap_glEnd, NULL},
    { SWIG_prefix "glEndList", (swig_wrapper_func) _wrap_glEndList, NULL},
    { SWIG_prefix "glEvalCoord1d", (swig_wrapper_func) _wrap_glEvalCoord1d, NULL},
    { SWIG_prefix "glEvalCoord1dv", (swig_wrapper_func) _wrap_glEvalCoord1dv, NULL},
    { SWIG_prefix "glEvalCoord1f", (swig_wrapper_func) _wrap_glEvalCoord1f, NULL},
    { SWIG_prefix "glEvalCoord1fv", (swig_wrapper_func) _wrap_glEvalCoord1fv, NULL},
    { SWIG_prefix "glEvalCoord2d", (swig_wrapper_func) _wrap_glEvalCoord2d, NULL},
    { SWIG_prefix "glEvalCoord2dv", (swig_wrapper_func) _wrap_glEvalCoord2dv, NULL},
    { SWIG_prefix "glEvalCoord2f", (swig_wrapper_func) _wrap_glEvalCoord2f, NULL},
    { SWIG_prefix "glEvalCoord2fv", (swig_wrapper_func) _wrap_glEvalCoord2fv, NULL},
    { SWIG_prefix "glEvalMesh1", (swig_wrapper_func) _wrap_glEvalMesh1, NULL},
    { SWIG_prefix "glEvalMesh2", (swig_wrapper_func) _wrap_glEvalMesh2, NULL},
    { SWIG_prefix "glEvalPoint1", (swig_wrapper_func) _wrap_glEvalPoint1, NULL},
    { SWIG_prefix "glEvalPoint2", (swig_wrapper_func) _wrap_glEvalPoint2, NULL},
    { SWIG_prefix "glFeedbackBuffer", (swig_wrapper_func) _wrap_glFeedbackBuffer, NULL},
    { SWIG_prefix "glFinish", (swig_wrapper_func) _wrap_glFinish, NULL},
    { SWIG_prefix "glFlush", (swig_wrapper_func) _wrap_glFlush, NULL},
    { SWIG_prefix "glFogf", (swig_wrapper_func) _wrap_glFogf, NULL},
    { SWIG_prefix "glFogfv", (swig_wrapper_func) _wrap_glFogfv, NULL},
    { SWIG_prefix "glFogi", (swig_wrapper_func) _wrap_glFogi, NULL},
    { SWIG_prefix "glFogiv", (swig_wrapper_func) _wrap_glFogiv, NULL},
    { SWIG_prefix "glFrontFace", (swig_wrapper_func) _wrap_glFrontFace, NULL},
    { SWIG_prefix "glFrustum", (swig_wrapper_func) _wrap_glFrustum, NULL},
    { SWIG_prefix "glGenLists", (swig_wrapper_func) _wrap_glGenLists, NULL},
    { SWIG_prefix "glGenTextures", (swig_wrapper_func) _wrap_glGenTextures, NULL},
    { SWIG_prefix "glGetBooleanv", (swig_wrapper_func) _wrap_glGetBooleanv, NULL},
    { SWIG_prefix "glGetClipPlane", (swig_wrapper_func) _wrap_glGetClipPlane, NULL},
    { SWIG_prefix "glGetColorTable", (swig_wrapper_func) _wrap_glGetColorTable, NULL},
    { SWIG_prefix "glGetColorTableParameterfv", (swig_wrapper_func) _wrap_glGetColorTableParameterfv, NULL},
    { SWIG_prefix "glGetColorTableParameteriv", (swig_wrapper_func) _wrap_glGetColorTableParameteriv, NULL},
    { SWIG_prefix "glGetConvolutionFilter", (swig_wrapper_func) _wrap_glGetConvolutionFilter, NULL},
    { SWIG_prefix "glGetConvolutionParameterfv", (swig_wrapper_func) _wrap_glGetConvolutionParameterfv, NULL},
    { SWIG_prefix "glGetConvolutionParameteriv", (swig_wrapper_func) _wrap_glGetConvolutionParameteriv, NULL},
    { SWIG_prefix "glGetDoublev", (swig_wrapper_func) _wrap_glGetDoublev, NULL},
    { SWIG_prefix "glGetError", (swig_wrapper_func) _wrap_glGetError, NULL},
    { SWIG_prefix "glGetFloatv", (swig_wrapper_func) _wrap_glGetFloatv, NULL},
    { SWIG_prefix "glGetHistogram", (swig_wrapper_func) _wrap_glGetHistogram, NULL},
    { SWIG_prefix "glGetHistogramParameterfv", (swig_wrapper_func) _wrap_glGetHistogramParameterfv, NULL},
    { SWIG_prefix "glGetHistogramParameteriv", (swig_wrapper_func) _wrap_glGetHistogramParameteriv, NULL},
    { SWIG_prefix "glGetIntegerv", (swig_wrapper_func) _wrap_glGetIntegerv, NULL},
    { SWIG_prefix "glGetLightfv", (swig_wrapper_func) _wrap_glGetLightfv, NULL},
    { SWIG_prefix "glGetLightiv", (swig_wrapper_func) _wrap_glGetLightiv, NULL},
    { SWIG_prefix "glGetMapdv", (swig_wrapper_func) _wrap_glGetMapdv, NULL},
    { SWIG_prefix "glGetMapfv", (swig_wrapper_func) _wrap_glGetMapfv, NULL},
    { SWIG_prefix "glGetMapiv", (swig_wrapper_func) _wrap_glGetMapiv, NULL},
    { SWIG_prefix "glGetMaterialfv", (swig_wrapper_func) _wrap_glGetMaterialfv, NULL},
    { SWIG_prefix "glGetMaterialiv", (swig_wrapper_func) _wrap_glGetMaterialiv, NULL},
    { SWIG_prefix "glGetMinmax", (swig_wrapper_func) _wrap_glGetMinmax, NULL},
    { SWIG_prefix "glGetMinmaxParameterfv", (swig_wrapper_func) _wrap_glGetMinmaxParameterfv, NULL},
    { SWIG_prefix "glGetMinmaxParameteriv", (swig_wrapper_func) _wrap_glGetMinmaxParameteriv, NULL},
    { SWIG_prefix "glGetPixelMapfv", (swig_wrapper_func) _wrap_glGetPixelMapfv, NULL},
    { SWIG_prefix "glGetPixelMapuiv", (swig_wrapper_func) _wrap_glGetPixelMapuiv, NULL},
    { SWIG_prefix "glGetPixelMapusv", (swig_wrapper_func) _wrap_glGetPixelMapusv, NULL},
    { SWIG_prefix "glGetPointerv", (swig_wrapper_func) _wrap_glGetPointerv, NULL},
    { SWIG_prefix "glGetPolygonStipple", (swig_wrapper_func) _wrap_glGetPolygonStipple, NULL},
    { SWIG_prefix "glGetSeparableFilter", (swig_wrapper_func) _wrap_glGetSeparableFilter, NULL},
    { SWIG_prefix "glGetString", (swig_wrapper_func) _wrap_glGetString, NULL},
    { SWIG_prefix "glGetTexEnvfv", (swig_wrapper_func) _wrap_glGetTexEnvfv, NULL},
    { SWIG_prefix "glGetTexEnviv", (swig_wrapper_func) _wrap_glGetTexEnviv, NULL},
    { SWIG_prefix "glGetTexGendv", (swig_wrapper_func) _wrap_glGetTexGendv, NULL},
    { SWIG_prefix "glGetTexGenfv", (swig_wrapper_func) _wrap_glGetTexGenfv, NULL},
    { SWIG_prefix "glGetTexGeniv", (swig_wrapper_func) _wrap_glGetTexGeniv, NULL},
    { SWIG_prefix "glGetTexImage", (swig_wrapper_func) _wrap_glGetTexImage, NULL},
    { SWIG_prefix "glGetTexLevelParameterfv", (swig_wrapper_func) _wrap_glGetTexLevelParameterfv, NULL},
    { SWIG_prefix "glGetTexLevelParameteriv", (swig_wrapper_func) _wrap_glGetTexLevelParameteriv, NULL},
    { SWIG_prefix "glGetTexParameterfv", (swig_wrapper_func) _wrap_glGetTexParameterfv, NULL},
    { SWIG_prefix "glGetTexParameteriv", (swig_wrapper_func) _wrap_glGetTexParameteriv, NULL},
    { SWIG_prefix "glHint", (swig_wrapper_func) _wrap_glHint, NULL},
    { SWIG_prefix "glHistogram", (swig_wrapper_func) _wrap_glHistogram, NULL},
    { SWIG_prefix "glIndexMask", (swig_wrapper_func) _wrap_glIndexMask, NULL},
    { SWIG_prefix "glIndexPointer", (swig_wrapper_func) _wrap_glIndexPointer, NULL},
    { SWIG_prefix "glIndexd", (swig_wrapper_func) _wrap_glIndexd, NULL},
    { SWIG_prefix "glIndexdv", (swig_wrapper_func) _wrap_glIndexdv, NULL},
    { SWIG_prefix "glIndexf", (swig_wrapper_func) _wrap_glIndexf, NULL},
    { SWIG_prefix "glIndexfv", (swig_wrapper_func) _wrap_glIndexfv, NULL},
    { SWIG_prefix "glIndexi", (swig_wrapper_func) _wrap_glIndexi, NULL},
    { SWIG_prefix "glIndexiv", (swig_wrapper_func) _wrap_glIndexiv, NULL},
    { SWIG_prefix "glIndexs", (swig_wrapper_func) _wrap_glIndexs, NULL},
    { SWIG_prefix "glIndexsv", (swig_wrapper_func) _wrap_glIndexsv, NULL},
    { SWIG_prefix "glIndexub", (swig_wrapper_func) _wrap_glIndexub, NULL},
    { SWIG_prefix "glIndexubv", (swig_wrapper_func) _wrap_glIndexubv, NULL},
    { SWIG_prefix "glInitNames", (swig_wrapper_func) _wrap_glInitNames, NULL},
    { SWIG_prefix "glInterleavedArrays", (swig_wrapper_func) _wrap_glInterleavedArrays, NULL},
    { SWIG_prefix "glIsEnabled", (swig_wrapper_func) _wrap_glIsEnabled, NULL},
    { SWIG_prefix "glIsList", (swig_wrapper_func) _wrap_glIsList, NULL},
    { SWIG_prefix "glIsTexture", (swig_wrapper_func) _wrap_glIsTexture, NULL},
    { SWIG_prefix "glLightModelf", (swig_wrapper_func) _wrap_glLightModelf, NULL},
    { SWIG_prefix "glLightModelfv", (swig_wrapper_func) _wrap_glLightModelfv, NULL},
    { SWIG_prefix "glLightModeli", (swig_wrapper_func) _wrap_glLightModeli, NULL},
    { SWIG_prefix "glLightModeliv", (swig_wrapper_func) _wrap_glLightModeliv, NULL},
    { SWIG_prefix "glLightf", (swig_wrapper_func) _wrap_glLightf, NULL},
    { SWIG_prefix "glLightfv", (swig_wrapper_func) _wrap_glLightfv, NULL},
    { SWIG_prefix "glLighti", (swig_wrapper_func) _wrap_glLighti, NULL},
    { SWIG_prefix "glLightiv", (swig_wrapper_func) _wrap_glLightiv, NULL},
    { SWIG_prefix "glLineStipple", (swig_wrapper_func) _wrap_glLineStipple, NULL},
    { SWIG_prefix "glLineWidth", (swig_wrapper_func) _wrap_glLineWidth, NULL},
    { SWIG_prefix "glListBase", (swig_wrapper_func) _wrap_glListBase, NULL},
    { SWIG_prefix "glLoadIdentity", (swig_wrapper_func) _wrap_glLoadIdentity, NULL},
    { SWIG_prefix "glLoadMatrixd", (swig_wrapper_func) _wrap_glLoadMatrixd, NULL},
    { SWIG_prefix "glLoadMatrixf", (swig_wrapper_func) _wrap_glLoadMatrixf, NULL},
    { SWIG_prefix "glLoadName", (swig_wrapper_func) _wrap_glLoadName, NULL},
    { SWIG_prefix "glLogicOp", (swig_wrapper_func) _wrap_glLogicOp, NULL},
    { SWIG_prefix "glMap1d", (swig_wrapper_func) _wrap_glMap1d, NULL},
    { SWIG_prefix "glMap1f", (swig_wrapper_func) _wrap_glMap1f, NULL},
    { SWIG_prefix "glMap2d", (swig_wrapper_func) _wrap_glMap2d, NULL},
    { SWIG_prefix "glMap2f", (swig_wrapper_func) _wrap_glMap2f, NULL},
    { SWIG_prefix "glMapGrid1d", (swig_wrapper_func) _wrap_glMapGrid1d, NULL},
    { SWIG_prefix "glMapGrid1f", (swig_wrapper_func) _wrap_glMapGrid1f, NULL},
    { SWIG_prefix "glMapGrid2d", (swig_wrapper_func) _wrap_glMapGrid2d, NULL},
    { SWIG_prefix "glMapGrid2f", (swig_wrapper_func) _wrap_glMapGrid2f, NULL},
    { SWIG_prefix "glMaterialf", (swig_wrapper_func) _wrap_glMaterialf, NULL},
    { SWIG_prefix "glMaterialfv", (swig_wrapper_func) _wrap_glMaterialfv, NULL},
    { SWIG_prefix "glMateriali", (swig_wrapper_func) _wrap_glMateriali, NULL},
    { SWIG_prefix "glMaterialiv", (swig_wrapper_func) _wrap_glMaterialiv, NULL},
    { SWIG_prefix "glMatrixMode", (swig_wrapper_func) _wrap_glMatrixMode, NULL},
    { SWIG_prefix "glMinmax", (swig_wrapper_func) _wrap_glMinmax, NULL},
    { SWIG_prefix "glMultMatrixd", (swig_wrapper_func) _wrap_glMultMatrixd, NULL},
    { SWIG_prefix "glMultMatrixf", (swig_wrapper_func) _wrap_glMultMatrixf, NULL},
    { SWIG_prefix "glNewList", (swig_wrapper_func) _wrap_glNewList, NULL},
    { SWIG_prefix "glNormal3b", (swig_wrapper_func) _wrap_glNormal3b, NULL},
    { SWIG_prefix "glNormal3bv", (swig_wrapper_func) _wrap_glNormal3bv, NULL},
    { SWIG_prefix "glNormal3d", (swig_wrapper_func) _wrap_glNormal3d, NULL},
    { SWIG_prefix "glNormal3dv", (swig_wrapper_func) _wrap_glNormal3dv, NULL},
    { SWIG_prefix "glNormal3f", (swig_wrapper_func) _wrap_glNormal3f, NULL},
    { SWIG_prefix "glNormal3fv", (swig_wrapper_func) _wrap_glNormal3fv, NULL},
    { SWIG_prefix "glNormal3i", (swig_wrapper_func) _wrap_glNormal3i, NULL},
    { SWIG_prefix "glNormal3iv", (swig_wrapper_func) _wrap_glNormal3iv, NULL},
    { SWIG_prefix "glNormal3s", (swig_wrapper_func) _wrap_glNormal3s, NULL},
    { SWIG_prefix "glNormal3sv", (swig_wrapper_func) _wrap_glNormal3sv, NULL},
    { SWIG_prefix "glNormalPointer", (swig_wrapper_func) _wrap_glNormalPointer, NULL},
    { SWIG_prefix "glOrtho", (swig_wrapper_func) _wrap_glOrtho, NULL},
    { SWIG_prefix "glPassThrough", (swig_wrapper_func) _wrap_glPassThrough, NULL},
    { SWIG_prefix "glPixelMapfv", (swig_wrapper_func) _wrap_glPixelMapfv, NULL},
    { SWIG_prefix "glPixelMapuiv", (swig_wrapper_func) _wrap_glPixelMapuiv, NULL},
    { SWIG_prefix "glPixelMapusv", (swig_wrapper_func) _wrap_glPixelMapusv, NULL},
    { SWIG_prefix "glPixelStoref", (swig_wrapper_func) _wrap_glPixelStoref, NULL},
    { SWIG_prefix "glPixelStorei", (swig_wrapper_func) _wrap_glPixelStorei, NULL},
    { SWIG_prefix "glPixelTransferf", (swig_wrapper_func) _wrap_glPixelTransferf, NULL},
    { SWIG_prefix "glPixelTransferi", (swig_wrapper_func) _wrap_glPixelTransferi, NULL},
    { SWIG_prefix "glPixelZoom", (swig_wrapper_func) _wrap_glPixelZoom, NULL},
    { SWIG_prefix "glPointSize", (swig_wrapper_func) _wrap_glPointSize, NULL},
    { SWIG_prefix "glPolygonMode", (swig_wrapper_func) _wrap_glPolygonMode, NULL},
    { SWIG_prefix "glPolygonOffset", (swig_wrapper_func) _wrap_glPolygonOffset, NULL},
    { SWIG_prefix "glPolygonStipple", (swig_wrapper_func) _wrap_glPolygonStipple, NULL},
    { SWIG_prefix "glPopAttrib", (swig_wrapper_func) _wrap_glPopAttrib, NULL},
    { SWIG_prefix "glPopClientAttrib", (swig_wrapper_func) _wrap_glPopClientAttrib, NULL},
    { SWIG_prefix "glPopMatrix", (swig_wrapper_func) _wrap_glPopMatrix, NULL},
    { SWIG_prefix "glPopName", (swig_wrapper_func) _wrap_glPopName, NULL},
    { SWIG_prefix "glPrioritizeTextures", (swig_wrapper_func) _wrap_glPrioritizeTextures, NULL},
    { SWIG_prefix "glPushAttrib", (swig_wrapper_func) _wrap_glPushAttrib, NULL},
    { SWIG_prefix "glPushClientAttrib", (swig_wrapper_func) _wrap_glPushClientAttrib, NULL},
    { SWIG_prefix "glPushMatrix", (swig_wrapper_func) _wrap_glPushMatrix, NULL},
    { SWIG_prefix "glPushName", (swig_wrapper_func) _wrap_glPushName, NULL},
    { SWIG_prefix "glRasterPos2d", (swig_wrapper_func) _wrap_glRasterPos2d, NULL},
    { SWIG_prefix "glRasterPos2dv", (swig_wrapper_func) _wrap_glRasterPos2dv, NULL},
    { SWIG_prefix "glRasterPos2f", (swig_wrapper_func) _wrap_glRasterPos2f, NULL},
    { SWIG_prefix "glRasterPos2fv", (swig_wrapper_func) _wrap_glRasterPos2fv, NULL},
    { SWIG_prefix "glRasterPos2i", (swig_wrapper_func) _wrap_glRasterPos2i, NULL},
    { SWIG_prefix "glRasterPos2iv", (swig_wrapper_func) _wrap_glRasterPos2iv, NULL},
    { SWIG_prefix "glRasterPos2s", (swig_wrapper_func) _wrap_glRasterPos2s, NULL},
    { SWIG_prefix "glRasterPos2sv", (swig_wrapper_func) _wrap_glRasterPos2sv, NULL},
    { SWIG_prefix "glRasterPos3d", (swig_wrapper_func) _wrap_glRasterPos3d, NULL},
    { SWIG_prefix "glRasterPos3dv", (swig_wrapper_func) _wrap_glRasterPos3dv, NULL},
    { SWIG_prefix "glRasterPos3f", (swig_wrapper_func) _wrap_glRasterPos3f, NULL},
    { SWIG_prefix "glRasterPos3fv", (swig_wrapper_func) _wrap_glRasterPos3fv, NULL},
    { SWIG_prefix "glRasterPos3i", (swig_wrapper_func) _wrap_glRasterPos3i, NULL},
    { SWIG_prefix "glRasterPos3iv", (swig_wrapper_func) _wrap_glRasterPos3iv, NULL},
    { SWIG_prefix "glRasterPos3s", (swig_wrapper_func) _wrap_glRasterPos3s, NULL},
    { SWIG_prefix "glRasterPos3sv", (swig_wrapper_func) _wrap_glRasterPos3sv, NULL},
    { SWIG_prefix "glRasterPos4d", (swig_wrapper_func) _wrap_glRasterPos4d, NULL},
    { SWIG_prefix "glRasterPos4dv", (swig_wrapper_func) _wrap_glRasterPos4dv, NULL},
    { SWIG_prefix "glRasterPos4f", (swig_wrapper_func) _wrap_glRasterPos4f, NULL},
    { SWIG_prefix "glRasterPos4fv", (swig_wrapper_func) _wrap_glRasterPos4fv, NULL},
    { SWIG_prefix "glRasterPos4i", (swig_wrapper_func) _wrap_glRasterPos4i, NULL},
    { SWIG_prefix "glRasterPos4iv", (swig_wrapper_func) _wrap_glRasterPos4iv, NULL},
    { SWIG_prefix "glRasterPos4s", (swig_wrapper_func) _wrap_glRasterPos4s, NULL},
    { SWIG_prefix "glRasterPos4sv", (swig_wrapper_func) _wrap_glRasterPos4sv, NULL},
    { SWIG_prefix "glReadBuffer", (swig_wrapper_func) _wrap_glReadBuffer, NULL},
    { SWIG_prefix "glReadPixels", (swig_wrapper_func) _wrap_glReadPixels, NULL},
    { SWIG_prefix "glRectd", (swig_wrapper_func) _wrap_glRectd, NULL},
    { SWIG_prefix "glRectdv", (swig_wrapper_func) _wrap_glRectdv, NULL},
    { SWIG_prefix "glRectf", (swig_wrapper_func) _wrap_glRectf, NULL},
    { SWIG_prefix "glRectfv", (swig_wrapper_func) _wrap_glRectfv, NULL},
    { SWIG_prefix "glRecti", (swig_wrapper_func) _wrap_glRecti, NULL},
    { SWIG_prefix "glRectiv", (swig_wrapper_func) _wrap_glRectiv, NULL},
    { SWIG_prefix "glRects", (swig_wrapper_func) _wrap_glRects, NULL},
    { SWIG_prefix "glRectsv", (swig_wrapper_func) _wrap_glRectsv, NULL},
    { SWIG_prefix "glRenderMode", (swig_wrapper_func) _wrap_glRenderMode, NULL},
    { SWIG_prefix "glResetHistogram", (swig_wrapper_func) _wrap_glResetHistogram, NULL},
    { SWIG_prefix "glResetMinmax", (swig_wrapper_func) _wrap_glResetMinmax, NULL},
    { SWIG_prefix "glRotated", (swig_wrapper_func) _wrap_glRotated, NULL},
    { SWIG_prefix "glRotatef", (swig_wrapper_func) _wrap_glRotatef, NULL},
    { SWIG_prefix "glScaled", (swig_wrapper_func) _wrap_glScaled, NULL},
    { SWIG_prefix "glScalef", (swig_wrapper_func) _wrap_glScalef, NULL},
    { SWIG_prefix "glScissor", (swig_wrapper_func) _wrap_glScissor, NULL},
    { SWIG_prefix "glSelectBuffer", (swig_wrapper_func) _wrap_glSelectBuffer, NULL},
    { SWIG_prefix "glSeparableFilter2D", (swig_wrapper_func) _wrap_glSeparableFilter2D, NULL},
    { SWIG_prefix "glShadeModel", (swig_wrapper_func) _wrap_glShadeModel, NULL},
    { SWIG_prefix "glStencilFunc", (swig_wrapper_func) _wrap_glStencilFunc, NULL},
    { SWIG_prefix "glStencilMask", (swig_wrapper_func) _wrap_glStencilMask, NULL},
    { SWIG_prefix "glStencilOp", (swig_wrapper_func) _wrap_glStencilOp, NULL},
    { SWIG_prefix "glTexCoord1d", (swig_wrapper_func) _wrap_glTexCoord1d, NULL},
    { SWIG_prefix "glTexCoord1dv", (swig_wrapper_func) _wrap_glTexCoord1dv, NULL},
    { SWIG_prefix "glTexCoord1f", (swig_wrapper_func) _wrap_glTexCoord1f, NULL},
    { SWIG_prefix "glTexCoord1fv", (swig_wrapper_func) _wrap_glTexCoord1fv, NULL},
    { SWIG_prefix "glTexCoord1i", (swig_wrapper_func) _wrap_glTexCoord1i, NULL},
    { SWIG_prefix "glTexCoord1iv", (swig_wrapper_func) _wrap_glTexCoord1iv, NULL},
    { SWIG_prefix "glTexCoord1s", (swig_wrapper_func) _wrap_glTexCoord1s, NULL},
    { SWIG_prefix "glTexCoord1sv", (swig_wrapper_func) _wrap_glTexCoord1sv, NULL},
    { SWIG_prefix "glTexCoord2d", (swig_wrapper_func) _wrap_glTexCoord2d, NULL},
    { SWIG_prefix "glTexCoord2dv", (swig_wrapper_func) _wrap_glTexCoord2dv, NULL},
    { SWIG_prefix "glTexCoord2f", (swig_wrapper_func) _wrap_glTexCoord2f, NULL},
    { SWIG_prefix "glTexCoord2fv", (swig_wrapper_func) _wrap_glTexCoord2fv, NULL},
    { SWIG_prefix "glTexCoord2i", (swig_wrapper_func) _wrap_glTexCoord2i, NULL},
    { SWIG_prefix "glTexCoord2iv", (swig_wrapper_func) _wrap_glTexCoord2iv, NULL},
    { SWIG_prefix "glTexCoord2s", (swig_wrapper_func) _wrap_glTexCoord2s, NULL},
    { SWIG_prefix "glTexCoord2sv", (swig_wrapper_func) _wrap_glTexCoord2sv, NULL},
    { SWIG_prefix "glTexCoord3d", (swig_wrapper_func) _wrap_glTexCoord3d, NULL},
    { SWIG_prefix "glTexCoord3dv", (swig_wrapper_func) _wrap_glTexCoord3dv, NULL},
    { SWIG_prefix "glTexCoord3f", (swig_wrapper_func) _wrap_glTexCoord3f, NULL},
    { SWIG_prefix "glTexCoord3fv", (swig_wrapper_func) _wrap_glTexCoord3fv, NULL},
    { SWIG_prefix "glTexCoord3i", (swig_wrapper_func) _wrap_glTexCoord3i, NULL},
    { SWIG_prefix "glTexCoord3iv", (swig_wrapper_func) _wrap_glTexCoord3iv, NULL},
    { SWIG_prefix "glTexCoord3s", (swig_wrapper_func) _wrap_glTexCoord3s, NULL},
    { SWIG_prefix "glTexCoord3sv", (swig_wrapper_func) _wrap_glTexCoord3sv, NULL},
    { SWIG_prefix "glTexCoord4d", (swig_wrapper_func) _wrap_glTexCoord4d, NULL},
    { SWIG_prefix "glTexCoord4dv", (swig_wrapper_func) _wrap_glTexCoord4dv, NULL},
    { SWIG_prefix "glTexCoord4f", (swig_wrapper_func) _wrap_glTexCoord4f, NULL},
    { SWIG_prefix "glTexCoord4fv", (swig_wrapper_func) _wrap_glTexCoord4fv, NULL},
    { SWIG_prefix "glTexCoord4i", (swig_wrapper_func) _wrap_glTexCoord4i, NULL},
    { SWIG_prefix "glTexCoord4iv", (swig_wrapper_func) _wrap_glTexCoord4iv, NULL},
    { SWIG_prefix "glTexCoord4s", (swig_wrapper_func) _wrap_glTexCoord4s, NULL},
    { SWIG_prefix "glTexCoord4sv", (swig_wrapper_func) _wrap_glTexCoord4sv, NULL},
    { SWIG_prefix "glTexCoordPointer", (swig_wrapper_func) _wrap_glTexCoordPointer, NULL},
    { SWIG_prefix "glTexEnvf", (swig_wrapper_func) _wrap_glTexEnvf, NULL},
    { SWIG_prefix "glTexEnvfv", (swig_wrapper_func) _wrap_glTexEnvfv, NULL},
    { SWIG_prefix "glTexEnvi", (swig_wrapper_func) _wrap_glTexEnvi, NULL},
    { SWIG_prefix "glTexEnviv", (swig_wrapper_func) _wrap_glTexEnviv, NULL},
    { SWIG_prefix "glTexGend", (swig_wrapper_func) _wrap_glTexGend, NULL},
    { SWIG_prefix "glTexGendv", (swig_wrapper_func) _wrap_glTexGendv, NULL},
    { SWIG_prefix "glTexGenf", (swig_wrapper_func) _wrap_glTexGenf, NULL},
    { SWIG_prefix "glTexGenfv", (swig_wrapper_func) _wrap_glTexGenfv, NULL},
    { SWIG_prefix "glTexGeni", (swig_wrapper_func) _wrap_glTexGeni, NULL},
    { SWIG_prefix "glTexGeniv", (swig_wrapper_func) _wrap_glTexGeniv, NULL},
    { SWIG_prefix "glTexImage1D", (swig_wrapper_func) _wrap_glTexImage1D, NULL},
    { SWIG_prefix "glTexImage2D", (swig_wrapper_func) _wrap_glTexImage2D, NULL},
    { SWIG_prefix "glTexImage3D", (swig_wrapper_func) _wrap_glTexImage3D, NULL},
    { SWIG_prefix "glTexParameterf", (swig_wrapper_func) _wrap_glTexParameterf, NULL},
    { SWIG_prefix "glTexParameterfv", (swig_wrapper_func) _wrap_glTexParameterfv, NULL},
    { SWIG_prefix "glTexParameteri", (swig_wrapper_func) _wrap_glTexParameteri, NULL},
    { SWIG_prefix "glTexParameteriv", (swig_wrapper_func) _wrap_glTexParameteriv, NULL},
    { SWIG_prefix "glTexSubImage1D", (swig_wrapper_func) _wrap_glTexSubImage1D, NULL},
    { SWIG_prefix "glTexSubImage2D", (swig_wrapper_func) _wrap_glTexSubImage2D, NULL},
    { SWIG_prefix "glTexSubImage3D", (swig_wrapper_func) _wrap_glTexSubImage3D, NULL},
    { SWIG_prefix "glTranslated", (swig_wrapper_func) _wrap_glTranslated, NULL},
    { SWIG_prefix "glTranslatef", (swig_wrapper_func) _wrap_glTranslatef, NULL},
    { SWIG_prefix "glVertex2d", (swig_wrapper_func) _wrap_glVertex2d, NULL},
    { SWIG_prefix "glVertex2dv", (swig_wrapper_func) _wrap_glVertex2dv, NULL},
    { SWIG_prefix "glVertex2f", (swig_wrapper_func) _wrap_glVertex2f, NULL},
    { SWIG_prefix "glVertex2fv", (swig_wrapper_func) _wrap_glVertex2fv, NULL},
    { SWIG_prefix "glVertex2i", (swig_wrapper_func) _wrap_glVertex2i, NULL},
    { SWIG_prefix "glVertex2iv", (swig_wrapper_func) _wrap_glVertex2iv, NULL},
    { SWIG_prefix "glVertex2s", (swig_wrapper_func) _wrap_glVertex2s, NULL},
    { SWIG_prefix "glVertex2sv", (swig_wrapper_func) _wrap_glVertex2sv, NULL},
    { SWIG_prefix "glVertex3d", (swig_wrapper_func) _wrap_glVertex3d, NULL},
    { SWIG_prefix "glVertex3dv", (swig_wrapper_func) _wrap_glVertex3dv, NULL},
    { SWIG_prefix "glVertex3f", (swig_wrapper_func) _wrap_glVertex3f, NULL},
    { SWIG_prefix "glVertex3fv", (swig_wrapper_func) _wrap_glVertex3fv, NULL},
    { SWIG_prefix "glVertex3i", (swig_wrapper_func) _wrap_glVertex3i, NULL},
    { SWIG_prefix "glVertex3iv", (swig_wrapper_func) _wrap_glVertex3iv, NULL},
    { SWIG_prefix "glVertex3s", (swig_wrapper_func) _wrap_glVertex3s, NULL},
    { SWIG_prefix "glVertex3sv", (swig_wrapper_func) _wrap_glVertex3sv, NULL},
    { SWIG_prefix "glVertex4d", (swig_wrapper_func) _wrap_glVertex4d, NULL},
    { SWIG_prefix "glVertex4dv", (swig_wrapper_func) _wrap_glVertex4dv, NULL},
    { SWIG_prefix "glVertex4f", (swig_wrapper_func) _wrap_glVertex4f, NULL},
    { SWIG_prefix "glVertex4fv", (swig_wrapper_func) _wrap_glVertex4fv, NULL},
    { SWIG_prefix "glVertex4i", (swig_wrapper_func) _wrap_glVertex4i, NULL},
    { SWIG_prefix "glVertex4iv", (swig_wrapper_func) _wrap_glVertex4iv, NULL},
    { SWIG_prefix "glVertex4s", (swig_wrapper_func) _wrap_glVertex4s, NULL},
    { SWIG_prefix "glVertex4sv", (swig_wrapper_func) _wrap_glVertex4sv, NULL},
    { SWIG_prefix "glVertexPointer", (swig_wrapper_func) _wrap_glVertexPointer, NULL},
    { SWIG_prefix "glViewport", (swig_wrapper_func) _wrap_glViewport, NULL},
    { SWIG_prefix "glSampleCoverage", (swig_wrapper_func) _wrap_glSampleCoverage, NULL},
    { SWIG_prefix "glLoadTransposeMatrixf", (swig_wrapper_func) _wrap_glLoadTransposeMatrixf, NULL},
    { SWIG_prefix "glLoadTransposeMatrixd", (swig_wrapper_func) _wrap_glLoadTransposeMatrixd, NULL},
    { SWIG_prefix "glMultTransposeMatrixf", (swig_wrapper_func) _wrap_glMultTransposeMatrixf, NULL},
    { SWIG_prefix "glMultTransposeMatrixd", (swig_wrapper_func) _wrap_glMultTransposeMatrixd, NULL},
    { SWIG_prefix "glCompressedTexImage3D", (swig_wrapper_func) _wrap_glCompressedTexImage3D, NULL},
    { SWIG_prefix "glCompressedTexImage2D", (swig_wrapper_func) _wrap_glCompressedTexImage2D, NULL},
    { SWIG_prefix "glCompressedTexImage1D", (swig_wrapper_func) _wrap_glCompressedTexImage1D, NULL},
    { SWIG_prefix "glCompressedTexSubImage3D", (swig_wrapper_func) _wrap_glCompressedTexSubImage3D, NULL},
    { SWIG_prefix "glCompressedTexSubImage2D", (swig_wrapper_func) _wrap_glCompressedTexSubImage2D, NULL},
    { SWIG_prefix "glCompressedTexSubImage1D", (swig_wrapper_func) _wrap_glCompressedTexSubImage1D, NULL},
    { SWIG_prefix "glGetCompressedTexImage", (swig_wrapper_func) _wrap_glGetCompressedTexImage, NULL},
    { SWIG_prefix "glActiveTexture", (swig_wrapper_func) _wrap_glActiveTexture, NULL},
    { SWIG_prefix "glClientActiveTexture", (swig_wrapper_func) _wrap_glClientActiveTexture, NULL},
    { SWIG_prefix "glMultiTexCoord1d", (swig_wrapper_func) _wrap_glMultiTexCoord1d, NULL},
    { SWIG_prefix "glMultiTexCoord1dv", (swig_wrapper_func) _wrap_glMultiTexCoord1dv, NULL},
    { SWIG_prefix "glMultiTexCoord1f", (swig_wrapper_func) _wrap_glMultiTexCoord1f, NULL},
    { SWIG_prefix "glMultiTexCoord1fv", (swig_wrapper_func) _wrap_glMultiTexCoord1fv, NULL},
    { SWIG_prefix "glMultiTexCoord1i", (swig_wrapper_func) _wrap_glMultiTexCoord1i, NULL},
    { SWIG_prefix "glMultiTexCoord1iv", (swig_wrapper_func) _wrap_glMultiTexCoord1iv, NULL},
    { SWIG_prefix "glMultiTexCoord1s", (swig_wrapper_func) _wrap_glMultiTexCoord1s, NULL},
    { SWIG_prefix "glMultiTexCoord1sv", (swig_wrapper_func) _wrap_glMultiTexCoord1sv, NULL},
    { SWIG_prefix "glMultiTexCoord2d", (swig_wrapper_func) _wrap_glMultiTexCoord2d, NULL},
    { SWIG_prefix "glMultiTexCoord2dv", (swig_wrapper_func) _wrap_glMultiTexCoord2dv, NULL},
    { SWIG_prefix "glMultiTexCoord2f", (swig_wrapper_func) _wrap_glMultiTexCoord2f, NULL},
    { SWIG_prefix "glMultiTexCoord2fv", (swig_wrapper_func) _wrap_glMultiTexCoord2fv, NULL},
    { SWIG_prefix "glMultiTexCoord2i", (swig_wrapper_func) _wrap_glMultiTexCoord2i, NULL},
    { SWIG_prefix "glMultiTexCoord2iv", (swig_wrapper_func) _wrap_glMultiTexCoord2iv, NULL},
    { SWIG_prefix "glMultiTexCoord2s", (swig_wrapper_func) _wrap_glMultiTexCoord2s, NULL},
    { SWIG_prefix "glMultiTexCoord2sv", (swig_wrapper_func) _wrap_glMultiTexCoord2sv, NULL},
    { SWIG_prefix "glMultiTexCoord3d", (swig_wrapper_func) _wrap_glMultiTexCoord3d, NULL},
    { SWIG_prefix "glMultiTexCoord3dv", (swig_wrapper_func) _wrap_glMultiTexCoord3dv, NULL},
    { SWIG_prefix "glMultiTexCoord3f", (swig_wrapper_func) _wrap_glMultiTexCoord3f, NULL},
    { SWIG_prefix "glMultiTexCoord3fv", (swig_wrapper_func) _wrap_glMultiTexCoord3fv, NULL},
    { SWIG_prefix "glMultiTexCoord3i", (swig_wrapper_func) _wrap_glMultiTexCoord3i, NULL},
    { SWIG_prefix "glMultiTexCoord3iv", (swig_wrapper_func) _wrap_glMultiTexCoord3iv, NULL},
    { SWIG_prefix "glMultiTexCoord3s", (swig_wrapper_func) _wrap_glMultiTexCoord3s, NULL},
    { SWIG_prefix "glMultiTexCoord3sv", (swig_wrapper_func) _wrap_glMultiTexCoord3sv, NULL},
    { SWIG_prefix "glMultiTexCoord4d", (swig_wrapper_func) _wrap_glMultiTexCoord4d, NULL},
    { SWIG_prefix "glMultiTexCoord4dv", (swig_wrapper_func) _wrap_glMultiTexCoord4dv, NULL},
    { SWIG_prefix "glMultiTexCoord4f", (swig_wrapper_func) _wrap_glMultiTexCoord4f, NULL},
    { SWIG_prefix "glMultiTexCoord4fv", (swig_wrapper_func) _wrap_glMultiTexCoord4fv, NULL},
    { SWIG_prefix "glMultiTexCoord4i", (swig_wrapper_func) _wrap_glMultiTexCoord4i, NULL},
    { SWIG_prefix "glMultiTexCoord4iv", (swig_wrapper_func) _wrap_glMultiTexCoord4iv, NULL},
    { SWIG_prefix "glMultiTexCoord4s", (swig_wrapper_func) _wrap_glMultiTexCoord4s, NULL},
    { SWIG_prefix "glMultiTexCoord4sv", (swig_wrapper_func) _wrap_glMultiTexCoord4sv, NULL},
    { SWIG_prefix "glFogCoordf", (swig_wrapper_func) _wrap_glFogCoordf, NULL},
    { SWIG_prefix "glFogCoordfv", (swig_wrapper_func) _wrap_glFogCoordfv, NULL},
    { SWIG_prefix "glFogCoordd", (swig_wrapper_func) _wrap_glFogCoordd, NULL},
    { SWIG_prefix "glFogCoorddv", (swig_wrapper_func) _wrap_glFogCoorddv, NULL},
    { SWIG_prefix "glFogCoordPointer", (swig_wrapper_func) _wrap_glFogCoordPointer, NULL},
    { SWIG_prefix "glSecondaryColor3b", (swig_wrapper_func) _wrap_glSecondaryColor3b, NULL},
    { SWIG_prefix "glSecondaryColor3bv", (swig_wrapper_func) _wrap_glSecondaryColor3bv, NULL},
    { SWIG_prefix "glSecondaryColor3d", (swig_wrapper_func) _wrap_glSecondaryColor3d, NULL},
    { SWIG_prefix "glSecondaryColor3dv", (swig_wrapper_func) _wrap_glSecondaryColor3dv, NULL},
    { SWIG_prefix "glSecondaryColor3f", (swig_wrapper_func) _wrap_glSecondaryColor3f, NULL},
    { SWIG_prefix "glSecondaryColor3fv", (swig_wrapper_func) _wrap_glSecondaryColor3fv, NULL},
    { SWIG_prefix "glSecondaryColor3i", (swig_wrapper_func) _wrap_glSecondaryColor3i, NULL},
    { SWIG_prefix "glSecondaryColor3iv", (swig_wrapper_func) _wrap_glSecondaryColor3iv, NULL},
    { SWIG_prefix "glSecondaryColor3s", (swig_wrapper_func) _wrap_glSecondaryColor3s, NULL},
    { SWIG_prefix "glSecondaryColor3sv", (swig_wrapper_func) _wrap_glSecondaryColor3sv, NULL},
    { SWIG_prefix "glSecondaryColor3ub", (swig_wrapper_func) _wrap_glSecondaryColor3ub, NULL},
    { SWIG_prefix "glSecondaryColor3ubv", (swig_wrapper_func) _wrap_glSecondaryColor3ubv, NULL},
    { SWIG_prefix "glSecondaryColor3ui", (swig_wrapper_func) _wrap_glSecondaryColor3ui, NULL},
    { SWIG_prefix "glSecondaryColor3uiv", (swig_wrapper_func) _wrap_glSecondaryColor3uiv, NULL},
    { SWIG_prefix "glSecondaryColor3us", (swig_wrapper_func) _wrap_glSecondaryColor3us, NULL},
    { SWIG_prefix "glSecondaryColor3usv", (swig_wrapper_func) _wrap_glSecondaryColor3usv, NULL},
    { SWIG_prefix "glSecondaryColorPointer", (swig_wrapper_func) _wrap_glSecondaryColorPointer, NULL},
    { SWIG_prefix "glPointParameterf", (swig_wrapper_func) _wrap_glPointParameterf, NULL},
    { SWIG_prefix "glPointParameterfv", (swig_wrapper_func) _wrap_glPointParameterfv, NULL},
    { SWIG_prefix "glPointParameteri", (swig_wrapper_func) _wrap_glPointParameteri, NULL},
    { SWIG_prefix "glPointParameteriv", (swig_wrapper_func) _wrap_glPointParameteriv, NULL},
    { SWIG_prefix "glBlendFuncSeparate", (swig_wrapper_func) _wrap_glBlendFuncSeparate, NULL},
    { SWIG_prefix "glMultiDrawArrays", (swig_wrapper_func) _wrap_glMultiDrawArrays, NULL},
    { SWIG_prefix "glMultiDrawElements", (swig_wrapper_func) _wrap_glMultiDrawElements, NULL},
    { SWIG_prefix "glWindowPos2d", (swig_wrapper_func) _wrap_glWindowPos2d, NULL},
    { SWIG_prefix "glWindowPos2dv", (swig_wrapper_func) _wrap_glWindowPos2dv, NULL},
    { SWIG_prefix "glWindowPos2f", (swig_wrapper_func) _wrap_glWindowPos2f, NULL},
    { SWIG_prefix "glWindowPos2fv", (swig_wrapper_func) _wrap_glWindowPos2fv, NULL},
    { SWIG_prefix "glWindowPos2i", (swig_wrapper_func) _wrap_glWindowPos2i, NULL},
    { SWIG_prefix "glWindowPos2iv", (swig_wrapper_func) _wrap_glWindowPos2iv, NULL},
    { SWIG_prefix "glWindowPos2s", (swig_wrapper_func) _wrap_glWindowPos2s, NULL},
    { SWIG_prefix "glWindowPos2sv", (swig_wrapper_func) _wrap_glWindowPos2sv, NULL},
    { SWIG_prefix "glWindowPos3d", (swig_wrapper_func) _wrap_glWindowPos3d, NULL},
    { SWIG_prefix "glWindowPos3dv", (swig_wrapper_func) _wrap_glWindowPos3dv, NULL},
    { SWIG_prefix "glWindowPos3f", (swig_wrapper_func) _wrap_glWindowPos3f, NULL},
    { SWIG_prefix "glWindowPos3fv", (swig_wrapper_func) _wrap_glWindowPos3fv, NULL},
    { SWIG_prefix "glWindowPos3i", (swig_wrapper_func) _wrap_glWindowPos3i, NULL},
    { SWIG_prefix "glWindowPos3iv", (swig_wrapper_func) _wrap_glWindowPos3iv, NULL},
    { SWIG_prefix "glWindowPos3s", (swig_wrapper_func) _wrap_glWindowPos3s, NULL},
    { SWIG_prefix "glWindowPos3sv", (swig_wrapper_func) _wrap_glWindowPos3sv, NULL},
    { SWIG_prefix "glGenQueries", (swig_wrapper_func) _wrap_glGenQueries, NULL},
    { SWIG_prefix "glDeleteQueries", (swig_wrapper_func) _wrap_glDeleteQueries, NULL},
    { SWIG_prefix "glIsQuery", (swig_wrapper_func) _wrap_glIsQuery, NULL},
    { SWIG_prefix "glBeginQuery", (swig_wrapper_func) _wrap_glBeginQuery, NULL},
    { SWIG_prefix "glEndQuery", (swig_wrapper_func) _wrap_glEndQuery, NULL},
    { SWIG_prefix "glGetQueryiv", (swig_wrapper_func) _wrap_glGetQueryiv, NULL},
    { SWIG_prefix "glGetQueryObjectiv", (swig_wrapper_func) _wrap_glGetQueryObjectiv, NULL},
    { SWIG_prefix "glGetQueryObjectuiv", (swig_wrapper_func) _wrap_glGetQueryObjectuiv, NULL},
    { SWIG_prefix "glBindBuffer", (swig_wrapper_func) _wrap_glBindBuffer, NULL},
    { SWIG_prefix "glDeleteBuffers", (swig_wrapper_func) _wrap_glDeleteBuffers, NULL},
    { SWIG_prefix "glGenBuffers", (swig_wrapper_func) _wrap_glGenBuffers, NULL},
    { SWIG_prefix "glIsBuffer", (swig_wrapper_func) _wrap_glIsBuffer, NULL},
    { SWIG_prefix "glBufferData", (swig_wrapper_func) _wrap_glBufferData, NULL},
    { SWIG_prefix "glBufferSubData", (swig_wrapper_func) _wrap_glBufferSubData, NULL},
    { SWIG_prefix "glGetBufferSubData", (swig_wrapper_func) _wrap_glGetBufferSubData, NULL},
    { SWIG_prefix "glMapBuffer", (swig_wrapper_func) _wrap_glMapBuffer, NULL},
    { SWIG_prefix "glUnmapBuffer", (swig_wrapper_func) _wrap_glUnmapBuffer, NULL},
    { SWIG_prefix "glGetBufferParameteriv", (swig_wrapper_func) _wrap_glGetBufferParameteriv, NULL},
    { SWIG_prefix "glGetBufferPointerv", (swig_wrapper_func) _wrap_glGetBufferPointerv, NULL},
    { SWIG_prefix "glDrawBuffers", (swig_wrapper_func) _wrap_glDrawBuffers, NULL},
    { SWIG_prefix "glVertexAttrib1d", (swig_wrapper_func) _wrap_glVertexAttrib1d, NULL},
    { SWIG_prefix "glVertexAttrib1dv", (swig_wrapper_func) _wrap_glVertexAttrib1dv, NULL},
    { SWIG_prefix "glVertexAttrib1f", (swig_wrapper_func) _wrap_glVertexAttrib1f, NULL},
    { SWIG_prefix "glVertexAttrib1fv", (swig_wrapper_func) _wrap_glVertexAttrib1fv, NULL},
    { SWIG_prefix "glVertexAttrib1s", (swig_wrapper_func) _wrap_glVertexAttrib1s, NULL},
    { SWIG_prefix "glVertexAttrib1sv", (swig_wrapper_func) _wrap_glVertexAttrib1sv, NULL},
    { SWIG_prefix "glVertexAttrib2d", (swig_wrapper_func) _wrap_glVertexAttrib2d, NULL},
    { SWIG_prefix "glVertexAttrib2dv", (swig_wrapper_func) _wrap_glVertexAttrib2dv, NULL},
    { SWIG_prefix "glVertexAttrib2f", (swig_wrapper_func) _wrap_glVertexAttrib2f, NULL},
    { SWIG_prefix "glVertexAttrib2fv", (swig_wrapper_func) _wrap_glVertexAttrib2fv, NULL},
    { SWIG_prefix "glVertexAttrib2s", (swig_wrapper_func) _wrap_glVertexAttrib2s, NULL},
    { SWIG_prefix "glVertexAttrib2sv", (swig_wrapper_func) _wrap_glVertexAttrib2sv, NULL},
    { SWIG_prefix "glVertexAttrib3d", (swig_wrapper_func) _wrap_glVertexAttrib3d, NULL},
    { SWIG_prefix "glVertexAttrib3dv", (swig_wrapper_func) _wrap_glVertexAttrib3dv, NULL},
    { SWIG_prefix "glVertexAttrib3f", (swig_wrapper_func) _wrap_glVertexAttrib3f, NULL},
    { SWIG_prefix "glVertexAttrib3fv", (swig_wrapper_func) _wrap_glVertexAttrib3fv, NULL},
    { SWIG_prefix "glVertexAttrib3s", (swig_wrapper_func) _wrap_glVertexAttrib3s, NULL},
    { SWIG_prefix "glVertexAttrib3sv", (swig_wrapper_func) _wrap_glVertexAttrib3sv, NULL},
    { SWIG_prefix "glVertexAttrib4Nbv", (swig_wrapper_func) _wrap_glVertexAttrib4Nbv, NULL},
    { SWIG_prefix "glVertexAttrib4Niv", (swig_wrapper_func) _wrap_glVertexAttrib4Niv, NULL},
    { SWIG_prefix "glVertexAttrib4Nsv", (swig_wrapper_func) _wrap_glVertexAttrib4Nsv, NULL},
    { SWIG_prefix "glVertexAttrib4Nub", (swig_wrapper_func) _wrap_glVertexAttrib4Nub, NULL},
    { SWIG_prefix "glVertexAttrib4Nubv", (swig_wrapper_func) _wrap_glVertexAttrib4Nubv, NULL},
    { SWIG_prefix "glVertexAttrib4Nuiv", (swig_wrapper_func) _wrap_glVertexAttrib4Nuiv, NULL},
    { SWIG_prefix "glVertexAttrib4Nusv", (swig_wrapper_func) _wrap_glVertexAttrib4Nusv, NULL},
    { SWIG_prefix "glVertexAttrib4bv", (swig_wrapper_func) _wrap_glVertexAttrib4bv, NULL},
    { SWIG_prefix "glVertexAttrib4d", (swig_wrapper_func) _wrap_glVertexAttrib4d, NULL},
    { SWIG_prefix "glVertexAttrib4dv", (swig_wrapper_func) _wrap_glVertexAttrib4dv, NULL},
    { SWIG_prefix "glVertexAttrib4f", (swig_wrapper_func) _wrap_glVertexAttrib4f, NULL},
    { SWIG_prefix "glVertexAttrib4fv", (swig_wrapper_func) _wrap_glVertexAttrib4fv, NULL},
    { SWIG_prefix "glVertexAttrib4iv", (swig_wrapper_func) _wrap_glVertexAttrib4iv, NULL},
    { SWIG_prefix "glVertexAttrib4s", (swig_wrapper_func) _wrap_glVertexAttrib4s, NULL},
    { SWIG_prefix "glVertexAttrib4sv", (swig_wrapper_func) _wrap_glVertexAttrib4sv, NULL},
    { SWIG_prefix "glVertexAttrib4ubv", (swig_wrapper_func) _wrap_glVertexAttrib4ubv, NULL},
    { SWIG_prefix "glVertexAttrib4uiv", (swig_wrapper_func) _wrap_glVertexAttrib4uiv, NULL},
    { SWIG_prefix "glVertexAttrib4usv", (swig_wrapper_func) _wrap_glVertexAttrib4usv, NULL},
    { SWIG_prefix "glVertexAttribPointer", (swig_wrapper_func) _wrap_glVertexAttribPointer, NULL},
    { SWIG_prefix "glEnableVertexAttribArray", (swig_wrapper_func) _wrap_glEnableVertexAttribArray, NULL},
    { SWIG_prefix "glDisableVertexAttribArray", (swig_wrapper_func) _wrap_glDisableVertexAttribArray, NULL},
    { SWIG_prefix "glGetVertexAttribdv", (swig_wrapper_func) _wrap_glGetVertexAttribdv, NULL},
    { SWIG_prefix "glGetVertexAttribfv", (swig_wrapper_func) _wrap_glGetVertexAttribfv, NULL},
    { SWIG_prefix "glGetVertexAttribiv", (swig_wrapper_func) _wrap_glGetVertexAttribiv, NULL},
    { SWIG_prefix "glGetVertexAttribPointerv", (swig_wrapper_func) _wrap_glGetVertexAttribPointerv, NULL},
    { SWIG_prefix "glDeleteShader", (swig_wrapper_func) _wrap_glDeleteShader, NULL},
    { SWIG_prefix "glDetachShader", (swig_wrapper_func) _wrap_glDetachShader, NULL},
    { SWIG_prefix "glCreateShader", (swig_wrapper_func) _wrap_glCreateShader, NULL},
    { SWIG_prefix "glShaderSource", (swig_wrapper_func) _wrap_glShaderSource, NULL},
    { SWIG_prefix "glCompileShader", (swig_wrapper_func) _wrap_glCompileShader, NULL},
    { SWIG_prefix "glCreateProgram", (swig_wrapper_func) _wrap_glCreateProgram, NULL},
    { SWIG_prefix "glAttachShader", (swig_wrapper_func) _wrap_glAttachShader, NULL},
    { SWIG_prefix "glLinkProgram", (swig_wrapper_func) _wrap_glLinkProgram, NULL},
    { SWIG_prefix "glUseProgram", (swig_wrapper_func) _wrap_glUseProgram, NULL},
    { SWIG_prefix "glDeleteProgram", (swig_wrapper_func) _wrap_glDeleteProgram, NULL},
    { SWIG_prefix "glValidateProgram", (swig_wrapper_func) _wrap_glValidateProgram, NULL},
    { SWIG_prefix "glUniform1f", (swig_wrapper_func) _wrap_glUniform1f, NULL},
    { SWIG_prefix "glUniform2f", (swig_wrapper_func) _wrap_glUniform2f, NULL},
    { SWIG_prefix "glUniform3f", (swig_wrapper_func) _wrap_glUniform3f, NULL},
    { SWIG_prefix "glUniform4f", (swig_wrapper_func) _wrap_glUniform4f, NULL},
    { SWIG_prefix "glUniform1i", (swig_wrapper_func) _wrap_glUniform1i, NULL},
    { SWIG_prefix "glUniform2i", (swig_wrapper_func) _wrap_glUniform2i, NULL},
    { SWIG_prefix "glUniform3i", (swig_wrapper_func) _wrap_glUniform3i, NULL},
    { SWIG_prefix "glUniform4i", (swig_wrapper_func) _wrap_glUniform4i, NULL},
    { SWIG_prefix "glUniform1fv", (swig_wrapper_func) _wrap_glUniform1fv, NULL},
    { SWIG_prefix "glUniform2fv", (swig_wrapper_func) _wrap_glUniform2fv, NULL},
    { SWIG_prefix "glUniform3fv", (swig_wrapper_func) _wrap_glUniform3fv, NULL},
    { SWIG_prefix "glUniform4fv", (swig_wrapper_func) _wrap_glUniform4fv, NULL},
    { SWIG_prefix "glUniform1iv", (swig_wrapper_func) _wrap_glUniform1iv, NULL},
    { SWIG_prefix "glUniform2iv", (swig_wrapper_func) _wrap_glUniform2iv, NULL},
    { SWIG_prefix "glUniform3iv", (swig_wrapper_func) _wrap_glUniform3iv, NULL},
    { SWIG_prefix "glUniform4iv", (swig_wrapper_func) _wrap_glUniform4iv, NULL},
    { SWIG_prefix "glUniformMatrix2fv", (swig_wrapper_func) _wrap_glUniformMatrix2fv, NULL},
    { SWIG_prefix "glUniformMatrix3fv", (swig_wrapper_func) _wrap_glUniformMatrix3fv, NULL},
    { SWIG_prefix "glUniformMatrix4fv", (swig_wrapper_func) _wrap_glUniformMatrix4fv, NULL},
    { SWIG_prefix "glIsShader", (swig_wrapper_func) _wrap_glIsShader, NULL},
    { SWIG_prefix "glIsProgram", (swig_wrapper_func) _wrap_glIsProgram, NULL},
    { SWIG_prefix "glGetShaderiv", (swig_wrapper_func) _wrap_glGetShaderiv, NULL},
    { SWIG_prefix "glGetProgramiv", (swig_wrapper_func) _wrap_glGetProgramiv, NULL},
    { SWIG_prefix "glGetAttachedShaders", (swig_wrapper_func) _wrap_glGetAttachedShaders, NULL},
    { SWIG_prefix "glGetShaderInfoLog", (swig_wrapper_func) _wrap_glGetShaderInfoLog, NULL},
    { SWIG_prefix "glGetProgramInfoLog", (swig_wrapper_func) _wrap_glGetProgramInfoLog, NULL},
    { SWIG_prefix "glGetUniformLocation", (swig_wrapper_func) _wrap_glGetUniformLocation, NULL},
    { SWIG_prefix "glGetActiveUniform", (swig_wrapper_func) _wrap_glGetActiveUniform, NULL},
    { SWIG_prefix "glGetUniformfv", (swig_wrapper_func) _wrap_glGetUniformfv, NULL},
    { SWIG_prefix "glGetUniformiv", (swig_wrapper_func) _wrap_glGetUniformiv, NULL},
    { SWIG_prefix "glGetShaderSource", (swig_wrapper_func) _wrap_glGetShaderSource, NULL},
    { SWIG_prefix "glBindAttribLocation", (swig_wrapper_func) _wrap_glBindAttribLocation, NULL},
    { SWIG_prefix "glGetActiveAttrib", (swig_wrapper_func) _wrap_glGetActiveAttrib, NULL},
    { SWIG_prefix "glGetAttribLocation", (swig_wrapper_func) _wrap_glGetAttribLocation, NULL},
    { SWIG_prefix "glStencilFuncSeparate", (swig_wrapper_func) _wrap_glStencilFuncSeparate, NULL},
    { SWIG_prefix "glStencilOpSeparate", (swig_wrapper_func) _wrap_glStencilOpSeparate, NULL},
    { SWIG_prefix "glStencilMaskSeparate", (swig_wrapper_func) _wrap_glStencilMaskSeparate, NULL},
    { SWIG_prefix "glUniformMatrix2x3fv", (swig_wrapper_func) _wrap_glUniformMatrix2x3fv, NULL},
    { SWIG_prefix "glUniformMatrix3x2fv", (swig_wrapper_func) _wrap_glUniformMatrix3x2fv, NULL},
    { SWIG_prefix "glUniformMatrix2x4fv", (swig_wrapper_func) _wrap_glUniformMatrix2x4fv, NULL},
    { SWIG_prefix "glUniformMatrix4x2fv", (swig_wrapper_func) _wrap_glUniformMatrix4x2fv, NULL},
    { SWIG_prefix "glUniformMatrix3x4fv", (swig_wrapper_func) _wrap_glUniformMatrix3x4fv, NULL},
    { SWIG_prefix "glUniformMatrix4x3fv", (swig_wrapper_func) _wrap_glUniformMatrix4x3fv, NULL},
    {0, 0, 0}
};

static swig_var_info swig_variables[] = {
    {0,0,0,0}
};

static swig_const_info swig_constants[] = {
    {0,0,0,0,0,0}
};

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_char = {"_p_char", "char *|GLchar *|GLcharARB *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *|GLclampd *|GLdouble *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "GLclampf *|float *|GLfloat *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int16_t = {"_p_int16_t", "GLshort *|int16_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int32_t = {"_p_int32_t", "GLsizei *|int32_t *|GLfixed *|GLint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int64_t = {"_p_int64_t", "int64_t *|GLint64EXT *|GLint64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int8_t = {"_p_int8_t", "GLbyte *|int8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_intptr_t = {"_p_intptr_t", "intptr_t *|GLsizeiptr *|GLsizeiptrARB *|GLintptrARB *|GLintptr *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_char = {"_p_p_char", "char **|GLchar **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_p_void = {"_p_p_void", "void **|GLvoid **", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint16_t = {"_p_uint16_t", "GLushort *|GLhalf *|uint16_t *|GLhalfARB *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint32_t = {"_p_uint32_t", "uint32_t *|GLuint *|GLenum *|GLbitfield *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint64_t = {"_p_uint64_t", "uint64_t *|GLuint64EXT *|GLuint64 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_uint8_t = {"_p_uint8_t", "GLubyte *|GLboolean *|uint8_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *|GLvoid *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_char,
  &_swigt__p_double,
  &_swigt__p_float,
  &_swigt__p_int16_t,
  &_swigt__p_int32_t,
  &_swigt__p_int64_t,
  &_swigt__p_int8_t,
  &_swigt__p_intptr_t,
  &_swigt__p_p_char,
  &_swigt__p_p_void,
  &_swigt__p_uint16_t,
  &_swigt__p_uint32_t,
  &_swigt__p_uint64_t,
  &_swigt__p_uint8_t,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int16_t[] = {  {&_swigt__p_int16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int32_t[] = {  {&_swigt__p_int32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int64_t[] = {  {&_swigt__p_int64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int8_t[] = {  {&_swigt__p_int8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_intptr_t[] = {  {&_swigt__p_intptr_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_char[] = {  {&_swigt__p_p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_p_void[] = {  {&_swigt__p_p_void, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint16_t[] = {  {&_swigt__p_uint16_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint32_t[] = {  {&_swigt__p_uint32_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint64_t[] = {  {&_swigt__p_uint64_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_uint8_t[] = {  {&_swigt__p_uint8_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_char,
  _swigc__p_double,
  _swigc__p_float,
  _swigc__p_int16_t,
  _swigc__p_int32_t,
  _swigc__p_int64_t,
  _swigc__p_int8_t,
  _swigc__p_intptr_t,
  _swigc__p_p_char,
  _swigc__p_p_void,
  _swigc__p_uint16_t,
  _swigc__p_uint32_t,
  _swigc__p_uint64_t,
  _swigc__p_uint8_t,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif


#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  
  SWIGINTERN void
  SWIG_Tcl_InstallConstants(Tcl_Interp *interp, swig_const_info constants[]) {
    size_t i;
    Tcl_Obj *obj;
    
    if (!swigconstTableinit) {
      Tcl_InitHashTable(&swigconstTable, TCL_STRING_KEYS);
      swigconstTableinit = 1;
    }
    for (i = 0; constants[i].type; i++) {
      switch(constants[i].type) {
      case SWIG_TCL_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_TCL_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        SWIG_Tcl_SetConstantObj(interp, constants[i].name, obj);
      }
    }
  }
  
  /* Create fast method lookup tables */
  
  SWIGINTERN void
  SWIG_Tcl_InstallMethodLookupTables(void) {
    size_t i;
    
    for (i = 0; i < swig_module.size; ++i) {
      swig_type_info *type = swig_module.type_initial[i];
      if (type->clientdata) {
        swig_class* klass = (swig_class*) type->clientdata;
        swig_method* meth;
        Tcl_InitHashTable(&(klass->hashtable), TCL_STRING_KEYS);
        for (meth = klass->methods; meth && meth->name; ++meth) {
          int newEntry;
          Tcl_HashEntry* hashentry = Tcl_CreateHashEntry(&(klass->hashtable), meth->name, &newEntry);
          Tcl_SetHashValue(hashentry, (ClientData)meth->method);
        }
      }
    }
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

SWIGEXPORT int SWIG_init(Tcl_Interp *interp) {
  size_t i;
  if (interp == 0) return TCL_ERROR;
#ifdef USE_TCL_STUBS
  /* (char*) cast is required to avoid compiler warning/error for Tcl < 8.4. */
  if (Tcl_InitStubs(interp, (char*)SWIG_TCL_STUBS_VERSION, 0) == NULL) {
    return TCL_ERROR;
  }
#endif  
#ifdef USE_TK_STUBS
  /* (char*) cast is required to avoid compiler warning/error. */
  if (Tk_InitStubs(interp, (char*)SWIG_TCL_STUBS_VERSION, 0) == NULL) {
    return TCL_ERROR;
  }
#endif
  
  Tcl_PkgProvide(interp, (char*)SWIG_name, (char*)SWIG_version);
  
#ifdef SWIG_namespace
  Tcl_Eval(interp, "namespace eval " SWIG_namespace " { }");
#endif
  
  SWIG_InitializeModule((void *) interp);
  SWIG_PropagateClientData();
  
  for (i = 0; swig_commands[i].name; i++) {
    Tcl_CreateObjCommand(interp, (char *) swig_commands[i].name, (swig_wrapper_func) swig_commands[i].wrapper,
      swig_commands[i].clientdata, NULL);
  }
  for (i = 0; swig_variables[i].name; i++) {
    Tcl_SetVar(interp, (char *) swig_variables[i].name, (char *) "", TCL_GLOBAL_ONLY);
    Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_READS | TCL_GLOBAL_ONLY, 
      (Tcl_VarTraceProc *) swig_variables[i].get, (ClientData) swig_variables[i].addr);
    Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_WRITES | TCL_GLOBAL_ONLY, 
      (Tcl_VarTraceProc *) swig_variables[i].set, (ClientData) swig_variables[i].addr);
  }
  
  SWIG_Tcl_InstallConstants(interp, swig_constants);
  SWIG_Tcl_InstallMethodLookupTables();
  
  
  SWIG_Tcl_SetConstantObj(interp, "GL_VERSION_1_1", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERSION_1_2", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERSION_1_3", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERSION_1_4", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERSION_1_5", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERSION_2_0", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERSION_2_1", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACCUM", SWIG_From_int(static_cast< int >(0x0100)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LOAD", SWIG_From_int(static_cast< int >(0x0101)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RETURN", SWIG_From_int(static_cast< int >(0x0102)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MULT", SWIG_From_int(static_cast< int >(0x0103)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ADD", SWIG_From_int(static_cast< int >(0x0104)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NEVER", SWIG_From_int(static_cast< int >(0x0200)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LESS", SWIG_From_int(static_cast< int >(0x0201)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EQUAL", SWIG_From_int(static_cast< int >(0x0202)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LEQUAL", SWIG_From_int(static_cast< int >(0x0203)));
  SWIG_Tcl_SetConstantObj(interp, "GL_GREATER", SWIG_From_int(static_cast< int >(0x0204)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NOTEQUAL", SWIG_From_int(static_cast< int >(0x0205)));
  SWIG_Tcl_SetConstantObj(interp, "GL_GEQUAL", SWIG_From_int(static_cast< int >(0x0206)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALWAYS", SWIG_From_int(static_cast< int >(0x0207)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_BIT", SWIG_From_int(static_cast< int >(0x00000001)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_BIT", SWIG_From_int(static_cast< int >(0x00000002)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_BIT", SWIG_From_int(static_cast< int >(0x00000004)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_BIT", SWIG_From_int(static_cast< int >(0x00000008)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_STIPPLE_BIT", SWIG_From_int(static_cast< int >(0x00000010)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MODE_BIT", SWIG_From_int(static_cast< int >(0x00000020)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHTING_BIT", SWIG_From_int(static_cast< int >(0x00000040)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_BIT", SWIG_From_int(static_cast< int >(0x00000080)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x00000100)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACCUM_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x00000200)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x00000400)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VIEWPORT_BIT", SWIG_From_int(static_cast< int >(0x00000800)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRANSFORM_BIT", SWIG_From_int(static_cast< int >(0x00001000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ENABLE_BIT", SWIG_From_int(static_cast< int >(0x00002000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_BUFFER_BIT", SWIG_From_int(static_cast< int >(0x00004000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HINT_BIT", SWIG_From_int(static_cast< int >(0x00008000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EVAL_BIT", SWIG_From_int(static_cast< int >(0x00010000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIST_BIT", SWIG_From_int(static_cast< int >(0x00020000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BIT", SWIG_From_int(static_cast< int >(0x00040000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SCISSOR_BIT", SWIG_From_int(static_cast< int >(0x00080000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALL_ATTRIB_BITS", SWIG_From_int(static_cast< int >(0x000fffff)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINTS", SWIG_From_int(static_cast< int >(0x0000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINES", SWIG_From_int(static_cast< int >(0x0001)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_LOOP", SWIG_From_int(static_cast< int >(0x0002)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_STRIP", SWIG_From_int(static_cast< int >(0x0003)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRIANGLES", SWIG_From_int(static_cast< int >(0x0004)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRIANGLE_STRIP", SWIG_From_int(static_cast< int >(0x0005)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRIANGLE_FAN", SWIG_From_int(static_cast< int >(0x0006)));
  SWIG_Tcl_SetConstantObj(interp, "GL_QUADS", SWIG_From_int(static_cast< int >(0x0007)));
  SWIG_Tcl_SetConstantObj(interp, "GL_QUAD_STRIP", SWIG_From_int(static_cast< int >(0x0008)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON", SWIG_From_int(static_cast< int >(0x0009)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ZERO", SWIG_From_int(static_cast< int >(0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ONE", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC_COLOR", SWIG_From_int(static_cast< int >(0x0300)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ONE_MINUS_SRC_COLOR", SWIG_From_int(static_cast< int >(0x0301)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC_ALPHA", SWIG_From_int(static_cast< int >(0x0302)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ONE_MINUS_SRC_ALPHA", SWIG_From_int(static_cast< int >(0x0303)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DST_ALPHA", SWIG_From_int(static_cast< int >(0x0304)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ONE_MINUS_DST_ALPHA", SWIG_From_int(static_cast< int >(0x0305)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DST_COLOR", SWIG_From_int(static_cast< int >(0x0306)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ONE_MINUS_DST_COLOR", SWIG_From_int(static_cast< int >(0x0307)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC_ALPHA_SATURATE", SWIG_From_int(static_cast< int >(0x0308)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRUE", SWIG_From_int(static_cast< int >(1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FALSE", SWIG_From_int(static_cast< int >(0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIP_PLANE0", SWIG_From_int(static_cast< int >(0x3000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIP_PLANE1", SWIG_From_int(static_cast< int >(0x3001)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIP_PLANE2", SWIG_From_int(static_cast< int >(0x3002)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIP_PLANE3", SWIG_From_int(static_cast< int >(0x3003)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIP_PLANE4", SWIG_From_int(static_cast< int >(0x3004)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIP_PLANE5", SWIG_From_int(static_cast< int >(0x3005)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BYTE", SWIG_From_int(static_cast< int >(0x1400)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_BYTE", SWIG_From_int(static_cast< int >(0x1401)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SHORT", SWIG_From_int(static_cast< int >(0x1402)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_SHORT", SWIG_From_int(static_cast< int >(0x1403)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INT", SWIG_From_int(static_cast< int >(0x1404)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_INT", SWIG_From_int(static_cast< int >(0x1405)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT", SWIG_From_int(static_cast< int >(0x1406)));
  SWIG_Tcl_SetConstantObj(interp, "GL_2_BYTES", SWIG_From_int(static_cast< int >(0x1407)));
  SWIG_Tcl_SetConstantObj(interp, "GL_3_BYTES", SWIG_From_int(static_cast< int >(0x1408)));
  SWIG_Tcl_SetConstantObj(interp, "GL_4_BYTES", SWIG_From_int(static_cast< int >(0x1409)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DOUBLE", SWIG_From_int(static_cast< int >(0x140A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NONE", SWIG_From_int(static_cast< int >(0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FRONT_LEFT", SWIG_From_int(static_cast< int >(0x0400)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FRONT_RIGHT", SWIG_From_int(static_cast< int >(0x0401)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BACK_LEFT", SWIG_From_int(static_cast< int >(0x0402)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BACK_RIGHT", SWIG_From_int(static_cast< int >(0x0403)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FRONT", SWIG_From_int(static_cast< int >(0x0404)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BACK", SWIG_From_int(static_cast< int >(0x0405)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LEFT", SWIG_From_int(static_cast< int >(0x0406)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RIGHT", SWIG_From_int(static_cast< int >(0x0407)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FRONT_AND_BACK", SWIG_From_int(static_cast< int >(0x0408)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AUX0", SWIG_From_int(static_cast< int >(0x0409)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AUX1", SWIG_From_int(static_cast< int >(0x040A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AUX2", SWIG_From_int(static_cast< int >(0x040B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AUX3", SWIG_From_int(static_cast< int >(0x040C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NO_ERROR", SWIG_From_int(static_cast< int >(0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INVALID_ENUM", SWIG_From_int(static_cast< int >(0x0500)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INVALID_VALUE", SWIG_From_int(static_cast< int >(0x0501)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INVALID_OPERATION", SWIG_From_int(static_cast< int >(0x0502)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STACK_OVERFLOW", SWIG_From_int(static_cast< int >(0x0503)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STACK_UNDERFLOW", SWIG_From_int(static_cast< int >(0x0504)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OUT_OF_MEMORY", SWIG_From_int(static_cast< int >(0x0505)));
  SWIG_Tcl_SetConstantObj(interp, "GL_2D", SWIG_From_int(static_cast< int >(0x0600)));
  SWIG_Tcl_SetConstantObj(interp, "GL_3D", SWIG_From_int(static_cast< int >(0x0601)));
  SWIG_Tcl_SetConstantObj(interp, "GL_3D_COLOR", SWIG_From_int(static_cast< int >(0x0602)));
  SWIG_Tcl_SetConstantObj(interp, "GL_3D_COLOR_TEXTURE", SWIG_From_int(static_cast< int >(0x0603)));
  SWIG_Tcl_SetConstantObj(interp, "GL_4D_COLOR_TEXTURE", SWIG_From_int(static_cast< int >(0x0604)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PASS_THROUGH_TOKEN", SWIG_From_int(static_cast< int >(0x0700)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_TOKEN", SWIG_From_int(static_cast< int >(0x0701)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_TOKEN", SWIG_From_int(static_cast< int >(0x0702)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_TOKEN", SWIG_From_int(static_cast< int >(0x0703)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BITMAP_TOKEN", SWIG_From_int(static_cast< int >(0x0704)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_PIXEL_TOKEN", SWIG_From_int(static_cast< int >(0x0705)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COPY_PIXEL_TOKEN", SWIG_From_int(static_cast< int >(0x0706)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_RESET_TOKEN", SWIG_From_int(static_cast< int >(0x0707)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EXP", SWIG_From_int(static_cast< int >(0x0800)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EXP2", SWIG_From_int(static_cast< int >(0x0801)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CW", SWIG_From_int(static_cast< int >(0x0900)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CCW", SWIG_From_int(static_cast< int >(0x0901)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COEFF", SWIG_From_int(static_cast< int >(0x0A00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ORDER", SWIG_From_int(static_cast< int >(0x0A01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DOMAIN", SWIG_From_int(static_cast< int >(0x0A02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_COLOR", SWIG_From_int(static_cast< int >(0x0B00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_INDEX", SWIG_From_int(static_cast< int >(0x0B01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_NORMAL", SWIG_From_int(static_cast< int >(0x0B02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_TEXTURE_COORDS", SWIG_From_int(static_cast< int >(0x0B03)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_RASTER_COLOR", SWIG_From_int(static_cast< int >(0x0B04)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_RASTER_INDEX", SWIG_From_int(static_cast< int >(0x0B05)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_RASTER_TEXTURE_COORDS", SWIG_From_int(static_cast< int >(0x0B06)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_RASTER_POSITION", SWIG_From_int(static_cast< int >(0x0B07)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_RASTER_POSITION_VALID", SWIG_From_int(static_cast< int >(0x0B08)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_RASTER_DISTANCE", SWIG_From_int(static_cast< int >(0x0B09)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SMOOTH", SWIG_From_int(static_cast< int >(0x0B10)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SIZE", SWIG_From_int(static_cast< int >(0x0B11)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SIZE_RANGE", SWIG_From_int(static_cast< int >(0x0B12)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SIZE_GRANULARITY", SWIG_From_int(static_cast< int >(0x0B13)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_SMOOTH", SWIG_From_int(static_cast< int >(0x0B20)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_WIDTH", SWIG_From_int(static_cast< int >(0x0B21)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_WIDTH_RANGE", SWIG_From_int(static_cast< int >(0x0B22)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_WIDTH_GRANULARITY", SWIG_From_int(static_cast< int >(0x0B23)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_STIPPLE", SWIG_From_int(static_cast< int >(0x0B24)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_STIPPLE_PATTERN", SWIG_From_int(static_cast< int >(0x0B25)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_STIPPLE_REPEAT", SWIG_From_int(static_cast< int >(0x0B26)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIST_MODE", SWIG_From_int(static_cast< int >(0x0B30)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_LIST_NESTING", SWIG_From_int(static_cast< int >(0x0B31)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIST_BASE", SWIG_From_int(static_cast< int >(0x0B32)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIST_INDEX", SWIG_From_int(static_cast< int >(0x0B33)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_MODE", SWIG_From_int(static_cast< int >(0x0B40)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_SMOOTH", SWIG_From_int(static_cast< int >(0x0B41)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_STIPPLE", SWIG_From_int(static_cast< int >(0x0B42)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EDGE_FLAG", SWIG_From_int(static_cast< int >(0x0B43)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CULL_FACE", SWIG_From_int(static_cast< int >(0x0B44)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CULL_FACE_MODE", SWIG_From_int(static_cast< int >(0x0B45)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FRONT_FACE", SWIG_From_int(static_cast< int >(0x0B46)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHTING", SWIG_From_int(static_cast< int >(0x0B50)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT_MODEL_LOCAL_VIEWER", SWIG_From_int(static_cast< int >(0x0B51)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT_MODEL_TWO_SIDE", SWIG_From_int(static_cast< int >(0x0B52)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT_MODEL_AMBIENT", SWIG_From_int(static_cast< int >(0x0B53)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SHADE_MODEL", SWIG_From_int(static_cast< int >(0x0B54)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_MATERIAL_FACE", SWIG_From_int(static_cast< int >(0x0B55)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_MATERIAL_PARAMETER", SWIG_From_int(static_cast< int >(0x0B56)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_MATERIAL", SWIG_From_int(static_cast< int >(0x0B57)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG", SWIG_From_int(static_cast< int >(0x0B60)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_INDEX", SWIG_From_int(static_cast< int >(0x0B61)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_DENSITY", SWIG_From_int(static_cast< int >(0x0B62)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_START", SWIG_From_int(static_cast< int >(0x0B63)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_END", SWIG_From_int(static_cast< int >(0x0B64)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_MODE", SWIG_From_int(static_cast< int >(0x0B65)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COLOR", SWIG_From_int(static_cast< int >(0x0B66)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_RANGE", SWIG_From_int(static_cast< int >(0x0B70)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_TEST", SWIG_From_int(static_cast< int >(0x0B71)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_WRITEMASK", SWIG_From_int(static_cast< int >(0x0B72)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0B73)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_FUNC", SWIG_From_int(static_cast< int >(0x0B74)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACCUM_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0B80)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_TEST", SWIG_From_int(static_cast< int >(0x0B90)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0B91)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_FUNC", SWIG_From_int(static_cast< int >(0x0B92)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_VALUE_MASK", SWIG_From_int(static_cast< int >(0x0B93)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_FAIL", SWIG_From_int(static_cast< int >(0x0B94)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_PASS_DEPTH_FAIL", SWIG_From_int(static_cast< int >(0x0B95)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_PASS_DEPTH_PASS", SWIG_From_int(static_cast< int >(0x0B96)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_REF", SWIG_From_int(static_cast< int >(0x0B97)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_WRITEMASK", SWIG_From_int(static_cast< int >(0x0B98)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MATRIX_MODE", SWIG_From_int(static_cast< int >(0x0BA0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NORMALIZE", SWIG_From_int(static_cast< int >(0x0BA1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VIEWPORT", SWIG_From_int(static_cast< int >(0x0BA2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MODELVIEW_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BA3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROJECTION_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BA4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BA5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MODELVIEW_MATRIX", SWIG_From_int(static_cast< int >(0x0BA6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROJECTION_MATRIX", SWIG_From_int(static_cast< int >(0x0BA7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_MATRIX", SWIG_From_int(static_cast< int >(0x0BA8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ATTRIB_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BB0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIENT_ATTRIB_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0BB1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA_TEST", SWIG_From_int(static_cast< int >(0x0BC0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA_TEST_FUNC", SWIG_From_int(static_cast< int >(0x0BC1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA_TEST_REF", SWIG_From_int(static_cast< int >(0x0BC2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DITHER", SWIG_From_int(static_cast< int >(0x0BD0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_DST", SWIG_From_int(static_cast< int >(0x0BE0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_SRC", SWIG_From_int(static_cast< int >(0x0BE1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND", SWIG_From_int(static_cast< int >(0x0BE2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LOGIC_OP_MODE", SWIG_From_int(static_cast< int >(0x0BF0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_LOGIC_OP", SWIG_From_int(static_cast< int >(0x0BF1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_LOGIC_OP", SWIG_From_int(static_cast< int >(0x0BF2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AUX_BUFFERS", SWIG_From_int(static_cast< int >(0x0C00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER", SWIG_From_int(static_cast< int >(0x0C01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_READ_BUFFER", SWIG_From_int(static_cast< int >(0x0C02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SCISSOR_BOX", SWIG_From_int(static_cast< int >(0x0C10)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SCISSOR_TEST", SWIG_From_int(static_cast< int >(0x0C11)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0C20)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_WRITEMASK", SWIG_From_int(static_cast< int >(0x0C21)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_CLEAR_VALUE", SWIG_From_int(static_cast< int >(0x0C22)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_WRITEMASK", SWIG_From_int(static_cast< int >(0x0C23)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_MODE", SWIG_From_int(static_cast< int >(0x0C30)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGBA_MODE", SWIG_From_int(static_cast< int >(0x0C31)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DOUBLEBUFFER", SWIG_From_int(static_cast< int >(0x0C32)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STEREO", SWIG_From_int(static_cast< int >(0x0C33)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RENDER_MODE", SWIG_From_int(static_cast< int >(0x0C40)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PERSPECTIVE_CORRECTION_HINT", SWIG_From_int(static_cast< int >(0x0C50)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SMOOTH_HINT", SWIG_From_int(static_cast< int >(0x0C51)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE_SMOOTH_HINT", SWIG_From_int(static_cast< int >(0x0C52)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_SMOOTH_HINT", SWIG_From_int(static_cast< int >(0x0C53)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_HINT", SWIG_From_int(static_cast< int >(0x0C54)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_GEN_S", SWIG_From_int(static_cast< int >(0x0C60)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_GEN_T", SWIG_From_int(static_cast< int >(0x0C61)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_GEN_R", SWIG_From_int(static_cast< int >(0x0C62)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_GEN_Q", SWIG_From_int(static_cast< int >(0x0C63)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_I", SWIG_From_int(static_cast< int >(0x0C70)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_S_TO_S", SWIG_From_int(static_cast< int >(0x0C71)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_R", SWIG_From_int(static_cast< int >(0x0C72)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_G", SWIG_From_int(static_cast< int >(0x0C73)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_B", SWIG_From_int(static_cast< int >(0x0C74)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_A", SWIG_From_int(static_cast< int >(0x0C75)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_R_TO_R", SWIG_From_int(static_cast< int >(0x0C76)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_G_TO_G", SWIG_From_int(static_cast< int >(0x0C77)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_B_TO_B", SWIG_From_int(static_cast< int >(0x0C78)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_A_TO_A", SWIG_From_int(static_cast< int >(0x0C79)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_I_SIZE", SWIG_From_int(static_cast< int >(0x0CB0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_S_TO_S_SIZE", SWIG_From_int(static_cast< int >(0x0CB1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_R_SIZE", SWIG_From_int(static_cast< int >(0x0CB2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_G_SIZE", SWIG_From_int(static_cast< int >(0x0CB3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_B_SIZE", SWIG_From_int(static_cast< int >(0x0CB4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_I_TO_A_SIZE", SWIG_From_int(static_cast< int >(0x0CB5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_R_TO_R_SIZE", SWIG_From_int(static_cast< int >(0x0CB6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_G_TO_G_SIZE", SWIG_From_int(static_cast< int >(0x0CB7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_B_TO_B_SIZE", SWIG_From_int(static_cast< int >(0x0CB8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_MAP_A_TO_A_SIZE", SWIG_From_int(static_cast< int >(0x0CB9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNPACK_SWAP_BYTES", SWIG_From_int(static_cast< int >(0x0CF0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNPACK_LSB_FIRST", SWIG_From_int(static_cast< int >(0x0CF1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNPACK_ROW_LENGTH", SWIG_From_int(static_cast< int >(0x0CF2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNPACK_SKIP_ROWS", SWIG_From_int(static_cast< int >(0x0CF3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNPACK_SKIP_PIXELS", SWIG_From_int(static_cast< int >(0x0CF4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNPACK_ALIGNMENT", SWIG_From_int(static_cast< int >(0x0CF5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PACK_SWAP_BYTES", SWIG_From_int(static_cast< int >(0x0D00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PACK_LSB_FIRST", SWIG_From_int(static_cast< int >(0x0D01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PACK_ROW_LENGTH", SWIG_From_int(static_cast< int >(0x0D02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PACK_SKIP_ROWS", SWIG_From_int(static_cast< int >(0x0D03)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PACK_SKIP_PIXELS", SWIG_From_int(static_cast< int >(0x0D04)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PACK_ALIGNMENT", SWIG_From_int(static_cast< int >(0x0D05)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP_COLOR", SWIG_From_int(static_cast< int >(0x0D10)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP_STENCIL", SWIG_From_int(static_cast< int >(0x0D11)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_SHIFT", SWIG_From_int(static_cast< int >(0x0D12)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_OFFSET", SWIG_From_int(static_cast< int >(0x0D13)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RED_SCALE", SWIG_From_int(static_cast< int >(0x0D14)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RED_BIAS", SWIG_From_int(static_cast< int >(0x0D15)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ZOOM_X", SWIG_From_int(static_cast< int >(0x0D16)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ZOOM_Y", SWIG_From_int(static_cast< int >(0x0D17)));
  SWIG_Tcl_SetConstantObj(interp, "GL_GREEN_SCALE", SWIG_From_int(static_cast< int >(0x0D18)));
  SWIG_Tcl_SetConstantObj(interp, "GL_GREEN_BIAS", SWIG_From_int(static_cast< int >(0x0D19)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLUE_SCALE", SWIG_From_int(static_cast< int >(0x0D1A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLUE_BIAS", SWIG_From_int(static_cast< int >(0x0D1B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA_SCALE", SWIG_From_int(static_cast< int >(0x0D1C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA_BIAS", SWIG_From_int(static_cast< int >(0x0D1D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_SCALE", SWIG_From_int(static_cast< int >(0x0D1E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_BIAS", SWIG_From_int(static_cast< int >(0x0D1F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_EVAL_ORDER", SWIG_From_int(static_cast< int >(0x0D30)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_LIGHTS", SWIG_From_int(static_cast< int >(0x0D31)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_CLIP_PLANES", SWIG_From_int(static_cast< int >(0x0D32)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_TEXTURE_SIZE", SWIG_From_int(static_cast< int >(0x0D33)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_PIXEL_MAP_TABLE", SWIG_From_int(static_cast< int >(0x0D34)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_ATTRIB_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D35)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_MODELVIEW_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D36)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_NAME_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D37)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_PROJECTION_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D38)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_TEXTURE_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D39)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_VIEWPORT_DIMS", SWIG_From_int(static_cast< int >(0x0D3A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_CLIENT_ATTRIB_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D3B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SUBPIXEL_BITS", SWIG_From_int(static_cast< int >(0x0D50)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_BITS", SWIG_From_int(static_cast< int >(0x0D51)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RED_BITS", SWIG_From_int(static_cast< int >(0x0D52)));
  SWIG_Tcl_SetConstantObj(interp, "GL_GREEN_BITS", SWIG_From_int(static_cast< int >(0x0D53)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLUE_BITS", SWIG_From_int(static_cast< int >(0x0D54)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA_BITS", SWIG_From_int(static_cast< int >(0x0D55)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_BITS", SWIG_From_int(static_cast< int >(0x0D56)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BITS", SWIG_From_int(static_cast< int >(0x0D57)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACCUM_RED_BITS", SWIG_From_int(static_cast< int >(0x0D58)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACCUM_GREEN_BITS", SWIG_From_int(static_cast< int >(0x0D59)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACCUM_BLUE_BITS", SWIG_From_int(static_cast< int >(0x0D5A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACCUM_ALPHA_BITS", SWIG_From_int(static_cast< int >(0x0D5B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NAME_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x0D70)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AUTO_NORMAL", SWIG_From_int(static_cast< int >(0x0D80)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_COLOR_4", SWIG_From_int(static_cast< int >(0x0D90)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_INDEX", SWIG_From_int(static_cast< int >(0x0D91)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_NORMAL", SWIG_From_int(static_cast< int >(0x0D92)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_TEXTURE_COORD_1", SWIG_From_int(static_cast< int >(0x0D93)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_TEXTURE_COORD_2", SWIG_From_int(static_cast< int >(0x0D94)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_TEXTURE_COORD_3", SWIG_From_int(static_cast< int >(0x0D95)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_TEXTURE_COORD_4", SWIG_From_int(static_cast< int >(0x0D96)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_VERTEX_3", SWIG_From_int(static_cast< int >(0x0D97)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_VERTEX_4", SWIG_From_int(static_cast< int >(0x0D98)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_COLOR_4", SWIG_From_int(static_cast< int >(0x0DB0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_INDEX", SWIG_From_int(static_cast< int >(0x0DB1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_NORMAL", SWIG_From_int(static_cast< int >(0x0DB2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_TEXTURE_COORD_1", SWIG_From_int(static_cast< int >(0x0DB3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_TEXTURE_COORD_2", SWIG_From_int(static_cast< int >(0x0DB4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_TEXTURE_COORD_3", SWIG_From_int(static_cast< int >(0x0DB5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_TEXTURE_COORD_4", SWIG_From_int(static_cast< int >(0x0DB6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_VERTEX_3", SWIG_From_int(static_cast< int >(0x0DB7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_VERTEX_4", SWIG_From_int(static_cast< int >(0x0DB8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_GRID_DOMAIN", SWIG_From_int(static_cast< int >(0x0DD0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP1_GRID_SEGMENTS", SWIG_From_int(static_cast< int >(0x0DD1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_GRID_DOMAIN", SWIG_From_int(static_cast< int >(0x0DD2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAP2_GRID_SEGMENTS", SWIG_From_int(static_cast< int >(0x0DD3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_1D", SWIG_From_int(static_cast< int >(0x0DE0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_2D", SWIG_From_int(static_cast< int >(0x0DE1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FEEDBACK_BUFFER_POINTER", SWIG_From_int(static_cast< int >(0x0DF0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FEEDBACK_BUFFER_SIZE", SWIG_From_int(static_cast< int >(0x0DF1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FEEDBACK_BUFFER_TYPE", SWIG_From_int(static_cast< int >(0x0DF2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SELECTION_BUFFER_POINTER", SWIG_From_int(static_cast< int >(0x0DF3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SELECTION_BUFFER_SIZE", SWIG_From_int(static_cast< int >(0x0DF4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_WIDTH", SWIG_From_int(static_cast< int >(0x1000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_HEIGHT", SWIG_From_int(static_cast< int >(0x1001)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_INTERNAL_FORMAT", SWIG_From_int(static_cast< int >(0x1003)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BORDER_COLOR", SWIG_From_int(static_cast< int >(0x1004)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BORDER", SWIG_From_int(static_cast< int >(0x1005)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DONT_CARE", SWIG_From_int(static_cast< int >(0x1100)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FASTEST", SWIG_From_int(static_cast< int >(0x1101)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NICEST", SWIG_From_int(static_cast< int >(0x1102)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT0", SWIG_From_int(static_cast< int >(0x4000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT1", SWIG_From_int(static_cast< int >(0x4001)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT2", SWIG_From_int(static_cast< int >(0x4002)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT3", SWIG_From_int(static_cast< int >(0x4003)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT4", SWIG_From_int(static_cast< int >(0x4004)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT5", SWIG_From_int(static_cast< int >(0x4005)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT6", SWIG_From_int(static_cast< int >(0x4006)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT7", SWIG_From_int(static_cast< int >(0x4007)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AMBIENT", SWIG_From_int(static_cast< int >(0x1200)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DIFFUSE", SWIG_From_int(static_cast< int >(0x1201)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SPECULAR", SWIG_From_int(static_cast< int >(0x1202)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POSITION", SWIG_From_int(static_cast< int >(0x1203)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SPOT_DIRECTION", SWIG_From_int(static_cast< int >(0x1204)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SPOT_EXPONENT", SWIG_From_int(static_cast< int >(0x1205)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SPOT_CUTOFF", SWIG_From_int(static_cast< int >(0x1206)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONSTANT_ATTENUATION", SWIG_From_int(static_cast< int >(0x1207)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINEAR_ATTENUATION", SWIG_From_int(static_cast< int >(0x1208)));
  SWIG_Tcl_SetConstantObj(interp, "GL_QUADRATIC_ATTENUATION", SWIG_From_int(static_cast< int >(0x1209)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPILE", SWIG_From_int(static_cast< int >(0x1300)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPILE_AND_EXECUTE", SWIG_From_int(static_cast< int >(0x1301)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLEAR", SWIG_From_int(static_cast< int >(0x1500)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AND", SWIG_From_int(static_cast< int >(0x1501)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AND_REVERSE", SWIG_From_int(static_cast< int >(0x1502)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COPY", SWIG_From_int(static_cast< int >(0x1503)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AND_INVERTED", SWIG_From_int(static_cast< int >(0x1504)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NOOP", SWIG_From_int(static_cast< int >(0x1505)));
  SWIG_Tcl_SetConstantObj(interp, "GL_XOR", SWIG_From_int(static_cast< int >(0x1506)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OR", SWIG_From_int(static_cast< int >(0x1507)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NOR", SWIG_From_int(static_cast< int >(0x1508)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EQUIV", SWIG_From_int(static_cast< int >(0x1509)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INVERT", SWIG_From_int(static_cast< int >(0x150A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OR_REVERSE", SWIG_From_int(static_cast< int >(0x150B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COPY_INVERTED", SWIG_From_int(static_cast< int >(0x150C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OR_INVERTED", SWIG_From_int(static_cast< int >(0x150D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NAND", SWIG_From_int(static_cast< int >(0x150E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SET", SWIG_From_int(static_cast< int >(0x150F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EMISSION", SWIG_From_int(static_cast< int >(0x1600)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SHININESS", SWIG_From_int(static_cast< int >(0x1601)));
  SWIG_Tcl_SetConstantObj(interp, "GL_AMBIENT_AND_DIFFUSE", SWIG_From_int(static_cast< int >(0x1602)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_INDEXES", SWIG_From_int(static_cast< int >(0x1603)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MODELVIEW", SWIG_From_int(static_cast< int >(0x1700)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROJECTION", SWIG_From_int(static_cast< int >(0x1701)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE", SWIG_From_int(static_cast< int >(0x1702)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR", SWIG_From_int(static_cast< int >(0x1800)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH", SWIG_From_int(static_cast< int >(0x1801)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL", SWIG_From_int(static_cast< int >(0x1802)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_INDEX", SWIG_From_int(static_cast< int >(0x1900)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_INDEX", SWIG_From_int(static_cast< int >(0x1901)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_COMPONENT", SWIG_From_int(static_cast< int >(0x1902)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RED", SWIG_From_int(static_cast< int >(0x1903)));
  SWIG_Tcl_SetConstantObj(interp, "GL_GREEN", SWIG_From_int(static_cast< int >(0x1904)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLUE", SWIG_From_int(static_cast< int >(0x1905)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA", SWIG_From_int(static_cast< int >(0x1906)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB", SWIG_From_int(static_cast< int >(0x1907)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGBA", SWIG_From_int(static_cast< int >(0x1908)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE", SWIG_From_int(static_cast< int >(0x1909)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE_ALPHA", SWIG_From_int(static_cast< int >(0x190A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BITMAP", SWIG_From_int(static_cast< int >(0x1A00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT", SWIG_From_int(static_cast< int >(0x1B00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINE", SWIG_From_int(static_cast< int >(0x1B01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FILL", SWIG_From_int(static_cast< int >(0x1B02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RENDER", SWIG_From_int(static_cast< int >(0x1C00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FEEDBACK", SWIG_From_int(static_cast< int >(0x1C01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SELECT", SWIG_From_int(static_cast< int >(0x1C02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLAT", SWIG_From_int(static_cast< int >(0x1D00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SMOOTH", SWIG_From_int(static_cast< int >(0x1D01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_KEEP", SWIG_From_int(static_cast< int >(0x1E00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_REPLACE", SWIG_From_int(static_cast< int >(0x1E01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INCR", SWIG_From_int(static_cast< int >(0x1E02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DECR", SWIG_From_int(static_cast< int >(0x1E03)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VENDOR", SWIG_From_int(static_cast< int >(0x1F00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RENDERER", SWIG_From_int(static_cast< int >(0x1F01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERSION", SWIG_From_int(static_cast< int >(0x1F02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EXTENSIONS", SWIG_From_int(static_cast< int >(0x1F03)));
  SWIG_Tcl_SetConstantObj(interp, "GL_S", SWIG_From_int(static_cast< int >(0x2000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_T", SWIG_From_int(static_cast< int >(0x2001)));
  SWIG_Tcl_SetConstantObj(interp, "GL_R", SWIG_From_int(static_cast< int >(0x2002)));
  SWIG_Tcl_SetConstantObj(interp, "GL_Q", SWIG_From_int(static_cast< int >(0x2003)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MODULATE", SWIG_From_int(static_cast< int >(0x2100)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DECAL", SWIG_From_int(static_cast< int >(0x2101)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_ENV_MODE", SWIG_From_int(static_cast< int >(0x2200)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_ENV_COLOR", SWIG_From_int(static_cast< int >(0x2201)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_ENV", SWIG_From_int(static_cast< int >(0x2300)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EYE_LINEAR", SWIG_From_int(static_cast< int >(0x2400)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OBJECT_LINEAR", SWIG_From_int(static_cast< int >(0x2401)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SPHERE_MAP", SWIG_From_int(static_cast< int >(0x2402)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_GEN_MODE", SWIG_From_int(static_cast< int >(0x2500)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OBJECT_PLANE", SWIG_From_int(static_cast< int >(0x2501)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EYE_PLANE", SWIG_From_int(static_cast< int >(0x2502)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NEAREST", SWIG_From_int(static_cast< int >(0x2600)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINEAR", SWIG_From_int(static_cast< int >(0x2601)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NEAREST_MIPMAP_NEAREST", SWIG_From_int(static_cast< int >(0x2700)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINEAR_MIPMAP_NEAREST", SWIG_From_int(static_cast< int >(0x2701)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NEAREST_MIPMAP_LINEAR", SWIG_From_int(static_cast< int >(0x2702)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINEAR_MIPMAP_LINEAR", SWIG_From_int(static_cast< int >(0x2703)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_MAG_FILTER", SWIG_From_int(static_cast< int >(0x2800)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_MIN_FILTER", SWIG_From_int(static_cast< int >(0x2801)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_WRAP_S", SWIG_From_int(static_cast< int >(0x2802)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_WRAP_T", SWIG_From_int(static_cast< int >(0x2803)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLAMP", SWIG_From_int(static_cast< int >(0x2900)));
  SWIG_Tcl_SetConstantObj(interp, "GL_REPEAT", SWIG_From_int(static_cast< int >(0x2901)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIENT_PIXEL_STORE_BIT", SWIG_From_int(static_cast< int >(0x00000001)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIENT_VERTEX_ARRAY_BIT", SWIG_From_int(static_cast< int >(0x00000002)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIENT_ALL_ATTRIB_BITS", SWIG_From_int(static_cast< int >(0xffffffff)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_OFFSET_FACTOR", SWIG_From_int(static_cast< int >(0x8038)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_OFFSET_UNITS", SWIG_From_int(static_cast< int >(0x2A00)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_OFFSET_POINT", SWIG_From_int(static_cast< int >(0x2A01)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_OFFSET_LINE", SWIG_From_int(static_cast< int >(0x2A02)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POLYGON_OFFSET_FILL", SWIG_From_int(static_cast< int >(0x8037)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA4", SWIG_From_int(static_cast< int >(0x803B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA8", SWIG_From_int(static_cast< int >(0x803C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA12", SWIG_From_int(static_cast< int >(0x803D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALPHA16", SWIG_From_int(static_cast< int >(0x803E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE4", SWIG_From_int(static_cast< int >(0x803F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE8", SWIG_From_int(static_cast< int >(0x8040)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE12", SWIG_From_int(static_cast< int >(0x8041)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE16", SWIG_From_int(static_cast< int >(0x8042)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE4_ALPHA4", SWIG_From_int(static_cast< int >(0x8043)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE6_ALPHA2", SWIG_From_int(static_cast< int >(0x8044)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE8_ALPHA8", SWIG_From_int(static_cast< int >(0x8045)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE12_ALPHA4", SWIG_From_int(static_cast< int >(0x8046)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE12_ALPHA12", SWIG_From_int(static_cast< int >(0x8047)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LUMINANCE16_ALPHA16", SWIG_From_int(static_cast< int >(0x8048)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INTENSITY", SWIG_From_int(static_cast< int >(0x8049)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INTENSITY4", SWIG_From_int(static_cast< int >(0x804A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INTENSITY8", SWIG_From_int(static_cast< int >(0x804B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INTENSITY12", SWIG_From_int(static_cast< int >(0x804C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INTENSITY16", SWIG_From_int(static_cast< int >(0x804D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_R3_G3_B2", SWIG_From_int(static_cast< int >(0x2A10)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB4", SWIG_From_int(static_cast< int >(0x804F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB5", SWIG_From_int(static_cast< int >(0x8050)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB8", SWIG_From_int(static_cast< int >(0x8051)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB10", SWIG_From_int(static_cast< int >(0x8052)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB12", SWIG_From_int(static_cast< int >(0x8053)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB16", SWIG_From_int(static_cast< int >(0x8054)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGBA2", SWIG_From_int(static_cast< int >(0x8055)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGBA4", SWIG_From_int(static_cast< int >(0x8056)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB5_A1", SWIG_From_int(static_cast< int >(0x8057)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGBA8", SWIG_From_int(static_cast< int >(0x8058)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB10_A2", SWIG_From_int(static_cast< int >(0x8059)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGBA12", SWIG_From_int(static_cast< int >(0x805A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGBA16", SWIG_From_int(static_cast< int >(0x805B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_RED_SIZE", SWIG_From_int(static_cast< int >(0x805C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_GREEN_SIZE", SWIG_From_int(static_cast< int >(0x805D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BLUE_SIZE", SWIG_From_int(static_cast< int >(0x805E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_ALPHA_SIZE", SWIG_From_int(static_cast< int >(0x805F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_LUMINANCE_SIZE", SWIG_From_int(static_cast< int >(0x8060)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_INTENSITY_SIZE", SWIG_From_int(static_cast< int >(0x8061)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROXY_TEXTURE_1D", SWIG_From_int(static_cast< int >(0x8063)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROXY_TEXTURE_2D", SWIG_From_int(static_cast< int >(0x8064)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_PRIORITY", SWIG_From_int(static_cast< int >(0x8066)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_RESIDENT", SWIG_From_int(static_cast< int >(0x8067)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BINDING_1D", SWIG_From_int(static_cast< int >(0x8068)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BINDING_2D", SWIG_From_int(static_cast< int >(0x8069)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BINDING_3D", SWIG_From_int(static_cast< int >(0x806A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ARRAY", SWIG_From_int(static_cast< int >(0x8074)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NORMAL_ARRAY", SWIG_From_int(static_cast< int >(0x8075)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_ARRAY", SWIG_From_int(static_cast< int >(0x8076)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_ARRAY", SWIG_From_int(static_cast< int >(0x8077)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COORD_ARRAY", SWIG_From_int(static_cast< int >(0x8078)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EDGE_FLAG_ARRAY", SWIG_From_int(static_cast< int >(0x8079)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x807A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x807B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x807C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NORMAL_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x807E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NORMAL_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x807F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x8081)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8082)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8083)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8085)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8086)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COORD_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x8088)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COORD_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8089)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COORD_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x808A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EDGE_FLAG_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x808C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x808E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NORMAL_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x808F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8090)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8091)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COORD_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8092)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EDGE_FLAG_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8093)));
  SWIG_Tcl_SetConstantObj(interp, "GL_V2F", SWIG_From_int(static_cast< int >(0x2A20)));
  SWIG_Tcl_SetConstantObj(interp, "GL_V3F", SWIG_From_int(static_cast< int >(0x2A21)));
  SWIG_Tcl_SetConstantObj(interp, "GL_C4UB_V2F", SWIG_From_int(static_cast< int >(0x2A22)));
  SWIG_Tcl_SetConstantObj(interp, "GL_C4UB_V3F", SWIG_From_int(static_cast< int >(0x2A23)));
  SWIG_Tcl_SetConstantObj(interp, "GL_C3F_V3F", SWIG_From_int(static_cast< int >(0x2A24)));
  SWIG_Tcl_SetConstantObj(interp, "GL_N3F_V3F", SWIG_From_int(static_cast< int >(0x2A25)));
  SWIG_Tcl_SetConstantObj(interp, "GL_C4F_N3F_V3F", SWIG_From_int(static_cast< int >(0x2A26)));
  SWIG_Tcl_SetConstantObj(interp, "GL_T2F_V3F", SWIG_From_int(static_cast< int >(0x2A27)));
  SWIG_Tcl_SetConstantObj(interp, "GL_T4F_V4F", SWIG_From_int(static_cast< int >(0x2A28)));
  SWIG_Tcl_SetConstantObj(interp, "GL_T2F_C4UB_V3F", SWIG_From_int(static_cast< int >(0x2A29)));
  SWIG_Tcl_SetConstantObj(interp, "GL_T2F_C3F_V3F", SWIG_From_int(static_cast< int >(0x2A2A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_T2F_N3F_V3F", SWIG_From_int(static_cast< int >(0x2A2B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_T2F_C4F_N3F_V3F", SWIG_From_int(static_cast< int >(0x2A2C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_T4F_C4F_N3F_V4F", SWIG_From_int(static_cast< int >(0x2A2D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BGR", SWIG_From_int(static_cast< int >(0x80E0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BGRA", SWIG_From_int(static_cast< int >(0x80E1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONSTANT_COLOR", SWIG_From_int(static_cast< int >(0x8001)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ONE_MINUS_CONSTANT_COLOR", SWIG_From_int(static_cast< int >(0x8002)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONSTANT_ALPHA", SWIG_From_int(static_cast< int >(0x8003)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ONE_MINUS_CONSTANT_ALPHA", SWIG_From_int(static_cast< int >(0x8004)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_COLOR", SWIG_From_int(static_cast< int >(0x8005)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FUNC_ADD", SWIG_From_int(static_cast< int >(0x8006)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MIN", SWIG_From_int(static_cast< int >(0x8007)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX", SWIG_From_int(static_cast< int >(0x8008)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_EQUATION", SWIG_From_int(static_cast< int >(0x8009)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_EQUATION_RGB", SWIG_From_int(static_cast< int >(0x8009)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_EQUATION_ALPHA", SWIG_From_int(static_cast< int >(0x883D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FUNC_SUBTRACT", SWIG_From_int(static_cast< int >(0x800A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FUNC_REVERSE_SUBTRACT", SWIG_From_int(static_cast< int >(0x800B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_MATRIX", SWIG_From_int(static_cast< int >(0x80B1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_MATRIX_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x80B2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_COLOR_MATRIX_STACK_DEPTH", SWIG_From_int(static_cast< int >(0x80B3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_RED_SCALE", SWIG_From_int(static_cast< int >(0x80B4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_GREEN_SCALE", SWIG_From_int(static_cast< int >(0x80B5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_BLUE_SCALE", SWIG_From_int(static_cast< int >(0x80B6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_ALPHA_SCALE", SWIG_From_int(static_cast< int >(0x80B7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_RED_BIAS", SWIG_From_int(static_cast< int >(0x80B8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_GREEN_BIAS", SWIG_From_int(static_cast< int >(0x80B9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_BLUE_BIAS", SWIG_From_int(static_cast< int >(0x80BA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_ALPHA_BIAS", SWIG_From_int(static_cast< int >(0x80BB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_COLOR_MATRIX_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROXY_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROXY_POST_CONVOLUTION_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE", SWIG_From_int(static_cast< int >(0x80D5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_SCALE", SWIG_From_int(static_cast< int >(0x80D6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_BIAS", SWIG_From_int(static_cast< int >(0x80D7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_FORMAT", SWIG_From_int(static_cast< int >(0x80D8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_WIDTH", SWIG_From_int(static_cast< int >(0x80D9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_RED_SIZE", SWIG_From_int(static_cast< int >(0x80DA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_GREEN_SIZE", SWIG_From_int(static_cast< int >(0x80DB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_BLUE_SIZE", SWIG_From_int(static_cast< int >(0x80DC)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_ALPHA_SIZE", SWIG_From_int(static_cast< int >(0x80DD)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_LUMINANCE_SIZE", SWIG_From_int(static_cast< int >(0x80DE)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_TABLE_INTENSITY_SIZE", SWIG_From_int(static_cast< int >(0x80DF)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_1D", SWIG_From_int(static_cast< int >(0x8010)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_2D", SWIG_From_int(static_cast< int >(0x8011)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SEPARABLE_2D", SWIG_From_int(static_cast< int >(0x8012)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_BORDER_MODE", SWIG_From_int(static_cast< int >(0x8013)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_FILTER_SCALE", SWIG_From_int(static_cast< int >(0x8014)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_FILTER_BIAS", SWIG_From_int(static_cast< int >(0x8015)));
  SWIG_Tcl_SetConstantObj(interp, "GL_REDUCE", SWIG_From_int(static_cast< int >(0x8016)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_FORMAT", SWIG_From_int(static_cast< int >(0x8017)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_WIDTH", SWIG_From_int(static_cast< int >(0x8018)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_HEIGHT", SWIG_From_int(static_cast< int >(0x8019)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_CONVOLUTION_WIDTH", SWIG_From_int(static_cast< int >(0x801A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_CONVOLUTION_HEIGHT", SWIG_From_int(static_cast< int >(0x801B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_RED_SCALE", SWIG_From_int(static_cast< int >(0x801C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_GREEN_SCALE", SWIG_From_int(static_cast< int >(0x801D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_BLUE_SCALE", SWIG_From_int(static_cast< int >(0x801E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_ALPHA_SCALE", SWIG_From_int(static_cast< int >(0x801F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_RED_BIAS", SWIG_From_int(static_cast< int >(0x8020)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_GREEN_BIAS", SWIG_From_int(static_cast< int >(0x8021)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_BLUE_BIAS", SWIG_From_int(static_cast< int >(0x8022)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POST_CONVOLUTION_ALPHA_BIAS", SWIG_From_int(static_cast< int >(0x8023)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONSTANT_BORDER", SWIG_From_int(static_cast< int >(0x8151)));
  SWIG_Tcl_SetConstantObj(interp, "GL_REPLICATE_BORDER", SWIG_From_int(static_cast< int >(0x8153)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONVOLUTION_BORDER_COLOR", SWIG_From_int(static_cast< int >(0x8154)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_ELEMENTS_VERTICES", SWIG_From_int(static_cast< int >(0x80E8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_ELEMENTS_INDICES", SWIG_From_int(static_cast< int >(0x80E9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM", SWIG_From_int(static_cast< int >(0x8024)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROXY_HISTOGRAM", SWIG_From_int(static_cast< int >(0x8025)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM_WIDTH", SWIG_From_int(static_cast< int >(0x8026)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM_FORMAT", SWIG_From_int(static_cast< int >(0x8027)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM_RED_SIZE", SWIG_From_int(static_cast< int >(0x8028)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM_GREEN_SIZE", SWIG_From_int(static_cast< int >(0x8029)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM_BLUE_SIZE", SWIG_From_int(static_cast< int >(0x802A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM_ALPHA_SIZE", SWIG_From_int(static_cast< int >(0x802B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM_LUMINANCE_SIZE", SWIG_From_int(static_cast< int >(0x802C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_HISTOGRAM_SINK", SWIG_From_int(static_cast< int >(0x802D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MINMAX", SWIG_From_int(static_cast< int >(0x802E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MINMAX_FORMAT", SWIG_From_int(static_cast< int >(0x802F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MINMAX_SINK", SWIG_From_int(static_cast< int >(0x8030)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TABLE_TOO_LARGE", SWIG_From_int(static_cast< int >(0x8031)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_BYTE_3_3_2", SWIG_From_int(static_cast< int >(0x8032)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_SHORT_4_4_4_4", SWIG_From_int(static_cast< int >(0x8033)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_SHORT_5_5_5_1", SWIG_From_int(static_cast< int >(0x8034)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_INT_8_8_8_8", SWIG_From_int(static_cast< int >(0x8035)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_INT_10_10_10_2", SWIG_From_int(static_cast< int >(0x8036)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_BYTE_2_3_3_REV", SWIG_From_int(static_cast< int >(0x8362)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_SHORT_5_6_5", SWIG_From_int(static_cast< int >(0x8363)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_SHORT_5_6_5_REV", SWIG_From_int(static_cast< int >(0x8364)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_SHORT_4_4_4_4_REV", SWIG_From_int(static_cast< int >(0x8365)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_SHORT_1_5_5_5_REV", SWIG_From_int(static_cast< int >(0x8366)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_INT_8_8_8_8_REV", SWIG_From_int(static_cast< int >(0x8367)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNSIGNED_INT_2_10_10_10_REV", SWIG_From_int(static_cast< int >(0x8368)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RESCALE_NORMAL", SWIG_From_int(static_cast< int >(0x803A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LIGHT_MODEL_COLOR_CONTROL", SWIG_From_int(static_cast< int >(0x81F8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SINGLE_COLOR", SWIG_From_int(static_cast< int >(0x81F9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SEPARATE_SPECULAR_COLOR", SWIG_From_int(static_cast< int >(0x81FA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PACK_SKIP_IMAGES", SWIG_From_int(static_cast< int >(0x806B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PACK_IMAGE_HEIGHT", SWIG_From_int(static_cast< int >(0x806C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNPACK_SKIP_IMAGES", SWIG_From_int(static_cast< int >(0x806D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UNPACK_IMAGE_HEIGHT", SWIG_From_int(static_cast< int >(0x806E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_3D", SWIG_From_int(static_cast< int >(0x806F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROXY_TEXTURE_3D", SWIG_From_int(static_cast< int >(0x8070)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_DEPTH", SWIG_From_int(static_cast< int >(0x8071)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_WRAP_R", SWIG_From_int(static_cast< int >(0x8072)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_3D_TEXTURE_SIZE", SWIG_From_int(static_cast< int >(0x8073)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLAMP_TO_EDGE", SWIG_From_int(static_cast< int >(0x812F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLAMP_TO_BORDER", SWIG_From_int(static_cast< int >(0x812D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_MIN_LOD", SWIG_From_int(static_cast< int >(0x813A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_MAX_LOD", SWIG_From_int(static_cast< int >(0x813B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BASE_LEVEL", SWIG_From_int(static_cast< int >(0x813C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_MAX_LEVEL", SWIG_From_int(static_cast< int >(0x813D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SMOOTH_POINT_SIZE_RANGE", SWIG_From_int(static_cast< int >(0x0B12)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SMOOTH_POINT_SIZE_GRANULARITY", SWIG_From_int(static_cast< int >(0x0B13)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SMOOTH_LINE_WIDTH_RANGE", SWIG_From_int(static_cast< int >(0x0B22)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SMOOTH_LINE_WIDTH_GRANULARITY", SWIG_From_int(static_cast< int >(0x0B23)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALIASED_POINT_SIZE_RANGE", SWIG_From_int(static_cast< int >(0x846D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ALIASED_LINE_WIDTH_RANGE", SWIG_From_int(static_cast< int >(0x846E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE0", SWIG_From_int(static_cast< int >(0x84C0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE1", SWIG_From_int(static_cast< int >(0x84C1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE2", SWIG_From_int(static_cast< int >(0x84C2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE3", SWIG_From_int(static_cast< int >(0x84C3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE4", SWIG_From_int(static_cast< int >(0x84C4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE5", SWIG_From_int(static_cast< int >(0x84C5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE6", SWIG_From_int(static_cast< int >(0x84C6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE7", SWIG_From_int(static_cast< int >(0x84C7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE8", SWIG_From_int(static_cast< int >(0x84C8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE9", SWIG_From_int(static_cast< int >(0x84C9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE10", SWIG_From_int(static_cast< int >(0x84CA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE11", SWIG_From_int(static_cast< int >(0x84CB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE12", SWIG_From_int(static_cast< int >(0x84CC)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE13", SWIG_From_int(static_cast< int >(0x84CD)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE14", SWIG_From_int(static_cast< int >(0x84CE)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE15", SWIG_From_int(static_cast< int >(0x84CF)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE16", SWIG_From_int(static_cast< int >(0x84D0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE17", SWIG_From_int(static_cast< int >(0x84D1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE18", SWIG_From_int(static_cast< int >(0x84D2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE19", SWIG_From_int(static_cast< int >(0x84D3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE20", SWIG_From_int(static_cast< int >(0x84D4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE21", SWIG_From_int(static_cast< int >(0x84D5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE22", SWIG_From_int(static_cast< int >(0x84D6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE23", SWIG_From_int(static_cast< int >(0x84D7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE24", SWIG_From_int(static_cast< int >(0x84D8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE25", SWIG_From_int(static_cast< int >(0x84D9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE26", SWIG_From_int(static_cast< int >(0x84DA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE27", SWIG_From_int(static_cast< int >(0x84DB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE28", SWIG_From_int(static_cast< int >(0x84DC)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE29", SWIG_From_int(static_cast< int >(0x84DD)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE30", SWIG_From_int(static_cast< int >(0x84DE)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE31", SWIG_From_int(static_cast< int >(0x84DF)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACTIVE_TEXTURE", SWIG_From_int(static_cast< int >(0x84E0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CLIENT_ACTIVE_TEXTURE", SWIG_From_int(static_cast< int >(0x84E1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_TEXTURE_UNITS", SWIG_From_int(static_cast< int >(0x84E2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMBINE", SWIG_From_int(static_cast< int >(0x8570)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMBINE_RGB", SWIG_From_int(static_cast< int >(0x8571)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMBINE_ALPHA", SWIG_From_int(static_cast< int >(0x8572)));
  SWIG_Tcl_SetConstantObj(interp, "GL_RGB_SCALE", SWIG_From_int(static_cast< int >(0x8573)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ADD_SIGNED", SWIG_From_int(static_cast< int >(0x8574)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INTERPOLATE", SWIG_From_int(static_cast< int >(0x8575)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CONSTANT", SWIG_From_int(static_cast< int >(0x8576)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PRIMARY_COLOR", SWIG_From_int(static_cast< int >(0x8577)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PREVIOUS", SWIG_From_int(static_cast< int >(0x8578)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SUBTRACT", SWIG_From_int(static_cast< int >(0x84E7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC0_RGB", SWIG_From_int(static_cast< int >(0x8580)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC1_RGB", SWIG_From_int(static_cast< int >(0x8581)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC2_RGB", SWIG_From_int(static_cast< int >(0x8582)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC0_ALPHA", SWIG_From_int(static_cast< int >(0x8588)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC1_ALPHA", SWIG_From_int(static_cast< int >(0x8589)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRC2_ALPHA", SWIG_From_int(static_cast< int >(0x858A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SOURCE0_RGB", SWIG_From_int(static_cast< int >(0x8580)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SOURCE1_RGB", SWIG_From_int(static_cast< int >(0x8581)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SOURCE2_RGB", SWIG_From_int(static_cast< int >(0x8582)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SOURCE0_ALPHA", SWIG_From_int(static_cast< int >(0x8588)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SOURCE1_ALPHA", SWIG_From_int(static_cast< int >(0x8589)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SOURCE2_ALPHA", SWIG_From_int(static_cast< int >(0x858A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OPERAND0_RGB", SWIG_From_int(static_cast< int >(0x8590)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OPERAND1_RGB", SWIG_From_int(static_cast< int >(0x8591)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OPERAND2_RGB", SWIG_From_int(static_cast< int >(0x8592)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OPERAND0_ALPHA", SWIG_From_int(static_cast< int >(0x8598)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OPERAND1_ALPHA", SWIG_From_int(static_cast< int >(0x8599)));
  SWIG_Tcl_SetConstantObj(interp, "GL_OPERAND2_ALPHA", SWIG_From_int(static_cast< int >(0x859A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DOT3_RGB", SWIG_From_int(static_cast< int >(0x86AE)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DOT3_RGBA", SWIG_From_int(static_cast< int >(0x86AF)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRANSPOSE_MODELVIEW_MATRIX", SWIG_From_int(static_cast< int >(0x84E3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRANSPOSE_PROJECTION_MATRIX", SWIG_From_int(static_cast< int >(0x84E4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRANSPOSE_TEXTURE_MATRIX", SWIG_From_int(static_cast< int >(0x84E5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TRANSPOSE_COLOR_MATRIX", SWIG_From_int(static_cast< int >(0x84E6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NORMAL_MAP", SWIG_From_int(static_cast< int >(0x8511)));
  SWIG_Tcl_SetConstantObj(interp, "GL_REFLECTION_MAP", SWIG_From_int(static_cast< int >(0x8512)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_CUBE_MAP", SWIG_From_int(static_cast< int >(0x8513)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_BINDING_CUBE_MAP", SWIG_From_int(static_cast< int >(0x8514)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_CUBE_MAP_POSITIVE_X", SWIG_From_int(static_cast< int >(0x8515)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_CUBE_MAP_NEGATIVE_X", SWIG_From_int(static_cast< int >(0x8516)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_CUBE_MAP_POSITIVE_Y", SWIG_From_int(static_cast< int >(0x8517)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Y", SWIG_From_int(static_cast< int >(0x8518)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_CUBE_MAP_POSITIVE_Z", SWIG_From_int(static_cast< int >(0x8519)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_CUBE_MAP_NEGATIVE_Z", SWIG_From_int(static_cast< int >(0x851A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PROXY_TEXTURE_CUBE_MAP", SWIG_From_int(static_cast< int >(0x851B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_CUBE_MAP_TEXTURE_SIZE", SWIG_From_int(static_cast< int >(0x851C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_ALPHA", SWIG_From_int(static_cast< int >(0x84E9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_LUMINANCE", SWIG_From_int(static_cast< int >(0x84EA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_LUMINANCE_ALPHA", SWIG_From_int(static_cast< int >(0x84EB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_INTENSITY", SWIG_From_int(static_cast< int >(0x84EC)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_RGB", SWIG_From_int(static_cast< int >(0x84ED)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_RGBA", SWIG_From_int(static_cast< int >(0x84EE)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COMPRESSION_HINT", SWIG_From_int(static_cast< int >(0x84EF)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COMPRESSED_IMAGE_SIZE", SWIG_From_int(static_cast< int >(0x86A0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COMPRESSED", SWIG_From_int(static_cast< int >(0x86A1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NUM_COMPRESSED_TEXTURE_FORMATS", SWIG_From_int(static_cast< int >(0x86A2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_TEXTURE_FORMATS", SWIG_From_int(static_cast< int >(0x86A3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MULTISAMPLE", SWIG_From_int(static_cast< int >(0x809D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLE_ALPHA_TO_COVERAGE", SWIG_From_int(static_cast< int >(0x809E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLE_ALPHA_TO_ONE", SWIG_From_int(static_cast< int >(0x809F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLE_COVERAGE", SWIG_From_int(static_cast< int >(0x80A0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLE_BUFFERS", SWIG_From_int(static_cast< int >(0x80A8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLES", SWIG_From_int(static_cast< int >(0x80A9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLE_COVERAGE_VALUE", SWIG_From_int(static_cast< int >(0x80AA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLE_COVERAGE_INVERT", SWIG_From_int(static_cast< int >(0x80AB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MULTISAMPLE_BIT", SWIG_From_int(static_cast< int >(0x20000000)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_COMPONENT16", SWIG_From_int(static_cast< int >(0x81A5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_COMPONENT24", SWIG_From_int(static_cast< int >(0x81A6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_COMPONENT32", SWIG_From_int(static_cast< int >(0x81A7)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_DEPTH_SIZE", SWIG_From_int(static_cast< int >(0x884A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DEPTH_TEXTURE_MODE", SWIG_From_int(static_cast< int >(0x884B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COMPARE_MODE", SWIG_From_int(static_cast< int >(0x884C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COMPARE_FUNC", SWIG_From_int(static_cast< int >(0x884D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPARE_R_TO_TEXTURE", SWIG_From_int(static_cast< int >(0x884E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_QUERY_COUNTER_BITS", SWIG_From_int(static_cast< int >(0x8864)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_QUERY", SWIG_From_int(static_cast< int >(0x8865)));
  SWIG_Tcl_SetConstantObj(interp, "GL_QUERY_RESULT", SWIG_From_int(static_cast< int >(0x8866)));
  SWIG_Tcl_SetConstantObj(interp, "GL_QUERY_RESULT_AVAILABLE", SWIG_From_int(static_cast< int >(0x8867)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLES_PASSED", SWIG_From_int(static_cast< int >(0x8914)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORD_SRC", SWIG_From_int(static_cast< int >(0x8450)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORD", SWIG_From_int(static_cast< int >(0x8451)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FRAGMENT_DEPTH", SWIG_From_int(static_cast< int >(0x8452)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_FOG_COORD", SWIG_From_int(static_cast< int >(0x8453)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORD_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8454)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORD_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8455)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORD_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8456)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORD_ARRAY", SWIG_From_int(static_cast< int >(0x8457)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORDINATE_SOURCE", SWIG_From_int(static_cast< int >(0x8450)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORDINATE", SWIG_From_int(static_cast< int >(0x8451)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_FOG_COORDINATE", SWIG_From_int(static_cast< int >(0x8453)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORDINATE_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8454)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORDINATE_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8455)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORDINATE_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8456)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORDINATE_ARRAY", SWIG_From_int(static_cast< int >(0x8457)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_SUM", SWIG_From_int(static_cast< int >(0x8458)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_SECONDARY_COLOR", SWIG_From_int(static_cast< int >(0x8459)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SECONDARY_COLOR_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x845A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SECONDARY_COLOR_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x845B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SECONDARY_COLOR_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x845C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SECONDARY_COLOR_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x845D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SECONDARY_COLOR_ARRAY", SWIG_From_int(static_cast< int >(0x845E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SIZE_MIN", SWIG_From_int(static_cast< int >(0x8126)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SIZE_MAX", SWIG_From_int(static_cast< int >(0x8127)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_FADE_THRESHOLD_SIZE", SWIG_From_int(static_cast< int >(0x8128)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_DISTANCE_ATTENUATION", SWIG_From_int(static_cast< int >(0x8129)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_DST_RGB", SWIG_From_int(static_cast< int >(0x80C8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_SRC_RGB", SWIG_From_int(static_cast< int >(0x80C9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_DST_ALPHA", SWIG_From_int(static_cast< int >(0x80CA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BLEND_SRC_ALPHA", SWIG_From_int(static_cast< int >(0x80CB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_GENERATE_MIPMAP", SWIG_From_int(static_cast< int >(0x8191)));
  SWIG_Tcl_SetConstantObj(interp, "GL_GENERATE_MIPMAP_HINT", SWIG_From_int(static_cast< int >(0x8192)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INCR_WRAP", SWIG_From_int(static_cast< int >(0x8507)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DECR_WRAP", SWIG_From_int(static_cast< int >(0x8508)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MIRRORED_REPEAT", SWIG_From_int(static_cast< int >(0x8370)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_TEXTURE_LOD_BIAS", SWIG_From_int(static_cast< int >(0x84FD)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_FILTER_CONTROL", SWIG_From_int(static_cast< int >(0x8500)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_LOD_BIAS", SWIG_From_int(static_cast< int >(0x8501)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ARRAY_BUFFER", SWIG_From_int(static_cast< int >(0x8892)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ELEMENT_ARRAY_BUFFER", SWIG_From_int(static_cast< int >(0x8893)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8894)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ELEMENT_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8895)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8896)));
  SWIG_Tcl_SetConstantObj(interp, "GL_NORMAL_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8897)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COLOR_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8898)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INDEX_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x8899)));
  SWIG_Tcl_SetConstantObj(interp, "GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_EDGE_FLAG_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORD_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_WEIGHT_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STREAM_DRAW", SWIG_From_int(static_cast< int >(0x88E0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STREAM_READ", SWIG_From_int(static_cast< int >(0x88E1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STREAM_COPY", SWIG_From_int(static_cast< int >(0x88E2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STATIC_DRAW", SWIG_From_int(static_cast< int >(0x88E4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STATIC_READ", SWIG_From_int(static_cast< int >(0x88E5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STATIC_COPY", SWIG_From_int(static_cast< int >(0x88E6)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DYNAMIC_DRAW", SWIG_From_int(static_cast< int >(0x88E8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DYNAMIC_READ", SWIG_From_int(static_cast< int >(0x88E9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DYNAMIC_COPY", SWIG_From_int(static_cast< int >(0x88EA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_READ_ONLY", SWIG_From_int(static_cast< int >(0x88B8)));
  SWIG_Tcl_SetConstantObj(interp, "GL_WRITE_ONLY", SWIG_From_int(static_cast< int >(0x88B9)));
  SWIG_Tcl_SetConstantObj(interp, "GL_READ_WRITE", SWIG_From_int(static_cast< int >(0x88BA)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BUFFER_SIZE", SWIG_From_int(static_cast< int >(0x8764)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BUFFER_USAGE", SWIG_From_int(static_cast< int >(0x8765)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BUFFER_ACCESS", SWIG_From_int(static_cast< int >(0x88BB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BUFFER_MAPPED", SWIG_From_int(static_cast< int >(0x88BC)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BUFFER_MAP_POINTER", SWIG_From_int(static_cast< int >(0x88BD)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x889D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_PROGRAM", SWIG_From_int(static_cast< int >(0x8B8D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SHADER_TYPE", SWIG_From_int(static_cast< int >(0x8B4F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DELETE_STATUS", SWIG_From_int(static_cast< int >(0x8B80)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPILE_STATUS", SWIG_From_int(static_cast< int >(0x8B81)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LINK_STATUS", SWIG_From_int(static_cast< int >(0x8B82)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VALIDATE_STATUS", SWIG_From_int(static_cast< int >(0x8B83)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INFO_LOG_LENGTH", SWIG_From_int(static_cast< int >(0x8B84)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ATTACHED_SHADERS", SWIG_From_int(static_cast< int >(0x8B85)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACTIVE_UNIFORMS", SWIG_From_int(static_cast< int >(0x8B86)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACTIVE_UNIFORM_MAX_LENGTH", SWIG_From_int(static_cast< int >(0x8B87)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SHADER_SOURCE_LENGTH", SWIG_From_int(static_cast< int >(0x8B88)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_VEC2", SWIG_From_int(static_cast< int >(0x8B50)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_VEC3", SWIG_From_int(static_cast< int >(0x8B51)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_VEC4", SWIG_From_int(static_cast< int >(0x8B52)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INT_VEC2", SWIG_From_int(static_cast< int >(0x8B53)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INT_VEC3", SWIG_From_int(static_cast< int >(0x8B54)));
  SWIG_Tcl_SetConstantObj(interp, "GL_INT_VEC4", SWIG_From_int(static_cast< int >(0x8B55)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BOOL", SWIG_From_int(static_cast< int >(0x8B56)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BOOL_VEC2", SWIG_From_int(static_cast< int >(0x8B57)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BOOL_VEC3", SWIG_From_int(static_cast< int >(0x8B58)));
  SWIG_Tcl_SetConstantObj(interp, "GL_BOOL_VEC4", SWIG_From_int(static_cast< int >(0x8B59)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT2", SWIG_From_int(static_cast< int >(0x8B5A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT3", SWIG_From_int(static_cast< int >(0x8B5B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT4", SWIG_From_int(static_cast< int >(0x8B5C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLER_1D", SWIG_From_int(static_cast< int >(0x8B5D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLER_2D", SWIG_From_int(static_cast< int >(0x8B5E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLER_3D", SWIG_From_int(static_cast< int >(0x8B5F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLER_CUBE", SWIG_From_int(static_cast< int >(0x8B60)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLER_1D_SHADOW", SWIG_From_int(static_cast< int >(0x8B61)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SAMPLER_2D_SHADOW", SWIG_From_int(static_cast< int >(0x8B62)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SHADING_LANGUAGE_VERSION", SWIG_From_int(static_cast< int >(0x8B8C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_SHADER", SWIG_From_int(static_cast< int >(0x8B31)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_VERTEX_UNIFORM_COMPONENTS", SWIG_From_int(static_cast< int >(0x8B4A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_VARYING_FLOATS", SWIG_From_int(static_cast< int >(0x8B4B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS", SWIG_From_int(static_cast< int >(0x8B4C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS", SWIG_From_int(static_cast< int >(0x8B4D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACTIVE_ATTRIBUTES", SWIG_From_int(static_cast< int >(0x8B89)));
  SWIG_Tcl_SetConstantObj(interp, "GL_ACTIVE_ATTRIBUTE_MAX_LENGTH", SWIG_From_int(static_cast< int >(0x8B8A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FRAGMENT_SHADER", SWIG_From_int(static_cast< int >(0x8B30)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_FRAGMENT_UNIFORM_COMPONENTS", SWIG_From_int(static_cast< int >(0x8B49)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FRAGMENT_SHADER_DERIVATIVE_HINT", SWIG_From_int(static_cast< int >(0x8B8B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_VERTEX_ATTRIBS", SWIG_From_int(static_cast< int >(0x8869)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ATTRIB_ARRAY_ENABLED", SWIG_From_int(static_cast< int >(0x8622)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ATTRIB_ARRAY_SIZE", SWIG_From_int(static_cast< int >(0x8623)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ATTRIB_ARRAY_STRIDE", SWIG_From_int(static_cast< int >(0x8624)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ATTRIB_ARRAY_TYPE", SWIG_From_int(static_cast< int >(0x8625)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ATTRIB_ARRAY_NORMALIZED", SWIG_From_int(static_cast< int >(0x886A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_VERTEX_ATTRIB", SWIG_From_int(static_cast< int >(0x8626)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_ATTRIB_ARRAY_POINTER", SWIG_From_int(static_cast< int >(0x8645)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_PROGRAM_POINT_SIZE", SWIG_From_int(static_cast< int >(0x8642)));
  SWIG_Tcl_SetConstantObj(interp, "GL_VERTEX_PROGRAM_TWO_SIDE", SWIG_From_int(static_cast< int >(0x8643)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_TEXTURE_COORDS", SWIG_From_int(static_cast< int >(0x8871)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_TEXTURE_IMAGE_UNITS", SWIG_From_int(static_cast< int >(0x8872)));
  SWIG_Tcl_SetConstantObj(interp, "GL_MAX_DRAW_BUFFERS", SWIG_From_int(static_cast< int >(0x8824)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER0", SWIG_From_int(static_cast< int >(0x8825)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER1", SWIG_From_int(static_cast< int >(0x8826)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER2", SWIG_From_int(static_cast< int >(0x8827)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER3", SWIG_From_int(static_cast< int >(0x8828)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER4", SWIG_From_int(static_cast< int >(0x8829)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER5", SWIG_From_int(static_cast< int >(0x882A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER6", SWIG_From_int(static_cast< int >(0x882B)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER7", SWIG_From_int(static_cast< int >(0x882C)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER8", SWIG_From_int(static_cast< int >(0x882D)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER9", SWIG_From_int(static_cast< int >(0x882E)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER10", SWIG_From_int(static_cast< int >(0x882F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER11", SWIG_From_int(static_cast< int >(0x8830)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER12", SWIG_From_int(static_cast< int >(0x8831)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER13", SWIG_From_int(static_cast< int >(0x8832)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER14", SWIG_From_int(static_cast< int >(0x8833)));
  SWIG_Tcl_SetConstantObj(interp, "GL_DRAW_BUFFER15", SWIG_From_int(static_cast< int >(0x8834)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SPRITE", SWIG_From_int(static_cast< int >(0x8861)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COORD_REPLACE", SWIG_From_int(static_cast< int >(0x8862)));
  SWIG_Tcl_SetConstantObj(interp, "GL_POINT_SPRITE_COORD_ORIGIN", SWIG_From_int(static_cast< int >(0x8CA0)));
  SWIG_Tcl_SetConstantObj(interp, "GL_LOWER_LEFT", SWIG_From_int(static_cast< int >(0x8CA1)));
  SWIG_Tcl_SetConstantObj(interp, "GL_UPPER_LEFT", SWIG_From_int(static_cast< int >(0x8CA2)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BACK_FUNC", SWIG_From_int(static_cast< int >(0x8800)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BACK_VALUE_MASK", SWIG_From_int(static_cast< int >(0x8CA4)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BACK_REF", SWIG_From_int(static_cast< int >(0x8CA3)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BACK_FAIL", SWIG_From_int(static_cast< int >(0x8801)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BACK_PASS_DEPTH_FAIL", SWIG_From_int(static_cast< int >(0x8802)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BACK_PASS_DEPTH_PASS", SWIG_From_int(static_cast< int >(0x8803)));
  SWIG_Tcl_SetConstantObj(interp, "GL_STENCIL_BACK_WRITEMASK", SWIG_From_int(static_cast< int >(0x8CA5)));
  SWIG_Tcl_SetConstantObj(interp, "GL_CURRENT_RASTER_SECONDARY_COLOR", SWIG_From_int(static_cast< int >(0x845F)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_PACK_BUFFER", SWIG_From_int(static_cast< int >(0x88EB)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_UNPACK_BUFFER", SWIG_From_int(static_cast< int >(0x88EC)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_PACK_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x88ED)));
  SWIG_Tcl_SetConstantObj(interp, "GL_PIXEL_UNPACK_BUFFER_BINDING", SWIG_From_int(static_cast< int >(0x88EF)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT2x3", SWIG_From_int(static_cast< int >(0x8B65)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT2x4", SWIG_From_int(static_cast< int >(0x8B66)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT3x2", SWIG_From_int(static_cast< int >(0x8B67)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT3x4", SWIG_From_int(static_cast< int >(0x8B68)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT4x2", SWIG_From_int(static_cast< int >(0x8B69)));
  SWIG_Tcl_SetConstantObj(interp, "GL_FLOAT_MAT4x3", SWIG_From_int(static_cast< int >(0x8B6A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRGB", SWIG_From_int(static_cast< int >(0x8C40)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRGB8", SWIG_From_int(static_cast< int >(0x8C41)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRGB_ALPHA", SWIG_From_int(static_cast< int >(0x8C42)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SRGB8_ALPHA8", SWIG_From_int(static_cast< int >(0x8C43)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SLUMINANCE_ALPHA", SWIG_From_int(static_cast< int >(0x8C44)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SLUMINANCE8_ALPHA8", SWIG_From_int(static_cast< int >(0x8C45)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SLUMINANCE", SWIG_From_int(static_cast< int >(0x8C46)));
  SWIG_Tcl_SetConstantObj(interp, "GL_SLUMINANCE8", SWIG_From_int(static_cast< int >(0x8C47)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_SRGB", SWIG_From_int(static_cast< int >(0x8C48)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_SRGB_ALPHA", SWIG_From_int(static_cast< int >(0x8C49)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_SLUMINANCE", SWIG_From_int(static_cast< int >(0x8C4A)));
  SWIG_Tcl_SetConstantObj(interp, "GL_COMPRESSED_SLUMINANCE_ALPHA", SWIG_From_int(static_cast< int >(0x8C4B)));
  return TCL_OK;
}
SWIGEXPORT int Gl_SafeInit(Tcl_Interp *interp) {
  return SWIG_init(interp);
}

