# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.11
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_gl')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_gl')
    _gl = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_gl', [dirname(__file__)])
        except ImportError:
            import _gl
            return _gl
        try:
            _mod = imp.load_module('_gl', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _gl = swig_import_helper()
    del swig_import_helper
else:
    import _gl
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0


def newfv4(a, b, c, d):
    """newfv4(GLfloat a, GLfloat b, GLfloat c, GLfloat d) -> GLfloat *"""
    return _gl.newfv4(a, b, c, d)

def delfv(m):
    """delfv(void * m)"""
    return _gl.delfv(m)
GL_VERSION_1_1 = _gl.GL_VERSION_1_1
GL_VERSION_1_2 = _gl.GL_VERSION_1_2
GL_VERSION_1_3 = _gl.GL_VERSION_1_3
GL_VERSION_1_4 = _gl.GL_VERSION_1_4
GL_VERSION_1_5 = _gl.GL_VERSION_1_5
GL_VERSION_2_0 = _gl.GL_VERSION_2_0
GL_VERSION_2_1 = _gl.GL_VERSION_2_1
GL_ACCUM = _gl.GL_ACCUM
GL_LOAD = _gl.GL_LOAD
GL_RETURN = _gl.GL_RETURN
GL_MULT = _gl.GL_MULT
GL_ADD = _gl.GL_ADD
GL_NEVER = _gl.GL_NEVER
GL_LESS = _gl.GL_LESS
GL_EQUAL = _gl.GL_EQUAL
GL_LEQUAL = _gl.GL_LEQUAL
GL_GREATER = _gl.GL_GREATER
GL_NOTEQUAL = _gl.GL_NOTEQUAL
GL_GEQUAL = _gl.GL_GEQUAL
GL_ALWAYS = _gl.GL_ALWAYS
GL_CURRENT_BIT = _gl.GL_CURRENT_BIT
GL_POINT_BIT = _gl.GL_POINT_BIT
GL_LINE_BIT = _gl.GL_LINE_BIT
GL_POLYGON_BIT = _gl.GL_POLYGON_BIT
GL_POLYGON_STIPPLE_BIT = _gl.GL_POLYGON_STIPPLE_BIT
GL_PIXEL_MODE_BIT = _gl.GL_PIXEL_MODE_BIT
GL_LIGHTING_BIT = _gl.GL_LIGHTING_BIT
GL_FOG_BIT = _gl.GL_FOG_BIT
GL_DEPTH_BUFFER_BIT = _gl.GL_DEPTH_BUFFER_BIT
GL_ACCUM_BUFFER_BIT = _gl.GL_ACCUM_BUFFER_BIT
GL_STENCIL_BUFFER_BIT = _gl.GL_STENCIL_BUFFER_BIT
GL_VIEWPORT_BIT = _gl.GL_VIEWPORT_BIT
GL_TRANSFORM_BIT = _gl.GL_TRANSFORM_BIT
GL_ENABLE_BIT = _gl.GL_ENABLE_BIT
GL_COLOR_BUFFER_BIT = _gl.GL_COLOR_BUFFER_BIT
GL_HINT_BIT = _gl.GL_HINT_BIT
GL_EVAL_BIT = _gl.GL_EVAL_BIT
GL_LIST_BIT = _gl.GL_LIST_BIT
GL_TEXTURE_BIT = _gl.GL_TEXTURE_BIT
GL_SCISSOR_BIT = _gl.GL_SCISSOR_BIT
GL_ALL_ATTRIB_BITS = _gl.GL_ALL_ATTRIB_BITS
GL_POINTS = _gl.GL_POINTS
GL_LINES = _gl.GL_LINES
GL_LINE_LOOP = _gl.GL_LINE_LOOP
GL_LINE_STRIP = _gl.GL_LINE_STRIP
GL_TRIANGLES = _gl.GL_TRIANGLES
GL_TRIANGLE_STRIP = _gl.GL_TRIANGLE_STRIP
GL_TRIANGLE_FAN = _gl.GL_TRIANGLE_FAN
GL_QUADS = _gl.GL_QUADS
GL_QUAD_STRIP = _gl.GL_QUAD_STRIP
GL_POLYGON = _gl.GL_POLYGON
GL_ZERO = _gl.GL_ZERO
GL_ONE = _gl.GL_ONE
GL_SRC_COLOR = _gl.GL_SRC_COLOR
GL_ONE_MINUS_SRC_COLOR = _gl.GL_ONE_MINUS_SRC_COLOR
GL_SRC_ALPHA = _gl.GL_SRC_ALPHA
GL_ONE_MINUS_SRC_ALPHA = _gl.GL_ONE_MINUS_SRC_ALPHA
GL_DST_ALPHA = _gl.GL_DST_ALPHA
GL_ONE_MINUS_DST_ALPHA = _gl.GL_ONE_MINUS_DST_ALPHA
GL_DST_COLOR = _gl.GL_DST_COLOR
GL_ONE_MINUS_DST_COLOR = _gl.GL_ONE_MINUS_DST_COLOR
GL_SRC_ALPHA_SATURATE = _gl.GL_SRC_ALPHA_SATURATE
GL_TRUE = _gl.GL_TRUE
GL_FALSE = _gl.GL_FALSE
GL_CLIP_PLANE0 = _gl.GL_CLIP_PLANE0
GL_CLIP_PLANE1 = _gl.GL_CLIP_PLANE1
GL_CLIP_PLANE2 = _gl.GL_CLIP_PLANE2
GL_CLIP_PLANE3 = _gl.GL_CLIP_PLANE3
GL_CLIP_PLANE4 = _gl.GL_CLIP_PLANE4
GL_CLIP_PLANE5 = _gl.GL_CLIP_PLANE5
GL_BYTE = _gl.GL_BYTE
GL_UNSIGNED_BYTE = _gl.GL_UNSIGNED_BYTE
GL_SHORT = _gl.GL_SHORT
GL_UNSIGNED_SHORT = _gl.GL_UNSIGNED_SHORT
GL_INT = _gl.GL_INT
GL_UNSIGNED_INT = _gl.GL_UNSIGNED_INT
GL_FLOAT = _gl.GL_FLOAT
GL_2_BYTES = _gl.GL_2_BYTES
GL_3_BYTES = _gl.GL_3_BYTES
GL_4_BYTES = _gl.GL_4_BYTES
GL_DOUBLE = _gl.GL_DOUBLE
GL_NONE = _gl.GL_NONE
GL_FRONT_LEFT = _gl.GL_FRONT_LEFT
GL_FRONT_RIGHT = _gl.GL_FRONT_RIGHT
GL_BACK_LEFT = _gl.GL_BACK_LEFT
GL_BACK_RIGHT = _gl.GL_BACK_RIGHT
GL_FRONT = _gl.GL_FRONT
GL_BACK = _gl.GL_BACK
GL_LEFT = _gl.GL_LEFT
GL_RIGHT = _gl.GL_RIGHT
GL_FRONT_AND_BACK = _gl.GL_FRONT_AND_BACK
GL_AUX0 = _gl.GL_AUX0
GL_AUX1 = _gl.GL_AUX1
GL_AUX2 = _gl.GL_AUX2
GL_AUX3 = _gl.GL_AUX3
GL_NO_ERROR = _gl.GL_NO_ERROR
GL_INVALID_ENUM = _gl.GL_INVALID_ENUM
GL_INVALID_VALUE = _gl.GL_INVALID_VALUE
GL_INVALID_OPERATION = _gl.GL_INVALID_OPERATION
GL_STACK_OVERFLOW = _gl.GL_STACK_OVERFLOW
GL_STACK_UNDERFLOW = _gl.GL_STACK_UNDERFLOW
GL_OUT_OF_MEMORY = _gl.GL_OUT_OF_MEMORY
GL_2D = _gl.GL_2D
GL_3D = _gl.GL_3D
GL_3D_COLOR = _gl.GL_3D_COLOR
GL_3D_COLOR_TEXTURE = _gl.GL_3D_COLOR_TEXTURE
GL_4D_COLOR_TEXTURE = _gl.GL_4D_COLOR_TEXTURE
GL_PASS_THROUGH_TOKEN = _gl.GL_PASS_THROUGH_TOKEN
GL_POINT_TOKEN = _gl.GL_POINT_TOKEN
GL_LINE_TOKEN = _gl.GL_LINE_TOKEN
GL_POLYGON_TOKEN = _gl.GL_POLYGON_TOKEN
GL_BITMAP_TOKEN = _gl.GL_BITMAP_TOKEN
GL_DRAW_PIXEL_TOKEN = _gl.GL_DRAW_PIXEL_TOKEN
GL_COPY_PIXEL_TOKEN = _gl.GL_COPY_PIXEL_TOKEN
GL_LINE_RESET_TOKEN = _gl.GL_LINE_RESET_TOKEN
GL_EXP = _gl.GL_EXP
GL_EXP2 = _gl.GL_EXP2
GL_CW = _gl.GL_CW
GL_CCW = _gl.GL_CCW
GL_COEFF = _gl.GL_COEFF
GL_ORDER = _gl.GL_ORDER
GL_DOMAIN = _gl.GL_DOMAIN
GL_CURRENT_COLOR = _gl.GL_CURRENT_COLOR
GL_CURRENT_INDEX = _gl.GL_CURRENT_INDEX
GL_CURRENT_NORMAL = _gl.GL_CURRENT_NORMAL
GL_CURRENT_TEXTURE_COORDS = _gl.GL_CURRENT_TEXTURE_COORDS
GL_CURRENT_RASTER_COLOR = _gl.GL_CURRENT_RASTER_COLOR
GL_CURRENT_RASTER_INDEX = _gl.GL_CURRENT_RASTER_INDEX
GL_CURRENT_RASTER_TEXTURE_COORDS = _gl.GL_CURRENT_RASTER_TEXTURE_COORDS
GL_CURRENT_RASTER_POSITION = _gl.GL_CURRENT_RASTER_POSITION
GL_CURRENT_RASTER_POSITION_VALID = _gl.GL_CURRENT_RASTER_POSITION_VALID
GL_CURRENT_RASTER_DISTANCE = _gl.GL_CURRENT_RASTER_DISTANCE
GL_POINT_SMOOTH = _gl.GL_POINT_SMOOTH
GL_POINT_SIZE = _gl.GL_POINT_SIZE
GL_POINT_SIZE_RANGE = _gl.GL_POINT_SIZE_RANGE
GL_POINT_SIZE_GRANULARITY = _gl.GL_POINT_SIZE_GRANULARITY
GL_LINE_SMOOTH = _gl.GL_LINE_SMOOTH
GL_LINE_WIDTH = _gl.GL_LINE_WIDTH
GL_LINE_WIDTH_RANGE = _gl.GL_LINE_WIDTH_RANGE
GL_LINE_WIDTH_GRANULARITY = _gl.GL_LINE_WIDTH_GRANULARITY
GL_LINE_STIPPLE = _gl.GL_LINE_STIPPLE
GL_LINE_STIPPLE_PATTERN = _gl.GL_LINE_STIPPLE_PATTERN
GL_LINE_STIPPLE_REPEAT = _gl.GL_LINE_STIPPLE_REPEAT
GL_LIST_MODE = _gl.GL_LIST_MODE
GL_MAX_LIST_NESTING = _gl.GL_MAX_LIST_NESTING
GL_LIST_BASE = _gl.GL_LIST_BASE
GL_LIST_INDEX = _gl.GL_LIST_INDEX
GL_POLYGON_MODE = _gl.GL_POLYGON_MODE
GL_POLYGON_SMOOTH = _gl.GL_POLYGON_SMOOTH
GL_POLYGON_STIPPLE = _gl.GL_POLYGON_STIPPLE
GL_EDGE_FLAG = _gl.GL_EDGE_FLAG
GL_CULL_FACE = _gl.GL_CULL_FACE
GL_CULL_FACE_MODE = _gl.GL_CULL_FACE_MODE
GL_FRONT_FACE = _gl.GL_FRONT_FACE
GL_LIGHTING = _gl.GL_LIGHTING
GL_LIGHT_MODEL_LOCAL_VIEWER = _gl.GL_LIGHT_MODEL_LOCAL_VIEWER
GL_LIGHT_MODEL_TWO_SIDE = _gl.GL_LIGHT_MODEL_TWO_SIDE
GL_LIGHT_MODEL_AMBIENT = _gl.GL_LIGHT_MODEL_AMBIENT
GL_SHADE_MODEL = _gl.GL_SHADE_MODEL
GL_COLOR_MATERIAL_FACE = _gl.GL_COLOR_MATERIAL_FACE
GL_COLOR_MATERIAL_PARAMETER = _gl.GL_COLOR_MATERIAL_PARAMETER
GL_COLOR_MATERIAL = _gl.GL_COLOR_MATERIAL
GL_FOG = _gl.GL_FOG
GL_FOG_INDEX = _gl.GL_FOG_INDEX
GL_FOG_DENSITY = _gl.GL_FOG_DENSITY
GL_FOG_START = _gl.GL_FOG_START
GL_FOG_END = _gl.GL_FOG_END
GL_FOG_MODE = _gl.GL_FOG_MODE
GL_FOG_COLOR = _gl.GL_FOG_COLOR
GL_DEPTH_RANGE = _gl.GL_DEPTH_RANGE
GL_DEPTH_TEST = _gl.GL_DEPTH_TEST
GL_DEPTH_WRITEMASK = _gl.GL_DEPTH_WRITEMASK
GL_DEPTH_CLEAR_VALUE = _gl.GL_DEPTH_CLEAR_VALUE
GL_DEPTH_FUNC = _gl.GL_DEPTH_FUNC
GL_ACCUM_CLEAR_VALUE = _gl.GL_ACCUM_CLEAR_VALUE
GL_STENCIL_TEST = _gl.GL_STENCIL_TEST
GL_STENCIL_CLEAR_VALUE = _gl.GL_STENCIL_CLEAR_VALUE
GL_STENCIL_FUNC = _gl.GL_STENCIL_FUNC
GL_STENCIL_VALUE_MASK = _gl.GL_STENCIL_VALUE_MASK
GL_STENCIL_FAIL = _gl.GL_STENCIL_FAIL
GL_STENCIL_PASS_DEPTH_FAIL = _gl.GL_STENCIL_PASS_DEPTH_FAIL
GL_STENCIL_PASS_DEPTH_PASS = _gl.GL_STENCIL_PASS_DEPTH_PASS
GL_STENCIL_REF = _gl.GL_STENCIL_REF
GL_STENCIL_WRITEMASK = _gl.GL_STENCIL_WRITEMASK
GL_MATRIX_MODE = _gl.GL_MATRIX_MODE
GL_NORMALIZE = _gl.GL_NORMALIZE
GL_VIEWPORT = _gl.GL_VIEWPORT
GL_MODELVIEW_STACK_DEPTH = _gl.GL_MODELVIEW_STACK_DEPTH
GL_PROJECTION_STACK_DEPTH = _gl.GL_PROJECTION_STACK_DEPTH
GL_TEXTURE_STACK_DEPTH = _gl.GL_TEXTURE_STACK_DEPTH
GL_MODELVIEW_MATRIX = _gl.GL_MODELVIEW_MATRIX
GL_PROJECTION_MATRIX = _gl.GL_PROJECTION_MATRIX
GL_TEXTURE_MATRIX = _gl.GL_TEXTURE_MATRIX
GL_ATTRIB_STACK_DEPTH = _gl.GL_ATTRIB_STACK_DEPTH
GL_CLIENT_ATTRIB_STACK_DEPTH = _gl.GL_CLIENT_ATTRIB_STACK_DEPTH
GL_ALPHA_TEST = _gl.GL_ALPHA_TEST
GL_ALPHA_TEST_FUNC = _gl.GL_ALPHA_TEST_FUNC
GL_ALPHA_TEST_REF = _gl.GL_ALPHA_TEST_REF
GL_DITHER = _gl.GL_DITHER
GL_BLEND_DST = _gl.GL_BLEND_DST
GL_BLEND_SRC = _gl.GL_BLEND_SRC
GL_BLEND = _gl.GL_BLEND
GL_LOGIC_OP_MODE = _gl.GL_LOGIC_OP_MODE
GL_INDEX_LOGIC_OP = _gl.GL_INDEX_LOGIC_OP
GL_COLOR_LOGIC_OP = _gl.GL_COLOR_LOGIC_OP
GL_AUX_BUFFERS = _gl.GL_AUX_BUFFERS
GL_DRAW_BUFFER = _gl.GL_DRAW_BUFFER
GL_READ_BUFFER = _gl.GL_READ_BUFFER
GL_SCISSOR_BOX = _gl.GL_SCISSOR_BOX
GL_SCISSOR_TEST = _gl.GL_SCISSOR_TEST
GL_INDEX_CLEAR_VALUE = _gl.GL_INDEX_CLEAR_VALUE
GL_INDEX_WRITEMASK = _gl.GL_INDEX_WRITEMASK
GL_COLOR_CLEAR_VALUE = _gl.GL_COLOR_CLEAR_VALUE
GL_COLOR_WRITEMASK = _gl.GL_COLOR_WRITEMASK
GL_INDEX_MODE = _gl.GL_INDEX_MODE
GL_RGBA_MODE = _gl.GL_RGBA_MODE
GL_DOUBLEBUFFER = _gl.GL_DOUBLEBUFFER
GL_STEREO = _gl.GL_STEREO
GL_RENDER_MODE = _gl.GL_RENDER_MODE
GL_PERSPECTIVE_CORRECTION_HINT = _gl.GL_PERSPECTIVE_CORRECTION_HINT
GL_POINT_SMOOTH_HINT = _gl.GL_POINT_SMOOTH_HINT
GL_LINE_SMOOTH_HINT = _gl.GL_LINE_SMOOTH_HINT
GL_POLYGON_SMOOTH_HINT = _gl.GL_POLYGON_SMOOTH_HINT
GL_FOG_HINT = _gl.GL_FOG_HINT
GL_TEXTURE_GEN_S = _gl.GL_TEXTURE_GEN_S
GL_TEXTURE_GEN_T = _gl.GL_TEXTURE_GEN_T
GL_TEXTURE_GEN_R = _gl.GL_TEXTURE_GEN_R
GL_TEXTURE_GEN_Q = _gl.GL_TEXTURE_GEN_Q
GL_PIXEL_MAP_I_TO_I = _gl.GL_PIXEL_MAP_I_TO_I
GL_PIXEL_MAP_S_TO_S = _gl.GL_PIXEL_MAP_S_TO_S
GL_PIXEL_MAP_I_TO_R = _gl.GL_PIXEL_MAP_I_TO_R
GL_PIXEL_MAP_I_TO_G = _gl.GL_PIXEL_MAP_I_TO_G
GL_PIXEL_MAP_I_TO_B = _gl.GL_PIXEL_MAP_I_TO_B
GL_PIXEL_MAP_I_TO_A = _gl.GL_PIXEL_MAP_I_TO_A
GL_PIXEL_MAP_R_TO_R = _gl.GL_PIXEL_MAP_R_TO_R
GL_PIXEL_MAP_G_TO_G = _gl.GL_PIXEL_MAP_G_TO_G
GL_PIXEL_MAP_B_TO_B = _gl.GL_PIXEL_MAP_B_TO_B
GL_PIXEL_MAP_A_TO_A = _gl.GL_PIXEL_MAP_A_TO_A
GL_PIXEL_MAP_I_TO_I_SIZE = _gl.GL_PIXEL_MAP_I_TO_I_SIZE
GL_PIXEL_MAP_S_TO_S_SIZE = _gl.GL_PIXEL_MAP_S_TO_S_SIZE
GL_PIXEL_MAP_I_TO_R_SIZE = _gl.GL_PIXEL_MAP_I_TO_R_SIZE
GL_PIXEL_MAP_I_TO_G_SIZE = _gl.GL_PIXEL_MAP_I_TO_G_SIZE
GL_PIXEL_MAP_I_TO_B_SIZE = _gl.GL_PIXEL_MAP_I_TO_B_SIZE
GL_PIXEL_MAP_I_TO_A_SIZE = _gl.GL_PIXEL_MAP_I_TO_A_SIZE
GL_PIXEL_MAP_R_TO_R_SIZE = _gl.GL_PIXEL_MAP_R_TO_R_SIZE
GL_PIXEL_MAP_G_TO_G_SIZE = _gl.GL_PIXEL_MAP_G_TO_G_SIZE
GL_PIXEL_MAP_B_TO_B_SIZE = _gl.GL_PIXEL_MAP_B_TO_B_SIZE
GL_PIXEL_MAP_A_TO_A_SIZE = _gl.GL_PIXEL_MAP_A_TO_A_SIZE
GL_UNPACK_SWAP_BYTES = _gl.GL_UNPACK_SWAP_BYTES
GL_UNPACK_LSB_FIRST = _gl.GL_UNPACK_LSB_FIRST
GL_UNPACK_ROW_LENGTH = _gl.GL_UNPACK_ROW_LENGTH
GL_UNPACK_SKIP_ROWS = _gl.GL_UNPACK_SKIP_ROWS
GL_UNPACK_SKIP_PIXELS = _gl.GL_UNPACK_SKIP_PIXELS
GL_UNPACK_ALIGNMENT = _gl.GL_UNPACK_ALIGNMENT
GL_PACK_SWAP_BYTES = _gl.GL_PACK_SWAP_BYTES
GL_PACK_LSB_FIRST = _gl.GL_PACK_LSB_FIRST
GL_PACK_ROW_LENGTH = _gl.GL_PACK_ROW_LENGTH
GL_PACK_SKIP_ROWS = _gl.GL_PACK_SKIP_ROWS
GL_PACK_SKIP_PIXELS = _gl.GL_PACK_SKIP_PIXELS
GL_PACK_ALIGNMENT = _gl.GL_PACK_ALIGNMENT
GL_MAP_COLOR = _gl.GL_MAP_COLOR
GL_MAP_STENCIL = _gl.GL_MAP_STENCIL
GL_INDEX_SHIFT = _gl.GL_INDEX_SHIFT
GL_INDEX_OFFSET = _gl.GL_INDEX_OFFSET
GL_RED_SCALE = _gl.GL_RED_SCALE
GL_RED_BIAS = _gl.GL_RED_BIAS
GL_ZOOM_X = _gl.GL_ZOOM_X
GL_ZOOM_Y = _gl.GL_ZOOM_Y
GL_GREEN_SCALE = _gl.GL_GREEN_SCALE
GL_GREEN_BIAS = _gl.GL_GREEN_BIAS
GL_BLUE_SCALE = _gl.GL_BLUE_SCALE
GL_BLUE_BIAS = _gl.GL_BLUE_BIAS
GL_ALPHA_SCALE = _gl.GL_ALPHA_SCALE
GL_ALPHA_BIAS = _gl.GL_ALPHA_BIAS
GL_DEPTH_SCALE = _gl.GL_DEPTH_SCALE
GL_DEPTH_BIAS = _gl.GL_DEPTH_BIAS
GL_MAX_EVAL_ORDER = _gl.GL_MAX_EVAL_ORDER
GL_MAX_LIGHTS = _gl.GL_MAX_LIGHTS
GL_MAX_CLIP_PLANES = _gl.GL_MAX_CLIP_PLANES
GL_MAX_TEXTURE_SIZE = _gl.GL_MAX_TEXTURE_SIZE
GL_MAX_PIXEL_MAP_TABLE = _gl.GL_MAX_PIXEL_MAP_TABLE
GL_MAX_ATTRIB_STACK_DEPTH = _gl.GL_MAX_ATTRIB_STACK_DEPTH
GL_MAX_MODELVIEW_STACK_DEPTH = _gl.GL_MAX_MODELVIEW_STACK_DEPTH
GL_MAX_NAME_STACK_DEPTH = _gl.GL_MAX_NAME_STACK_DEPTH
GL_MAX_PROJECTION_STACK_DEPTH = _gl.GL_MAX_PROJECTION_STACK_DEPTH
GL_MAX_TEXTURE_STACK_DEPTH = _gl.GL_MAX_TEXTURE_STACK_DEPTH
GL_MAX_VIEWPORT_DIMS = _gl.GL_MAX_VIEWPORT_DIMS
GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = _gl.GL_MAX_CLIENT_ATTRIB_STACK_DEPTH
GL_SUBPIXEL_BITS = _gl.GL_SUBPIXEL_BITS
GL_INDEX_BITS = _gl.GL_INDEX_BITS
GL_RED_BITS = _gl.GL_RED_BITS
GL_GREEN_BITS = _gl.GL_GREEN_BITS
GL_BLUE_BITS = _gl.GL_BLUE_BITS
GL_ALPHA_BITS = _gl.GL_ALPHA_BITS
GL_DEPTH_BITS = _gl.GL_DEPTH_BITS
GL_STENCIL_BITS = _gl.GL_STENCIL_BITS
GL_ACCUM_RED_BITS = _gl.GL_ACCUM_RED_BITS
GL_ACCUM_GREEN_BITS = _gl.GL_ACCUM_GREEN_BITS
GL_ACCUM_BLUE_BITS = _gl.GL_ACCUM_BLUE_BITS
GL_ACCUM_ALPHA_BITS = _gl.GL_ACCUM_ALPHA_BITS
GL_NAME_STACK_DEPTH = _gl.GL_NAME_STACK_DEPTH
GL_AUTO_NORMAL = _gl.GL_AUTO_NORMAL
GL_MAP1_COLOR_4 = _gl.GL_MAP1_COLOR_4
GL_MAP1_INDEX = _gl.GL_MAP1_INDEX
GL_MAP1_NORMAL = _gl.GL_MAP1_NORMAL
GL_MAP1_TEXTURE_COORD_1 = _gl.GL_MAP1_TEXTURE_COORD_1
GL_MAP1_TEXTURE_COORD_2 = _gl.GL_MAP1_TEXTURE_COORD_2
GL_MAP1_TEXTURE_COORD_3 = _gl.GL_MAP1_TEXTURE_COORD_3
GL_MAP1_TEXTURE_COORD_4 = _gl.GL_MAP1_TEXTURE_COORD_4
GL_MAP1_VERTEX_3 = _gl.GL_MAP1_VERTEX_3
GL_MAP1_VERTEX_4 = _gl.GL_MAP1_VERTEX_4
GL_MAP2_COLOR_4 = _gl.GL_MAP2_COLOR_4
GL_MAP2_INDEX = _gl.GL_MAP2_INDEX
GL_MAP2_NORMAL = _gl.GL_MAP2_NORMAL
GL_MAP2_TEXTURE_COORD_1 = _gl.GL_MAP2_TEXTURE_COORD_1
GL_MAP2_TEXTURE_COORD_2 = _gl.GL_MAP2_TEXTURE_COORD_2
GL_MAP2_TEXTURE_COORD_3 = _gl.GL_MAP2_TEXTURE_COORD_3
GL_MAP2_TEXTURE_COORD_4 = _gl.GL_MAP2_TEXTURE_COORD_4
GL_MAP2_VERTEX_3 = _gl.GL_MAP2_VERTEX_3
GL_MAP2_VERTEX_4 = _gl.GL_MAP2_VERTEX_4
GL_MAP1_GRID_DOMAIN = _gl.GL_MAP1_GRID_DOMAIN
GL_MAP1_GRID_SEGMENTS = _gl.GL_MAP1_GRID_SEGMENTS
GL_MAP2_GRID_DOMAIN = _gl.GL_MAP2_GRID_DOMAIN
GL_MAP2_GRID_SEGMENTS = _gl.GL_MAP2_GRID_SEGMENTS
GL_TEXTURE_1D = _gl.GL_TEXTURE_1D
GL_TEXTURE_2D = _gl.GL_TEXTURE_2D
GL_FEEDBACK_BUFFER_POINTER = _gl.GL_FEEDBACK_BUFFER_POINTER
GL_FEEDBACK_BUFFER_SIZE = _gl.GL_FEEDBACK_BUFFER_SIZE
GL_FEEDBACK_BUFFER_TYPE = _gl.GL_FEEDBACK_BUFFER_TYPE
GL_SELECTION_BUFFER_POINTER = _gl.GL_SELECTION_BUFFER_POINTER
GL_SELECTION_BUFFER_SIZE = _gl.GL_SELECTION_BUFFER_SIZE
GL_TEXTURE_WIDTH = _gl.GL_TEXTURE_WIDTH
GL_TEXTURE_HEIGHT = _gl.GL_TEXTURE_HEIGHT
GL_TEXTURE_INTERNAL_FORMAT = _gl.GL_TEXTURE_INTERNAL_FORMAT
GL_TEXTURE_BORDER_COLOR = _gl.GL_TEXTURE_BORDER_COLOR
GL_TEXTURE_BORDER = _gl.GL_TEXTURE_BORDER
GL_DONT_CARE = _gl.GL_DONT_CARE
GL_FASTEST = _gl.GL_FASTEST
GL_NICEST = _gl.GL_NICEST
GL_LIGHT0 = _gl.GL_LIGHT0
GL_LIGHT1 = _gl.GL_LIGHT1
GL_LIGHT2 = _gl.GL_LIGHT2
GL_LIGHT3 = _gl.GL_LIGHT3
GL_LIGHT4 = _gl.GL_LIGHT4
GL_LIGHT5 = _gl.GL_LIGHT5
GL_LIGHT6 = _gl.GL_LIGHT6
GL_LIGHT7 = _gl.GL_LIGHT7
GL_AMBIENT = _gl.GL_AMBIENT
GL_DIFFUSE = _gl.GL_DIFFUSE
GL_SPECULAR = _gl.GL_SPECULAR
GL_POSITION = _gl.GL_POSITION
GL_SPOT_DIRECTION = _gl.GL_SPOT_DIRECTION
GL_SPOT_EXPONENT = _gl.GL_SPOT_EXPONENT
GL_SPOT_CUTOFF = _gl.GL_SPOT_CUTOFF
GL_CONSTANT_ATTENUATION = _gl.GL_CONSTANT_ATTENUATION
GL_LINEAR_ATTENUATION = _gl.GL_LINEAR_ATTENUATION
GL_QUADRATIC_ATTENUATION = _gl.GL_QUADRATIC_ATTENUATION
GL_COMPILE = _gl.GL_COMPILE
GL_COMPILE_AND_EXECUTE = _gl.GL_COMPILE_AND_EXECUTE
GL_CLEAR = _gl.GL_CLEAR
GL_AND = _gl.GL_AND
GL_AND_REVERSE = _gl.GL_AND_REVERSE
GL_COPY = _gl.GL_COPY
GL_AND_INVERTED = _gl.GL_AND_INVERTED
GL_NOOP = _gl.GL_NOOP
GL_XOR = _gl.GL_XOR
GL_OR = _gl.GL_OR
GL_NOR = _gl.GL_NOR
GL_EQUIV = _gl.GL_EQUIV
GL_INVERT = _gl.GL_INVERT
GL_OR_REVERSE = _gl.GL_OR_REVERSE
GL_COPY_INVERTED = _gl.GL_COPY_INVERTED
GL_OR_INVERTED = _gl.GL_OR_INVERTED
GL_NAND = _gl.GL_NAND
GL_SET = _gl.GL_SET
GL_EMISSION = _gl.GL_EMISSION
GL_SHININESS = _gl.GL_SHININESS
GL_AMBIENT_AND_DIFFUSE = _gl.GL_AMBIENT_AND_DIFFUSE
GL_COLOR_INDEXES = _gl.GL_COLOR_INDEXES
GL_MODELVIEW = _gl.GL_MODELVIEW
GL_PROJECTION = _gl.GL_PROJECTION
GL_TEXTURE = _gl.GL_TEXTURE
GL_COLOR = _gl.GL_COLOR
GL_DEPTH = _gl.GL_DEPTH
GL_STENCIL = _gl.GL_STENCIL
GL_COLOR_INDEX = _gl.GL_COLOR_INDEX
GL_STENCIL_INDEX = _gl.GL_STENCIL_INDEX
GL_DEPTH_COMPONENT = _gl.GL_DEPTH_COMPONENT
GL_RED = _gl.GL_RED
GL_GREEN = _gl.GL_GREEN
GL_BLUE = _gl.GL_BLUE
GL_ALPHA = _gl.GL_ALPHA
GL_RGB = _gl.GL_RGB
GL_RGBA = _gl.GL_RGBA
GL_LUMINANCE = _gl.GL_LUMINANCE
GL_LUMINANCE_ALPHA = _gl.GL_LUMINANCE_ALPHA
GL_BITMAP = _gl.GL_BITMAP
GL_POINT = _gl.GL_POINT
GL_LINE = _gl.GL_LINE
GL_FILL = _gl.GL_FILL
GL_RENDER = _gl.GL_RENDER
GL_FEEDBACK = _gl.GL_FEEDBACK
GL_SELECT = _gl.GL_SELECT
GL_FLAT = _gl.GL_FLAT
GL_SMOOTH = _gl.GL_SMOOTH
GL_KEEP = _gl.GL_KEEP
GL_REPLACE = _gl.GL_REPLACE
GL_INCR = _gl.GL_INCR
GL_DECR = _gl.GL_DECR
GL_VENDOR = _gl.GL_VENDOR
GL_RENDERER = _gl.GL_RENDERER
GL_VERSION = _gl.GL_VERSION
GL_EXTENSIONS = _gl.GL_EXTENSIONS
GL_S = _gl.GL_S
GL_T = _gl.GL_T
GL_R = _gl.GL_R
GL_Q = _gl.GL_Q
GL_MODULATE = _gl.GL_MODULATE
GL_DECAL = _gl.GL_DECAL
GL_TEXTURE_ENV_MODE = _gl.GL_TEXTURE_ENV_MODE
GL_TEXTURE_ENV_COLOR = _gl.GL_TEXTURE_ENV_COLOR
GL_TEXTURE_ENV = _gl.GL_TEXTURE_ENV
GL_EYE_LINEAR = _gl.GL_EYE_LINEAR
GL_OBJECT_LINEAR = _gl.GL_OBJECT_LINEAR
GL_SPHERE_MAP = _gl.GL_SPHERE_MAP
GL_TEXTURE_GEN_MODE = _gl.GL_TEXTURE_GEN_MODE
GL_OBJECT_PLANE = _gl.GL_OBJECT_PLANE
GL_EYE_PLANE = _gl.GL_EYE_PLANE
GL_NEAREST = _gl.GL_NEAREST
GL_LINEAR = _gl.GL_LINEAR
GL_NEAREST_MIPMAP_NEAREST = _gl.GL_NEAREST_MIPMAP_NEAREST
GL_LINEAR_MIPMAP_NEAREST = _gl.GL_LINEAR_MIPMAP_NEAREST
GL_NEAREST_MIPMAP_LINEAR = _gl.GL_NEAREST_MIPMAP_LINEAR
GL_LINEAR_MIPMAP_LINEAR = _gl.GL_LINEAR_MIPMAP_LINEAR
GL_TEXTURE_MAG_FILTER = _gl.GL_TEXTURE_MAG_FILTER
GL_TEXTURE_MIN_FILTER = _gl.GL_TEXTURE_MIN_FILTER
GL_TEXTURE_WRAP_S = _gl.GL_TEXTURE_WRAP_S
GL_TEXTURE_WRAP_T = _gl.GL_TEXTURE_WRAP_T
GL_CLAMP = _gl.GL_CLAMP
GL_REPEAT = _gl.GL_REPEAT
GL_CLIENT_PIXEL_STORE_BIT = _gl.GL_CLIENT_PIXEL_STORE_BIT
GL_CLIENT_VERTEX_ARRAY_BIT = _gl.GL_CLIENT_VERTEX_ARRAY_BIT
GL_CLIENT_ALL_ATTRIB_BITS = _gl.GL_CLIENT_ALL_ATTRIB_BITS
GL_POLYGON_OFFSET_FACTOR = _gl.GL_POLYGON_OFFSET_FACTOR
GL_POLYGON_OFFSET_UNITS = _gl.GL_POLYGON_OFFSET_UNITS
GL_POLYGON_OFFSET_POINT = _gl.GL_POLYGON_OFFSET_POINT
GL_POLYGON_OFFSET_LINE = _gl.GL_POLYGON_OFFSET_LINE
GL_POLYGON_OFFSET_FILL = _gl.GL_POLYGON_OFFSET_FILL
GL_ALPHA4 = _gl.GL_ALPHA4
GL_ALPHA8 = _gl.GL_ALPHA8
GL_ALPHA12 = _gl.GL_ALPHA12
GL_ALPHA16 = _gl.GL_ALPHA16
GL_LUMINANCE4 = _gl.GL_LUMINANCE4
GL_LUMINANCE8 = _gl.GL_LUMINANCE8
GL_LUMINANCE12 = _gl.GL_LUMINANCE12
GL_LUMINANCE16 = _gl.GL_LUMINANCE16
GL_LUMINANCE4_ALPHA4 = _gl.GL_LUMINANCE4_ALPHA4
GL_LUMINANCE6_ALPHA2 = _gl.GL_LUMINANCE6_ALPHA2
GL_LUMINANCE8_ALPHA8 = _gl.GL_LUMINANCE8_ALPHA8
GL_LUMINANCE12_ALPHA4 = _gl.GL_LUMINANCE12_ALPHA4
GL_LUMINANCE12_ALPHA12 = _gl.GL_LUMINANCE12_ALPHA12
GL_LUMINANCE16_ALPHA16 = _gl.GL_LUMINANCE16_ALPHA16
GL_INTENSITY = _gl.GL_INTENSITY
GL_INTENSITY4 = _gl.GL_INTENSITY4
GL_INTENSITY8 = _gl.GL_INTENSITY8
GL_INTENSITY12 = _gl.GL_INTENSITY12
GL_INTENSITY16 = _gl.GL_INTENSITY16
GL_R3_G3_B2 = _gl.GL_R3_G3_B2
GL_RGB4 = _gl.GL_RGB4
GL_RGB5 = _gl.GL_RGB5
GL_RGB8 = _gl.GL_RGB8
GL_RGB10 = _gl.GL_RGB10
GL_RGB12 = _gl.GL_RGB12
GL_RGB16 = _gl.GL_RGB16
GL_RGBA2 = _gl.GL_RGBA2
GL_RGBA4 = _gl.GL_RGBA4
GL_RGB5_A1 = _gl.GL_RGB5_A1
GL_RGBA8 = _gl.GL_RGBA8
GL_RGB10_A2 = _gl.GL_RGB10_A2
GL_RGBA12 = _gl.GL_RGBA12
GL_RGBA16 = _gl.GL_RGBA16
GL_TEXTURE_RED_SIZE = _gl.GL_TEXTURE_RED_SIZE
GL_TEXTURE_GREEN_SIZE = _gl.GL_TEXTURE_GREEN_SIZE
GL_TEXTURE_BLUE_SIZE = _gl.GL_TEXTURE_BLUE_SIZE
GL_TEXTURE_ALPHA_SIZE = _gl.GL_TEXTURE_ALPHA_SIZE
GL_TEXTURE_LUMINANCE_SIZE = _gl.GL_TEXTURE_LUMINANCE_SIZE
GL_TEXTURE_INTENSITY_SIZE = _gl.GL_TEXTURE_INTENSITY_SIZE
GL_PROXY_TEXTURE_1D = _gl.GL_PROXY_TEXTURE_1D
GL_PROXY_TEXTURE_2D = _gl.GL_PROXY_TEXTURE_2D
GL_TEXTURE_PRIORITY = _gl.GL_TEXTURE_PRIORITY
GL_TEXTURE_RESIDENT = _gl.GL_TEXTURE_RESIDENT
GL_TEXTURE_BINDING_1D = _gl.GL_TEXTURE_BINDING_1D
GL_TEXTURE_BINDING_2D = _gl.GL_TEXTURE_BINDING_2D
GL_TEXTURE_BINDING_3D = _gl.GL_TEXTURE_BINDING_3D
GL_VERTEX_ARRAY = _gl.GL_VERTEX_ARRAY
GL_NORMAL_ARRAY = _gl.GL_NORMAL_ARRAY
GL_COLOR_ARRAY = _gl.GL_COLOR_ARRAY
GL_INDEX_ARRAY = _gl.GL_INDEX_ARRAY
GL_TEXTURE_COORD_ARRAY = _gl.GL_TEXTURE_COORD_ARRAY
GL_EDGE_FLAG_ARRAY = _gl.GL_EDGE_FLAG_ARRAY
GL_VERTEX_ARRAY_SIZE = _gl.GL_VERTEX_ARRAY_SIZE
GL_VERTEX_ARRAY_TYPE = _gl.GL_VERTEX_ARRAY_TYPE
GL_VERTEX_ARRAY_STRIDE = _gl.GL_VERTEX_ARRAY_STRIDE
GL_NORMAL_ARRAY_TYPE = _gl.GL_NORMAL_ARRAY_TYPE
GL_NORMAL_ARRAY_STRIDE = _gl.GL_NORMAL_ARRAY_STRIDE
GL_COLOR_ARRAY_SIZE = _gl.GL_COLOR_ARRAY_SIZE
GL_COLOR_ARRAY_TYPE = _gl.GL_COLOR_ARRAY_TYPE
GL_COLOR_ARRAY_STRIDE = _gl.GL_COLOR_ARRAY_STRIDE
GL_INDEX_ARRAY_TYPE = _gl.GL_INDEX_ARRAY_TYPE
GL_INDEX_ARRAY_STRIDE = _gl.GL_INDEX_ARRAY_STRIDE
GL_TEXTURE_COORD_ARRAY_SIZE = _gl.GL_TEXTURE_COORD_ARRAY_SIZE
GL_TEXTURE_COORD_ARRAY_TYPE = _gl.GL_TEXTURE_COORD_ARRAY_TYPE
GL_TEXTURE_COORD_ARRAY_STRIDE = _gl.GL_TEXTURE_COORD_ARRAY_STRIDE
GL_EDGE_FLAG_ARRAY_STRIDE = _gl.GL_EDGE_FLAG_ARRAY_STRIDE
GL_VERTEX_ARRAY_POINTER = _gl.GL_VERTEX_ARRAY_POINTER
GL_NORMAL_ARRAY_POINTER = _gl.GL_NORMAL_ARRAY_POINTER
GL_COLOR_ARRAY_POINTER = _gl.GL_COLOR_ARRAY_POINTER
GL_INDEX_ARRAY_POINTER = _gl.GL_INDEX_ARRAY_POINTER
GL_TEXTURE_COORD_ARRAY_POINTER = _gl.GL_TEXTURE_COORD_ARRAY_POINTER
GL_EDGE_FLAG_ARRAY_POINTER = _gl.GL_EDGE_FLAG_ARRAY_POINTER
GL_V2F = _gl.GL_V2F
GL_V3F = _gl.GL_V3F
GL_C4UB_V2F = _gl.GL_C4UB_V2F
GL_C4UB_V3F = _gl.GL_C4UB_V3F
GL_C3F_V3F = _gl.GL_C3F_V3F
GL_N3F_V3F = _gl.GL_N3F_V3F
GL_C4F_N3F_V3F = _gl.GL_C4F_N3F_V3F
GL_T2F_V3F = _gl.GL_T2F_V3F
GL_T4F_V4F = _gl.GL_T4F_V4F
GL_T2F_C4UB_V3F = _gl.GL_T2F_C4UB_V3F
GL_T2F_C3F_V3F = _gl.GL_T2F_C3F_V3F
GL_T2F_N3F_V3F = _gl.GL_T2F_N3F_V3F
GL_T2F_C4F_N3F_V3F = _gl.GL_T2F_C4F_N3F_V3F
GL_T4F_C4F_N3F_V4F = _gl.GL_T4F_C4F_N3F_V4F
GL_BGR = _gl.GL_BGR
GL_BGRA = _gl.GL_BGRA
GL_CONSTANT_COLOR = _gl.GL_CONSTANT_COLOR
GL_ONE_MINUS_CONSTANT_COLOR = _gl.GL_ONE_MINUS_CONSTANT_COLOR
GL_CONSTANT_ALPHA = _gl.GL_CONSTANT_ALPHA
GL_ONE_MINUS_CONSTANT_ALPHA = _gl.GL_ONE_MINUS_CONSTANT_ALPHA
GL_BLEND_COLOR = _gl.GL_BLEND_COLOR
GL_FUNC_ADD = _gl.GL_FUNC_ADD
GL_MIN = _gl.GL_MIN
GL_MAX = _gl.GL_MAX
GL_BLEND_EQUATION = _gl.GL_BLEND_EQUATION
GL_BLEND_EQUATION_RGB = _gl.GL_BLEND_EQUATION_RGB
GL_BLEND_EQUATION_ALPHA = _gl.GL_BLEND_EQUATION_ALPHA
GL_FUNC_SUBTRACT = _gl.GL_FUNC_SUBTRACT
GL_FUNC_REVERSE_SUBTRACT = _gl.GL_FUNC_REVERSE_SUBTRACT
GL_COLOR_MATRIX = _gl.GL_COLOR_MATRIX
GL_COLOR_MATRIX_STACK_DEPTH = _gl.GL_COLOR_MATRIX_STACK_DEPTH
GL_MAX_COLOR_MATRIX_STACK_DEPTH = _gl.GL_MAX_COLOR_MATRIX_STACK_DEPTH
GL_POST_COLOR_MATRIX_RED_SCALE = _gl.GL_POST_COLOR_MATRIX_RED_SCALE
GL_POST_COLOR_MATRIX_GREEN_SCALE = _gl.GL_POST_COLOR_MATRIX_GREEN_SCALE
GL_POST_COLOR_MATRIX_BLUE_SCALE = _gl.GL_POST_COLOR_MATRIX_BLUE_SCALE
GL_POST_COLOR_MATRIX_ALPHA_SCALE = _gl.GL_POST_COLOR_MATRIX_ALPHA_SCALE
GL_POST_COLOR_MATRIX_RED_BIAS = _gl.GL_POST_COLOR_MATRIX_RED_BIAS
GL_POST_COLOR_MATRIX_GREEN_BIAS = _gl.GL_POST_COLOR_MATRIX_GREEN_BIAS
GL_POST_COLOR_MATRIX_BLUE_BIAS = _gl.GL_POST_COLOR_MATRIX_BLUE_BIAS
GL_POST_COLOR_MATRIX_ALPHA_BIAS = _gl.GL_POST_COLOR_MATRIX_ALPHA_BIAS
GL_COLOR_TABLE = _gl.GL_COLOR_TABLE
GL_POST_CONVOLUTION_COLOR_TABLE = _gl.GL_POST_CONVOLUTION_COLOR_TABLE
GL_POST_COLOR_MATRIX_COLOR_TABLE = _gl.GL_POST_COLOR_MATRIX_COLOR_TABLE
GL_PROXY_COLOR_TABLE = _gl.GL_PROXY_COLOR_TABLE
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE = _gl.GL_PROXY_POST_CONVOLUTION_COLOR_TABLE
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE = _gl.GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE
GL_COLOR_TABLE_SCALE = _gl.GL_COLOR_TABLE_SCALE
GL_COLOR_TABLE_BIAS = _gl.GL_COLOR_TABLE_BIAS
GL_COLOR_TABLE_FORMAT = _gl.GL_COLOR_TABLE_FORMAT
GL_COLOR_TABLE_WIDTH = _gl.GL_COLOR_TABLE_WIDTH
GL_COLOR_TABLE_RED_SIZE = _gl.GL_COLOR_TABLE_RED_SIZE
GL_COLOR_TABLE_GREEN_SIZE = _gl.GL_COLOR_TABLE_GREEN_SIZE
GL_COLOR_TABLE_BLUE_SIZE = _gl.GL_COLOR_TABLE_BLUE_SIZE
GL_COLOR_TABLE_ALPHA_SIZE = _gl.GL_COLOR_TABLE_ALPHA_SIZE
GL_COLOR_TABLE_LUMINANCE_SIZE = _gl.GL_COLOR_TABLE_LUMINANCE_SIZE
GL_COLOR_TABLE_INTENSITY_SIZE = _gl.GL_COLOR_TABLE_INTENSITY_SIZE
GL_CONVOLUTION_1D = _gl.GL_CONVOLUTION_1D
GL_CONVOLUTION_2D = _gl.GL_CONVOLUTION_2D
GL_SEPARABLE_2D = _gl.GL_SEPARABLE_2D
GL_CONVOLUTION_BORDER_MODE = _gl.GL_CONVOLUTION_BORDER_MODE
GL_CONVOLUTION_FILTER_SCALE = _gl.GL_CONVOLUTION_FILTER_SCALE
GL_CONVOLUTION_FILTER_BIAS = _gl.GL_CONVOLUTION_FILTER_BIAS
GL_REDUCE = _gl.GL_REDUCE
GL_CONVOLUTION_FORMAT = _gl.GL_CONVOLUTION_FORMAT
GL_CONVOLUTION_WIDTH = _gl.GL_CONVOLUTION_WIDTH
GL_CONVOLUTION_HEIGHT = _gl.GL_CONVOLUTION_HEIGHT
GL_MAX_CONVOLUTION_WIDTH = _gl.GL_MAX_CONVOLUTION_WIDTH
GL_MAX_CONVOLUTION_HEIGHT = _gl.GL_MAX_CONVOLUTION_HEIGHT
GL_POST_CONVOLUTION_RED_SCALE = _gl.GL_POST_CONVOLUTION_RED_SCALE
GL_POST_CONVOLUTION_GREEN_SCALE = _gl.GL_POST_CONVOLUTION_GREEN_SCALE
GL_POST_CONVOLUTION_BLUE_SCALE = _gl.GL_POST_CONVOLUTION_BLUE_SCALE
GL_POST_CONVOLUTION_ALPHA_SCALE = _gl.GL_POST_CONVOLUTION_ALPHA_SCALE
GL_POST_CONVOLUTION_RED_BIAS = _gl.GL_POST_CONVOLUTION_RED_BIAS
GL_POST_CONVOLUTION_GREEN_BIAS = _gl.GL_POST_CONVOLUTION_GREEN_BIAS
GL_POST_CONVOLUTION_BLUE_BIAS = _gl.GL_POST_CONVOLUTION_BLUE_BIAS
GL_POST_CONVOLUTION_ALPHA_BIAS = _gl.GL_POST_CONVOLUTION_ALPHA_BIAS
GL_CONSTANT_BORDER = _gl.GL_CONSTANT_BORDER
GL_REPLICATE_BORDER = _gl.GL_REPLICATE_BORDER
GL_CONVOLUTION_BORDER_COLOR = _gl.GL_CONVOLUTION_BORDER_COLOR
GL_MAX_ELEMENTS_VERTICES = _gl.GL_MAX_ELEMENTS_VERTICES
GL_MAX_ELEMENTS_INDICES = _gl.GL_MAX_ELEMENTS_INDICES
GL_HISTOGRAM = _gl.GL_HISTOGRAM
GL_PROXY_HISTOGRAM = _gl.GL_PROXY_HISTOGRAM
GL_HISTOGRAM_WIDTH = _gl.GL_HISTOGRAM_WIDTH
GL_HISTOGRAM_FORMAT = _gl.GL_HISTOGRAM_FORMAT
GL_HISTOGRAM_RED_SIZE = _gl.GL_HISTOGRAM_RED_SIZE
GL_HISTOGRAM_GREEN_SIZE = _gl.GL_HISTOGRAM_GREEN_SIZE
GL_HISTOGRAM_BLUE_SIZE = _gl.GL_HISTOGRAM_BLUE_SIZE
GL_HISTOGRAM_ALPHA_SIZE = _gl.GL_HISTOGRAM_ALPHA_SIZE
GL_HISTOGRAM_LUMINANCE_SIZE = _gl.GL_HISTOGRAM_LUMINANCE_SIZE
GL_HISTOGRAM_SINK = _gl.GL_HISTOGRAM_SINK
GL_MINMAX = _gl.GL_MINMAX
GL_MINMAX_FORMAT = _gl.GL_MINMAX_FORMAT
GL_MINMAX_SINK = _gl.GL_MINMAX_SINK
GL_TABLE_TOO_LARGE = _gl.GL_TABLE_TOO_LARGE
GL_UNSIGNED_BYTE_3_3_2 = _gl.GL_UNSIGNED_BYTE_3_3_2
GL_UNSIGNED_SHORT_4_4_4_4 = _gl.GL_UNSIGNED_SHORT_4_4_4_4
GL_UNSIGNED_SHORT_5_5_5_1 = _gl.GL_UNSIGNED_SHORT_5_5_5_1
GL_UNSIGNED_INT_8_8_8_8 = _gl.GL_UNSIGNED_INT_8_8_8_8
GL_UNSIGNED_INT_10_10_10_2 = _gl.GL_UNSIGNED_INT_10_10_10_2
GL_UNSIGNED_BYTE_2_3_3_REV = _gl.GL_UNSIGNED_BYTE_2_3_3_REV
GL_UNSIGNED_SHORT_5_6_5 = _gl.GL_UNSIGNED_SHORT_5_6_5
GL_UNSIGNED_SHORT_5_6_5_REV = _gl.GL_UNSIGNED_SHORT_5_6_5_REV
GL_UNSIGNED_SHORT_4_4_4_4_REV = _gl.GL_UNSIGNED_SHORT_4_4_4_4_REV
GL_UNSIGNED_SHORT_1_5_5_5_REV = _gl.GL_UNSIGNED_SHORT_1_5_5_5_REV
GL_UNSIGNED_INT_8_8_8_8_REV = _gl.GL_UNSIGNED_INT_8_8_8_8_REV
GL_UNSIGNED_INT_2_10_10_10_REV = _gl.GL_UNSIGNED_INT_2_10_10_10_REV
GL_RESCALE_NORMAL = _gl.GL_RESCALE_NORMAL
GL_LIGHT_MODEL_COLOR_CONTROL = _gl.GL_LIGHT_MODEL_COLOR_CONTROL
GL_SINGLE_COLOR = _gl.GL_SINGLE_COLOR
GL_SEPARATE_SPECULAR_COLOR = _gl.GL_SEPARATE_SPECULAR_COLOR
GL_PACK_SKIP_IMAGES = _gl.GL_PACK_SKIP_IMAGES
GL_PACK_IMAGE_HEIGHT = _gl.GL_PACK_IMAGE_HEIGHT
GL_UNPACK_SKIP_IMAGES = _gl.GL_UNPACK_SKIP_IMAGES
GL_UNPACK_IMAGE_HEIGHT = _gl.GL_UNPACK_IMAGE_HEIGHT
GL_TEXTURE_3D = _gl.GL_TEXTURE_3D
GL_PROXY_TEXTURE_3D = _gl.GL_PROXY_TEXTURE_3D
GL_TEXTURE_DEPTH = _gl.GL_TEXTURE_DEPTH
GL_TEXTURE_WRAP_R = _gl.GL_TEXTURE_WRAP_R
GL_MAX_3D_TEXTURE_SIZE = _gl.GL_MAX_3D_TEXTURE_SIZE
GL_CLAMP_TO_EDGE = _gl.GL_CLAMP_TO_EDGE
GL_CLAMP_TO_BORDER = _gl.GL_CLAMP_TO_BORDER
GL_TEXTURE_MIN_LOD = _gl.GL_TEXTURE_MIN_LOD
GL_TEXTURE_MAX_LOD = _gl.GL_TEXTURE_MAX_LOD
GL_TEXTURE_BASE_LEVEL = _gl.GL_TEXTURE_BASE_LEVEL
GL_TEXTURE_MAX_LEVEL = _gl.GL_TEXTURE_MAX_LEVEL
GL_SMOOTH_POINT_SIZE_RANGE = _gl.GL_SMOOTH_POINT_SIZE_RANGE
GL_SMOOTH_POINT_SIZE_GRANULARITY = _gl.GL_SMOOTH_POINT_SIZE_GRANULARITY
GL_SMOOTH_LINE_WIDTH_RANGE = _gl.GL_SMOOTH_LINE_WIDTH_RANGE
GL_SMOOTH_LINE_WIDTH_GRANULARITY = _gl.GL_SMOOTH_LINE_WIDTH_GRANULARITY
GL_ALIASED_POINT_SIZE_RANGE = _gl.GL_ALIASED_POINT_SIZE_RANGE
GL_ALIASED_LINE_WIDTH_RANGE = _gl.GL_ALIASED_LINE_WIDTH_RANGE
GL_TEXTURE0 = _gl.GL_TEXTURE0
GL_TEXTURE1 = _gl.GL_TEXTURE1
GL_TEXTURE2 = _gl.GL_TEXTURE2
GL_TEXTURE3 = _gl.GL_TEXTURE3
GL_TEXTURE4 = _gl.GL_TEXTURE4
GL_TEXTURE5 = _gl.GL_TEXTURE5
GL_TEXTURE6 = _gl.GL_TEXTURE6
GL_TEXTURE7 = _gl.GL_TEXTURE7
GL_TEXTURE8 = _gl.GL_TEXTURE8
GL_TEXTURE9 = _gl.GL_TEXTURE9
GL_TEXTURE10 = _gl.GL_TEXTURE10
GL_TEXTURE11 = _gl.GL_TEXTURE11
GL_TEXTURE12 = _gl.GL_TEXTURE12
GL_TEXTURE13 = _gl.GL_TEXTURE13
GL_TEXTURE14 = _gl.GL_TEXTURE14
GL_TEXTURE15 = _gl.GL_TEXTURE15
GL_TEXTURE16 = _gl.GL_TEXTURE16
GL_TEXTURE17 = _gl.GL_TEXTURE17
GL_TEXTURE18 = _gl.GL_TEXTURE18
GL_TEXTURE19 = _gl.GL_TEXTURE19
GL_TEXTURE20 = _gl.GL_TEXTURE20
GL_TEXTURE21 = _gl.GL_TEXTURE21
GL_TEXTURE22 = _gl.GL_TEXTURE22
GL_TEXTURE23 = _gl.GL_TEXTURE23
GL_TEXTURE24 = _gl.GL_TEXTURE24
GL_TEXTURE25 = _gl.GL_TEXTURE25
GL_TEXTURE26 = _gl.GL_TEXTURE26
GL_TEXTURE27 = _gl.GL_TEXTURE27
GL_TEXTURE28 = _gl.GL_TEXTURE28
GL_TEXTURE29 = _gl.GL_TEXTURE29
GL_TEXTURE30 = _gl.GL_TEXTURE30
GL_TEXTURE31 = _gl.GL_TEXTURE31
GL_ACTIVE_TEXTURE = _gl.GL_ACTIVE_TEXTURE
GL_CLIENT_ACTIVE_TEXTURE = _gl.GL_CLIENT_ACTIVE_TEXTURE
GL_MAX_TEXTURE_UNITS = _gl.GL_MAX_TEXTURE_UNITS
GL_COMBINE = _gl.GL_COMBINE
GL_COMBINE_RGB = _gl.GL_COMBINE_RGB
GL_COMBINE_ALPHA = _gl.GL_COMBINE_ALPHA
GL_RGB_SCALE = _gl.GL_RGB_SCALE
GL_ADD_SIGNED = _gl.GL_ADD_SIGNED
GL_INTERPOLATE = _gl.GL_INTERPOLATE
GL_CONSTANT = _gl.GL_CONSTANT
GL_PRIMARY_COLOR = _gl.GL_PRIMARY_COLOR
GL_PREVIOUS = _gl.GL_PREVIOUS
GL_SUBTRACT = _gl.GL_SUBTRACT
GL_SRC0_RGB = _gl.GL_SRC0_RGB
GL_SRC1_RGB = _gl.GL_SRC1_RGB
GL_SRC2_RGB = _gl.GL_SRC2_RGB
GL_SRC0_ALPHA = _gl.GL_SRC0_ALPHA
GL_SRC1_ALPHA = _gl.GL_SRC1_ALPHA
GL_SRC2_ALPHA = _gl.GL_SRC2_ALPHA
GL_SOURCE0_RGB = _gl.GL_SOURCE0_RGB
GL_SOURCE1_RGB = _gl.GL_SOURCE1_RGB
GL_SOURCE2_RGB = _gl.GL_SOURCE2_RGB
GL_SOURCE0_ALPHA = _gl.GL_SOURCE0_ALPHA
GL_SOURCE1_ALPHA = _gl.GL_SOURCE1_ALPHA
GL_SOURCE2_ALPHA = _gl.GL_SOURCE2_ALPHA
GL_OPERAND0_RGB = _gl.GL_OPERAND0_RGB
GL_OPERAND1_RGB = _gl.GL_OPERAND1_RGB
GL_OPERAND2_RGB = _gl.GL_OPERAND2_RGB
GL_OPERAND0_ALPHA = _gl.GL_OPERAND0_ALPHA
GL_OPERAND1_ALPHA = _gl.GL_OPERAND1_ALPHA
GL_OPERAND2_ALPHA = _gl.GL_OPERAND2_ALPHA
GL_DOT3_RGB = _gl.GL_DOT3_RGB
GL_DOT3_RGBA = _gl.GL_DOT3_RGBA
GL_TRANSPOSE_MODELVIEW_MATRIX = _gl.GL_TRANSPOSE_MODELVIEW_MATRIX
GL_TRANSPOSE_PROJECTION_MATRIX = _gl.GL_TRANSPOSE_PROJECTION_MATRIX
GL_TRANSPOSE_TEXTURE_MATRIX = _gl.GL_TRANSPOSE_TEXTURE_MATRIX
GL_TRANSPOSE_COLOR_MATRIX = _gl.GL_TRANSPOSE_COLOR_MATRIX
GL_NORMAL_MAP = _gl.GL_NORMAL_MAP
GL_REFLECTION_MAP = _gl.GL_REFLECTION_MAP
GL_TEXTURE_CUBE_MAP = _gl.GL_TEXTURE_CUBE_MAP
GL_TEXTURE_BINDING_CUBE_MAP = _gl.GL_TEXTURE_BINDING_CUBE_MAP
GL_TEXTURE_CUBE_MAP_POSITIVE_X = _gl.GL_TEXTURE_CUBE_MAP_POSITIVE_X
GL_TEXTURE_CUBE_MAP_NEGATIVE_X = _gl.GL_TEXTURE_CUBE_MAP_NEGATIVE_X
GL_TEXTURE_CUBE_MAP_POSITIVE_Y = _gl.GL_TEXTURE_CUBE_MAP_POSITIVE_Y
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = _gl.GL_TEXTURE_CUBE_MAP_NEGATIVE_Y
GL_TEXTURE_CUBE_MAP_POSITIVE_Z = _gl.GL_TEXTURE_CUBE_MAP_POSITIVE_Z
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = _gl.GL_TEXTURE_CUBE_MAP_NEGATIVE_Z
GL_PROXY_TEXTURE_CUBE_MAP = _gl.GL_PROXY_TEXTURE_CUBE_MAP
GL_MAX_CUBE_MAP_TEXTURE_SIZE = _gl.GL_MAX_CUBE_MAP_TEXTURE_SIZE
GL_COMPRESSED_ALPHA = _gl.GL_COMPRESSED_ALPHA
GL_COMPRESSED_LUMINANCE = _gl.GL_COMPRESSED_LUMINANCE
GL_COMPRESSED_LUMINANCE_ALPHA = _gl.GL_COMPRESSED_LUMINANCE_ALPHA
GL_COMPRESSED_INTENSITY = _gl.GL_COMPRESSED_INTENSITY
GL_COMPRESSED_RGB = _gl.GL_COMPRESSED_RGB
GL_COMPRESSED_RGBA = _gl.GL_COMPRESSED_RGBA
GL_TEXTURE_COMPRESSION_HINT = _gl.GL_TEXTURE_COMPRESSION_HINT
GL_TEXTURE_COMPRESSED_IMAGE_SIZE = _gl.GL_TEXTURE_COMPRESSED_IMAGE_SIZE
GL_TEXTURE_COMPRESSED = _gl.GL_TEXTURE_COMPRESSED
GL_NUM_COMPRESSED_TEXTURE_FORMATS = _gl.GL_NUM_COMPRESSED_TEXTURE_FORMATS
GL_COMPRESSED_TEXTURE_FORMATS = _gl.GL_COMPRESSED_TEXTURE_FORMATS
GL_MULTISAMPLE = _gl.GL_MULTISAMPLE
GL_SAMPLE_ALPHA_TO_COVERAGE = _gl.GL_SAMPLE_ALPHA_TO_COVERAGE
GL_SAMPLE_ALPHA_TO_ONE = _gl.GL_SAMPLE_ALPHA_TO_ONE
GL_SAMPLE_COVERAGE = _gl.GL_SAMPLE_COVERAGE
GL_SAMPLE_BUFFERS = _gl.GL_SAMPLE_BUFFERS
GL_SAMPLES = _gl.GL_SAMPLES
GL_SAMPLE_COVERAGE_VALUE = _gl.GL_SAMPLE_COVERAGE_VALUE
GL_SAMPLE_COVERAGE_INVERT = _gl.GL_SAMPLE_COVERAGE_INVERT
GL_MULTISAMPLE_BIT = _gl.GL_MULTISAMPLE_BIT
GL_DEPTH_COMPONENT16 = _gl.GL_DEPTH_COMPONENT16
GL_DEPTH_COMPONENT24 = _gl.GL_DEPTH_COMPONENT24
GL_DEPTH_COMPONENT32 = _gl.GL_DEPTH_COMPONENT32
GL_TEXTURE_DEPTH_SIZE = _gl.GL_TEXTURE_DEPTH_SIZE
GL_DEPTH_TEXTURE_MODE = _gl.GL_DEPTH_TEXTURE_MODE
GL_TEXTURE_COMPARE_MODE = _gl.GL_TEXTURE_COMPARE_MODE
GL_TEXTURE_COMPARE_FUNC = _gl.GL_TEXTURE_COMPARE_FUNC
GL_COMPARE_R_TO_TEXTURE = _gl.GL_COMPARE_R_TO_TEXTURE
GL_QUERY_COUNTER_BITS = _gl.GL_QUERY_COUNTER_BITS
GL_CURRENT_QUERY = _gl.GL_CURRENT_QUERY
GL_QUERY_RESULT = _gl.GL_QUERY_RESULT
GL_QUERY_RESULT_AVAILABLE = _gl.GL_QUERY_RESULT_AVAILABLE
GL_SAMPLES_PASSED = _gl.GL_SAMPLES_PASSED
GL_FOG_COORD_SRC = _gl.GL_FOG_COORD_SRC
GL_FOG_COORD = _gl.GL_FOG_COORD
GL_FRAGMENT_DEPTH = _gl.GL_FRAGMENT_DEPTH
GL_CURRENT_FOG_COORD = _gl.GL_CURRENT_FOG_COORD
GL_FOG_COORD_ARRAY_TYPE = _gl.GL_FOG_COORD_ARRAY_TYPE
GL_FOG_COORD_ARRAY_STRIDE = _gl.GL_FOG_COORD_ARRAY_STRIDE
GL_FOG_COORD_ARRAY_POINTER = _gl.GL_FOG_COORD_ARRAY_POINTER
GL_FOG_COORD_ARRAY = _gl.GL_FOG_COORD_ARRAY
GL_FOG_COORDINATE_SOURCE = _gl.GL_FOG_COORDINATE_SOURCE
GL_FOG_COORDINATE = _gl.GL_FOG_COORDINATE
GL_CURRENT_FOG_COORDINATE = _gl.GL_CURRENT_FOG_COORDINATE
GL_FOG_COORDINATE_ARRAY_TYPE = _gl.GL_FOG_COORDINATE_ARRAY_TYPE
GL_FOG_COORDINATE_ARRAY_STRIDE = _gl.GL_FOG_COORDINATE_ARRAY_STRIDE
GL_FOG_COORDINATE_ARRAY_POINTER = _gl.GL_FOG_COORDINATE_ARRAY_POINTER
GL_FOG_COORDINATE_ARRAY = _gl.GL_FOG_COORDINATE_ARRAY
GL_COLOR_SUM = _gl.GL_COLOR_SUM
GL_CURRENT_SECONDARY_COLOR = _gl.GL_CURRENT_SECONDARY_COLOR
GL_SECONDARY_COLOR_ARRAY_SIZE = _gl.GL_SECONDARY_COLOR_ARRAY_SIZE
GL_SECONDARY_COLOR_ARRAY_TYPE = _gl.GL_SECONDARY_COLOR_ARRAY_TYPE
GL_SECONDARY_COLOR_ARRAY_STRIDE = _gl.GL_SECONDARY_COLOR_ARRAY_STRIDE
GL_SECONDARY_COLOR_ARRAY_POINTER = _gl.GL_SECONDARY_COLOR_ARRAY_POINTER
GL_SECONDARY_COLOR_ARRAY = _gl.GL_SECONDARY_COLOR_ARRAY
GL_POINT_SIZE_MIN = _gl.GL_POINT_SIZE_MIN
GL_POINT_SIZE_MAX = _gl.GL_POINT_SIZE_MAX
GL_POINT_FADE_THRESHOLD_SIZE = _gl.GL_POINT_FADE_THRESHOLD_SIZE
GL_POINT_DISTANCE_ATTENUATION = _gl.GL_POINT_DISTANCE_ATTENUATION
GL_BLEND_DST_RGB = _gl.GL_BLEND_DST_RGB
GL_BLEND_SRC_RGB = _gl.GL_BLEND_SRC_RGB
GL_BLEND_DST_ALPHA = _gl.GL_BLEND_DST_ALPHA
GL_BLEND_SRC_ALPHA = _gl.GL_BLEND_SRC_ALPHA
GL_GENERATE_MIPMAP = _gl.GL_GENERATE_MIPMAP
GL_GENERATE_MIPMAP_HINT = _gl.GL_GENERATE_MIPMAP_HINT
GL_INCR_WRAP = _gl.GL_INCR_WRAP
GL_DECR_WRAP = _gl.GL_DECR_WRAP
GL_MIRRORED_REPEAT = _gl.GL_MIRRORED_REPEAT
GL_MAX_TEXTURE_LOD_BIAS = _gl.GL_MAX_TEXTURE_LOD_BIAS
GL_TEXTURE_FILTER_CONTROL = _gl.GL_TEXTURE_FILTER_CONTROL
GL_TEXTURE_LOD_BIAS = _gl.GL_TEXTURE_LOD_BIAS
GL_ARRAY_BUFFER = _gl.GL_ARRAY_BUFFER
GL_ELEMENT_ARRAY_BUFFER = _gl.GL_ELEMENT_ARRAY_BUFFER
GL_ARRAY_BUFFER_BINDING = _gl.GL_ARRAY_BUFFER_BINDING
GL_ELEMENT_ARRAY_BUFFER_BINDING = _gl.GL_ELEMENT_ARRAY_BUFFER_BINDING
GL_VERTEX_ARRAY_BUFFER_BINDING = _gl.GL_VERTEX_ARRAY_BUFFER_BINDING
GL_NORMAL_ARRAY_BUFFER_BINDING = _gl.GL_NORMAL_ARRAY_BUFFER_BINDING
GL_COLOR_ARRAY_BUFFER_BINDING = _gl.GL_COLOR_ARRAY_BUFFER_BINDING
GL_INDEX_ARRAY_BUFFER_BINDING = _gl.GL_INDEX_ARRAY_BUFFER_BINDING
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = _gl.GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = _gl.GL_EDGE_FLAG_ARRAY_BUFFER_BINDING
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = _gl.GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING
GL_FOG_COORD_ARRAY_BUFFER_BINDING = _gl.GL_FOG_COORD_ARRAY_BUFFER_BINDING
GL_WEIGHT_ARRAY_BUFFER_BINDING = _gl.GL_WEIGHT_ARRAY_BUFFER_BINDING
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = _gl.GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING
GL_STREAM_DRAW = _gl.GL_STREAM_DRAW
GL_STREAM_READ = _gl.GL_STREAM_READ
GL_STREAM_COPY = _gl.GL_STREAM_COPY
GL_STATIC_DRAW = _gl.GL_STATIC_DRAW
GL_STATIC_READ = _gl.GL_STATIC_READ
GL_STATIC_COPY = _gl.GL_STATIC_COPY
GL_DYNAMIC_DRAW = _gl.GL_DYNAMIC_DRAW
GL_DYNAMIC_READ = _gl.GL_DYNAMIC_READ
GL_DYNAMIC_COPY = _gl.GL_DYNAMIC_COPY
GL_READ_ONLY = _gl.GL_READ_ONLY
GL_WRITE_ONLY = _gl.GL_WRITE_ONLY
GL_READ_WRITE = _gl.GL_READ_WRITE
GL_BUFFER_SIZE = _gl.GL_BUFFER_SIZE
GL_BUFFER_USAGE = _gl.GL_BUFFER_USAGE
GL_BUFFER_ACCESS = _gl.GL_BUFFER_ACCESS
GL_BUFFER_MAPPED = _gl.GL_BUFFER_MAPPED
GL_BUFFER_MAP_POINTER = _gl.GL_BUFFER_MAP_POINTER
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = _gl.GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING
GL_CURRENT_PROGRAM = _gl.GL_CURRENT_PROGRAM
GL_SHADER_TYPE = _gl.GL_SHADER_TYPE
GL_DELETE_STATUS = _gl.GL_DELETE_STATUS
GL_COMPILE_STATUS = _gl.GL_COMPILE_STATUS
GL_LINK_STATUS = _gl.GL_LINK_STATUS
GL_VALIDATE_STATUS = _gl.GL_VALIDATE_STATUS
GL_INFO_LOG_LENGTH = _gl.GL_INFO_LOG_LENGTH
GL_ATTACHED_SHADERS = _gl.GL_ATTACHED_SHADERS
GL_ACTIVE_UNIFORMS = _gl.GL_ACTIVE_UNIFORMS
GL_ACTIVE_UNIFORM_MAX_LENGTH = _gl.GL_ACTIVE_UNIFORM_MAX_LENGTH
GL_SHADER_SOURCE_LENGTH = _gl.GL_SHADER_SOURCE_LENGTH
GL_FLOAT_VEC2 = _gl.GL_FLOAT_VEC2
GL_FLOAT_VEC3 = _gl.GL_FLOAT_VEC3
GL_FLOAT_VEC4 = _gl.GL_FLOAT_VEC4
GL_INT_VEC2 = _gl.GL_INT_VEC2
GL_INT_VEC3 = _gl.GL_INT_VEC3
GL_INT_VEC4 = _gl.GL_INT_VEC4
GL_BOOL = _gl.GL_BOOL
GL_BOOL_VEC2 = _gl.GL_BOOL_VEC2
GL_BOOL_VEC3 = _gl.GL_BOOL_VEC3
GL_BOOL_VEC4 = _gl.GL_BOOL_VEC4
GL_FLOAT_MAT2 = _gl.GL_FLOAT_MAT2
GL_FLOAT_MAT3 = _gl.GL_FLOAT_MAT3
GL_FLOAT_MAT4 = _gl.GL_FLOAT_MAT4
GL_SAMPLER_1D = _gl.GL_SAMPLER_1D
GL_SAMPLER_2D = _gl.GL_SAMPLER_2D
GL_SAMPLER_3D = _gl.GL_SAMPLER_3D
GL_SAMPLER_CUBE = _gl.GL_SAMPLER_CUBE
GL_SAMPLER_1D_SHADOW = _gl.GL_SAMPLER_1D_SHADOW
GL_SAMPLER_2D_SHADOW = _gl.GL_SAMPLER_2D_SHADOW
GL_SHADING_LANGUAGE_VERSION = _gl.GL_SHADING_LANGUAGE_VERSION
GL_VERTEX_SHADER = _gl.GL_VERTEX_SHADER
GL_MAX_VERTEX_UNIFORM_COMPONENTS = _gl.GL_MAX_VERTEX_UNIFORM_COMPONENTS
GL_MAX_VARYING_FLOATS = _gl.GL_MAX_VARYING_FLOATS
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = _gl.GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = _gl.GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS
GL_ACTIVE_ATTRIBUTES = _gl.GL_ACTIVE_ATTRIBUTES
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = _gl.GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
GL_FRAGMENT_SHADER = _gl.GL_FRAGMENT_SHADER
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = _gl.GL_MAX_FRAGMENT_UNIFORM_COMPONENTS
GL_FRAGMENT_SHADER_DERIVATIVE_HINT = _gl.GL_FRAGMENT_SHADER_DERIVATIVE_HINT
GL_MAX_VERTEX_ATTRIBS = _gl.GL_MAX_VERTEX_ATTRIBS
GL_VERTEX_ATTRIB_ARRAY_ENABLED = _gl.GL_VERTEX_ATTRIB_ARRAY_ENABLED
GL_VERTEX_ATTRIB_ARRAY_SIZE = _gl.GL_VERTEX_ATTRIB_ARRAY_SIZE
GL_VERTEX_ATTRIB_ARRAY_STRIDE = _gl.GL_VERTEX_ATTRIB_ARRAY_STRIDE
GL_VERTEX_ATTRIB_ARRAY_TYPE = _gl.GL_VERTEX_ATTRIB_ARRAY_TYPE
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = _gl.GL_VERTEX_ATTRIB_ARRAY_NORMALIZED
GL_CURRENT_VERTEX_ATTRIB = _gl.GL_CURRENT_VERTEX_ATTRIB
GL_VERTEX_ATTRIB_ARRAY_POINTER = _gl.GL_VERTEX_ATTRIB_ARRAY_POINTER
GL_VERTEX_PROGRAM_POINT_SIZE = _gl.GL_VERTEX_PROGRAM_POINT_SIZE
GL_VERTEX_PROGRAM_TWO_SIDE = _gl.GL_VERTEX_PROGRAM_TWO_SIDE
GL_MAX_TEXTURE_COORDS = _gl.GL_MAX_TEXTURE_COORDS
GL_MAX_TEXTURE_IMAGE_UNITS = _gl.GL_MAX_TEXTURE_IMAGE_UNITS
GL_MAX_DRAW_BUFFERS = _gl.GL_MAX_DRAW_BUFFERS
GL_DRAW_BUFFER0 = _gl.GL_DRAW_BUFFER0
GL_DRAW_BUFFER1 = _gl.GL_DRAW_BUFFER1
GL_DRAW_BUFFER2 = _gl.GL_DRAW_BUFFER2
GL_DRAW_BUFFER3 = _gl.GL_DRAW_BUFFER3
GL_DRAW_BUFFER4 = _gl.GL_DRAW_BUFFER4
GL_DRAW_BUFFER5 = _gl.GL_DRAW_BUFFER5
GL_DRAW_BUFFER6 = _gl.GL_DRAW_BUFFER6
GL_DRAW_BUFFER7 = _gl.GL_DRAW_BUFFER7
GL_DRAW_BUFFER8 = _gl.GL_DRAW_BUFFER8
GL_DRAW_BUFFER9 = _gl.GL_DRAW_BUFFER9
GL_DRAW_BUFFER10 = _gl.GL_DRAW_BUFFER10
GL_DRAW_BUFFER11 = _gl.GL_DRAW_BUFFER11
GL_DRAW_BUFFER12 = _gl.GL_DRAW_BUFFER12
GL_DRAW_BUFFER13 = _gl.GL_DRAW_BUFFER13
GL_DRAW_BUFFER14 = _gl.GL_DRAW_BUFFER14
GL_DRAW_BUFFER15 = _gl.GL_DRAW_BUFFER15
GL_POINT_SPRITE = _gl.GL_POINT_SPRITE
GL_COORD_REPLACE = _gl.GL_COORD_REPLACE
GL_POINT_SPRITE_COORD_ORIGIN = _gl.GL_POINT_SPRITE_COORD_ORIGIN
GL_LOWER_LEFT = _gl.GL_LOWER_LEFT
GL_UPPER_LEFT = _gl.GL_UPPER_LEFT
GL_STENCIL_BACK_FUNC = _gl.GL_STENCIL_BACK_FUNC
GL_STENCIL_BACK_VALUE_MASK = _gl.GL_STENCIL_BACK_VALUE_MASK
GL_STENCIL_BACK_REF = _gl.GL_STENCIL_BACK_REF
GL_STENCIL_BACK_FAIL = _gl.GL_STENCIL_BACK_FAIL
GL_STENCIL_BACK_PASS_DEPTH_FAIL = _gl.GL_STENCIL_BACK_PASS_DEPTH_FAIL
GL_STENCIL_BACK_PASS_DEPTH_PASS = _gl.GL_STENCIL_BACK_PASS_DEPTH_PASS
GL_STENCIL_BACK_WRITEMASK = _gl.GL_STENCIL_BACK_WRITEMASK
GL_CURRENT_RASTER_SECONDARY_COLOR = _gl.GL_CURRENT_RASTER_SECONDARY_COLOR
GL_PIXEL_PACK_BUFFER = _gl.GL_PIXEL_PACK_BUFFER
GL_PIXEL_UNPACK_BUFFER = _gl.GL_PIXEL_UNPACK_BUFFER
GL_PIXEL_PACK_BUFFER_BINDING = _gl.GL_PIXEL_PACK_BUFFER_BINDING
GL_PIXEL_UNPACK_BUFFER_BINDING = _gl.GL_PIXEL_UNPACK_BUFFER_BINDING
GL_FLOAT_MAT2x3 = _gl.GL_FLOAT_MAT2x3
GL_FLOAT_MAT2x4 = _gl.GL_FLOAT_MAT2x4
GL_FLOAT_MAT3x2 = _gl.GL_FLOAT_MAT3x2
GL_FLOAT_MAT3x4 = _gl.GL_FLOAT_MAT3x4
GL_FLOAT_MAT4x2 = _gl.GL_FLOAT_MAT4x2
GL_FLOAT_MAT4x3 = _gl.GL_FLOAT_MAT4x3
GL_SRGB = _gl.GL_SRGB
GL_SRGB8 = _gl.GL_SRGB8
GL_SRGB_ALPHA = _gl.GL_SRGB_ALPHA
GL_SRGB8_ALPHA8 = _gl.GL_SRGB8_ALPHA8
GL_SLUMINANCE_ALPHA = _gl.GL_SLUMINANCE_ALPHA
GL_SLUMINANCE8_ALPHA8 = _gl.GL_SLUMINANCE8_ALPHA8
GL_SLUMINANCE = _gl.GL_SLUMINANCE
GL_SLUMINANCE8 = _gl.GL_SLUMINANCE8
GL_COMPRESSED_SRGB = _gl.GL_COMPRESSED_SRGB
GL_COMPRESSED_SRGB_ALPHA = _gl.GL_COMPRESSED_SRGB_ALPHA
GL_COMPRESSED_SLUMINANCE = _gl.GL_COMPRESSED_SLUMINANCE
GL_COMPRESSED_SLUMINANCE_ALPHA = _gl.GL_COMPRESSED_SLUMINANCE_ALPHA

def glAccum(op, value):
    """glAccum(GLenum op, GLfloat value)"""
    return _gl.glAccum(op, value)

def glAlphaFunc(func, ref):
    """glAlphaFunc(GLenum func, GLclampf ref)"""
    return _gl.glAlphaFunc(func, ref)

def glAreTexturesResident(n, textures, residences):
    """glAreTexturesResident(GLsizei n, GLuint const * textures, GLboolean * residences) -> GLboolean"""
    return _gl.glAreTexturesResident(n, textures, residences)

def glArrayElement(i):
    """glArrayElement(GLint i)"""
    return _gl.glArrayElement(i)

def glBegin(mode):
    """glBegin(GLenum mode)"""
    return _gl.glBegin(mode)

def glBindTexture(target, texture):
    """glBindTexture(GLenum target, GLuint texture)"""
    return _gl.glBindTexture(target, texture)

def glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap):
    """glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, GLubyte const * bitmap)"""
    return _gl.glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap)

def glBlendColor(red, green, blue, alpha):
    """glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)"""
    return _gl.glBlendColor(red, green, blue, alpha)

def glBlendEquation(mode):
    """glBlendEquation(GLenum mode)"""
    return _gl.glBlendEquation(mode)

def glBlendEquationSeparate(modeRGB, modeAlpha):
    """glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)"""
    return _gl.glBlendEquationSeparate(modeRGB, modeAlpha)

def glBlendFunc(sfactor, dfactor):
    """glBlendFunc(GLenum sfactor, GLenum dfactor)"""
    return _gl.glBlendFunc(sfactor, dfactor)

def glCallList(list):
    """glCallList(GLuint list)"""
    return _gl.glCallList(list)

def glCallLists(n, type, lists):
    """glCallLists(GLsizei n, GLenum type, GLvoid const * lists)"""
    return _gl.glCallLists(n, type, lists)

def glClear(mask):
    """glClear(GLbitfield mask)"""
    return _gl.glClear(mask)

def glClearAccum(red, green, blue, alpha):
    """glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)"""
    return _gl.glClearAccum(red, green, blue, alpha)

def glClearColor(red, green, blue, alpha):
    """glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)"""
    return _gl.glClearColor(red, green, blue, alpha)

def glClearDepth(depth):
    """glClearDepth(GLclampd depth)"""
    return _gl.glClearDepth(depth)

def glClearIndex(c):
    """glClearIndex(GLfloat c)"""
    return _gl.glClearIndex(c)

def glClearStencil(s):
    """glClearStencil(GLint s)"""
    return _gl.glClearStencil(s)

def glClipPlane(plane, equation):
    """glClipPlane(GLenum plane, GLdouble const * equation)"""
    return _gl.glClipPlane(plane, equation)

def glColor3b(red, green, blue):
    """glColor3b(GLbyte red, GLbyte green, GLbyte blue)"""
    return _gl.glColor3b(red, green, blue)

def glColor3bv(v):
    """glColor3bv(GLbyte const * v)"""
    return _gl.glColor3bv(v)

def glColor3d(red, green, blue):
    """glColor3d(GLdouble red, GLdouble green, GLdouble blue)"""
    return _gl.glColor3d(red, green, blue)

def glColor3dv(v):
    """glColor3dv(GLdouble const * v)"""
    return _gl.glColor3dv(v)

def glColor3f(red, green, blue):
    """glColor3f(GLfloat red, GLfloat green, GLfloat blue)"""
    return _gl.glColor3f(red, green, blue)

def glColor3fv(v):
    """glColor3fv(GLfloat const * v)"""
    return _gl.glColor3fv(v)

def glColor3i(red, green, blue):
    """glColor3i(GLint red, GLint green, GLint blue)"""
    return _gl.glColor3i(red, green, blue)

def glColor3iv(v):
    """glColor3iv(GLint const * v)"""
    return _gl.glColor3iv(v)

def glColor3s(red, green, blue):
    """glColor3s(GLshort red, GLshort green, GLshort blue)"""
    return _gl.glColor3s(red, green, blue)

def glColor3sv(v):
    """glColor3sv(GLshort const * v)"""
    return _gl.glColor3sv(v)

def glColor3ub(red, green, blue):
    """glColor3ub(GLubyte red, GLubyte green, GLubyte blue)"""
    return _gl.glColor3ub(red, green, blue)

def glColor3ubv(v):
    """glColor3ubv(GLubyte const * v)"""
    return _gl.glColor3ubv(v)

def glColor3ui(red, green, blue):
    """glColor3ui(GLuint red, GLuint green, GLuint blue)"""
    return _gl.glColor3ui(red, green, blue)

def glColor3uiv(v):
    """glColor3uiv(GLuint const * v)"""
    return _gl.glColor3uiv(v)

def glColor3us(red, green, blue):
    """glColor3us(GLushort red, GLushort green, GLushort blue)"""
    return _gl.glColor3us(red, green, blue)

def glColor3usv(v):
    """glColor3usv(GLushort const * v)"""
    return _gl.glColor3usv(v)

def glColor4b(red, green, blue, alpha):
    """glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)"""
    return _gl.glColor4b(red, green, blue, alpha)

def glColor4bv(v):
    """glColor4bv(GLbyte const * v)"""
    return _gl.glColor4bv(v)

def glColor4d(red, green, blue, alpha):
    """glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)"""
    return _gl.glColor4d(red, green, blue, alpha)

def glColor4dv(v):
    """glColor4dv(GLdouble const * v)"""
    return _gl.glColor4dv(v)

def glColor4f(red, green, blue, alpha):
    """glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)"""
    return _gl.glColor4f(red, green, blue, alpha)

def glColor4fv(v):
    """glColor4fv(GLfloat const * v)"""
    return _gl.glColor4fv(v)

def glColor4i(red, green, blue, alpha):
    """glColor4i(GLint red, GLint green, GLint blue, GLint alpha)"""
    return _gl.glColor4i(red, green, blue, alpha)

def glColor4iv(v):
    """glColor4iv(GLint const * v)"""
    return _gl.glColor4iv(v)

def glColor4s(red, green, blue, alpha):
    """glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha)"""
    return _gl.glColor4s(red, green, blue, alpha)

def glColor4sv(v):
    """glColor4sv(GLshort const * v)"""
    return _gl.glColor4sv(v)

def glColor4ub(red, green, blue, alpha):
    """glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)"""
    return _gl.glColor4ub(red, green, blue, alpha)

def glColor4ubv(v):
    """glColor4ubv(GLubyte const * v)"""
    return _gl.glColor4ubv(v)

def glColor4ui(red, green, blue, alpha):
    """glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha)"""
    return _gl.glColor4ui(red, green, blue, alpha)

def glColor4uiv(v):
    """glColor4uiv(GLuint const * v)"""
    return _gl.glColor4uiv(v)

def glColor4us(red, green, blue, alpha):
    """glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha)"""
    return _gl.glColor4us(red, green, blue, alpha)

def glColor4usv(v):
    """glColor4usv(GLushort const * v)"""
    return _gl.glColor4usv(v)

def glColorMask(red, green, blue, alpha):
    """glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)"""
    return _gl.glColorMask(red, green, blue, alpha)

def glColorMaterial(face, mode):
    """glColorMaterial(GLenum face, GLenum mode)"""
    return _gl.glColorMaterial(face, mode)

def glColorPointer(size, type, stride, pointer):
    """glColorPointer(GLint size, GLenum type, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glColorPointer(size, type, stride, pointer)

def glColorSubTable(target, start, count, format, type, data):
    """glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, GLvoid const * data)"""
    return _gl.glColorSubTable(target, start, count, format, type, data)

def glColorTable(target, internalformat, width, format, type, table):
    """glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid const * table)"""
    return _gl.glColorTable(target, internalformat, width, format, type, table)

def glColorTableParameterfv(target, pname, params):
    """glColorTableParameterfv(GLenum target, GLenum pname, GLfloat const * params)"""
    return _gl.glColorTableParameterfv(target, pname, params)

def glColorTableParameteriv(target, pname, params):
    """glColorTableParameteriv(GLenum target, GLenum pname, GLint const * params)"""
    return _gl.glColorTableParameteriv(target, pname, params)

def glConvolutionFilter1D(target, internalformat, width, format, type, image):
    """glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, GLvoid const * image)"""
    return _gl.glConvolutionFilter1D(target, internalformat, width, format, type, image)

def glConvolutionFilter2D(target, internalformat, width, height, format, type, image):
    """glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid const * image)"""
    return _gl.glConvolutionFilter2D(target, internalformat, width, height, format, type, image)

def glConvolutionParameterf(target, pname, params):
    """glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params)"""
    return _gl.glConvolutionParameterf(target, pname, params)

def glConvolutionParameterfv(target, pname, params):
    """glConvolutionParameterfv(GLenum target, GLenum pname, GLfloat const * params)"""
    return _gl.glConvolutionParameterfv(target, pname, params)

def glConvolutionParameteri(target, pname, params):
    """glConvolutionParameteri(GLenum target, GLenum pname, GLint params)"""
    return _gl.glConvolutionParameteri(target, pname, params)

def glConvolutionParameteriv(target, pname, params):
    """glConvolutionParameteriv(GLenum target, GLenum pname, GLint const * params)"""
    return _gl.glConvolutionParameteriv(target, pname, params)

def glCopyColorSubTable(target, start, x, y, width):
    """glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)"""
    return _gl.glCopyColorSubTable(target, start, x, y, width)

def glCopyColorTable(target, internalformat, x, y, width):
    """glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)"""
    return _gl.glCopyColorTable(target, internalformat, x, y, width)

def glCopyConvolutionFilter1D(target, internalformat, x, y, width):
    """glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)"""
    return _gl.glCopyConvolutionFilter1D(target, internalformat, x, y, width)

def glCopyConvolutionFilter2D(target, internalformat, x, y, width, height):
    """glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)"""
    return _gl.glCopyConvolutionFilter2D(target, internalformat, x, y, width, height)

def glCopyPixels(x, y, width, height, type):
    """glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)"""
    return _gl.glCopyPixels(x, y, width, height, type)

def glCopyTexImage1D(target, level, internalformat, x, y, width, border):
    """glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)"""
    return _gl.glCopyTexImage1D(target, level, internalformat, x, y, width, border)

def glCopyTexImage2D(target, level, internalformat, x, y, width, height, border):
    """glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)"""
    return _gl.glCopyTexImage2D(target, level, internalformat, x, y, width, height, border)

def glCopyTexSubImage1D(target, level, xoffset, x, y, width):
    """glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)"""
    return _gl.glCopyTexSubImage1D(target, level, xoffset, x, y, width)

def glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height):
    """glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)"""
    return _gl.glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height)

def glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height):
    """glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)"""
    return _gl.glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height)

def glCullFace(mode):
    """glCullFace(GLenum mode)"""
    return _gl.glCullFace(mode)

def glDeleteLists(list, range):
    """glDeleteLists(GLuint list, GLsizei range)"""
    return _gl.glDeleteLists(list, range)

def glDeleteTextures(n, textures):
    """glDeleteTextures(GLsizei n, GLuint const * textures)"""
    return _gl.glDeleteTextures(n, textures)

def glDepthFunc(func):
    """glDepthFunc(GLenum func)"""
    return _gl.glDepthFunc(func)

def glDepthMask(flag):
    """glDepthMask(GLboolean flag)"""
    return _gl.glDepthMask(flag)

def glDepthRange(zNear, zFar):
    """glDepthRange(GLclampd zNear, GLclampd zFar)"""
    return _gl.glDepthRange(zNear, zFar)

def glDisable(cap):
    """glDisable(GLenum cap)"""
    return _gl.glDisable(cap)

def glDisableClientState(array):
    """glDisableClientState(GLenum array)"""
    return _gl.glDisableClientState(array)

def glDrawArrays(mode, first, count):
    """glDrawArrays(GLenum mode, GLint first, GLsizei count)"""
    return _gl.glDrawArrays(mode, first, count)

def glDrawBuffer(mode):
    """glDrawBuffer(GLenum mode)"""
    return _gl.glDrawBuffer(mode)

def glDrawElements(mode, count, type, indices):
    """glDrawElements(GLenum mode, GLsizei count, GLenum type, GLvoid const * indices)"""
    return _gl.glDrawElements(mode, count, type, indices)

def glDrawPixels(width, height, format, type, pixels):
    """glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid const * pixels)"""
    return _gl.glDrawPixels(width, height, format, type, pixels)

def glDrawRangeElements(mode, start, end, count, type, indices):
    """glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid const * indices)"""
    return _gl.glDrawRangeElements(mode, start, end, count, type, indices)

def glEdgeFlag(flag):
    """glEdgeFlag(GLboolean flag)"""
    return _gl.glEdgeFlag(flag)

def glEdgeFlagPointer(stride, pointer):
    """glEdgeFlagPointer(GLsizei stride, GLvoid const * pointer)"""
    return _gl.glEdgeFlagPointer(stride, pointer)

def glEdgeFlagv(flag):
    """glEdgeFlagv(GLboolean const * flag)"""
    return _gl.glEdgeFlagv(flag)

def glEnable(cap):
    """glEnable(GLenum cap)"""
    return _gl.glEnable(cap)

def glEnableClientState(array):
    """glEnableClientState(GLenum array)"""
    return _gl.glEnableClientState(array)

def glEnd():
    """glEnd()"""
    return _gl.glEnd()

def glEndList():
    """glEndList()"""
    return _gl.glEndList()

def glEvalCoord1d(u):
    """glEvalCoord1d(GLdouble u)"""
    return _gl.glEvalCoord1d(u)

def glEvalCoord1dv(u):
    """glEvalCoord1dv(GLdouble const * u)"""
    return _gl.glEvalCoord1dv(u)

def glEvalCoord1f(u):
    """glEvalCoord1f(GLfloat u)"""
    return _gl.glEvalCoord1f(u)

def glEvalCoord1fv(u):
    """glEvalCoord1fv(GLfloat const * u)"""
    return _gl.glEvalCoord1fv(u)

def glEvalCoord2d(u, v):
    """glEvalCoord2d(GLdouble u, GLdouble v)"""
    return _gl.glEvalCoord2d(u, v)

def glEvalCoord2dv(u):
    """glEvalCoord2dv(GLdouble const * u)"""
    return _gl.glEvalCoord2dv(u)

def glEvalCoord2f(u, v):
    """glEvalCoord2f(GLfloat u, GLfloat v)"""
    return _gl.glEvalCoord2f(u, v)

def glEvalCoord2fv(u):
    """glEvalCoord2fv(GLfloat const * u)"""
    return _gl.glEvalCoord2fv(u)

def glEvalMesh1(mode, i1, i2):
    """glEvalMesh1(GLenum mode, GLint i1, GLint i2)"""
    return _gl.glEvalMesh1(mode, i1, i2)

def glEvalMesh2(mode, i1, i2, j1, j2):
    """glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)"""
    return _gl.glEvalMesh2(mode, i1, i2, j1, j2)

def glEvalPoint1(i):
    """glEvalPoint1(GLint i)"""
    return _gl.glEvalPoint1(i)

def glEvalPoint2(i, j):
    """glEvalPoint2(GLint i, GLint j)"""
    return _gl.glEvalPoint2(i, j)

def glFeedbackBuffer(size, type, buffer):
    """glFeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer)"""
    return _gl.glFeedbackBuffer(size, type, buffer)

def glFinish():
    """glFinish()"""
    return _gl.glFinish()

def glFlush():
    """glFlush()"""
    return _gl.glFlush()

def glFogf(pname, param):
    """glFogf(GLenum pname, GLfloat param)"""
    return _gl.glFogf(pname, param)

def glFogfv(pname, params):
    """glFogfv(GLenum pname, GLfloat const * params)"""
    return _gl.glFogfv(pname, params)

def glFogi(pname, param):
    """glFogi(GLenum pname, GLint param)"""
    return _gl.glFogi(pname, param)

def glFogiv(pname, params):
    """glFogiv(GLenum pname, GLint const * params)"""
    return _gl.glFogiv(pname, params)

def glFrontFace(mode):
    """glFrontFace(GLenum mode)"""
    return _gl.glFrontFace(mode)

def glFrustum(left, right, bottom, top, zNear, zFar):
    """glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)"""
    return _gl.glFrustum(left, right, bottom, top, zNear, zFar)

def glGenLists(range):
    """glGenLists(GLsizei range) -> GLuint"""
    return _gl.glGenLists(range)

def glGenTextures(n, textures):
    """glGenTextures(GLsizei n, GLuint * textures)"""
    return _gl.glGenTextures(n, textures)

def glGetBooleanv(pname, params):
    """glGetBooleanv(GLenum pname, GLboolean * params)"""
    return _gl.glGetBooleanv(pname, params)

def glGetClipPlane(plane, equation):
    """glGetClipPlane(GLenum plane, GLdouble * equation)"""
    return _gl.glGetClipPlane(plane, equation)

def glGetColorTable(target, format, type, table):
    """glGetColorTable(GLenum target, GLenum format, GLenum type, GLvoid * table)"""
    return _gl.glGetColorTable(target, format, type, table)

def glGetColorTableParameterfv(target, pname, params):
    """glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat * params)"""
    return _gl.glGetColorTableParameterfv(target, pname, params)

def glGetColorTableParameteriv(target, pname, params):
    """glGetColorTableParameteriv(GLenum target, GLenum pname, GLint * params)"""
    return _gl.glGetColorTableParameteriv(target, pname, params)

def glGetConvolutionFilter(target, format, type, image):
    """glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, GLvoid * image)"""
    return _gl.glGetConvolutionFilter(target, format, type, image)

def glGetConvolutionParameterfv(target, pname, params):
    """glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat * params)"""
    return _gl.glGetConvolutionParameterfv(target, pname, params)

def glGetConvolutionParameteriv(target, pname, params):
    """glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint * params)"""
    return _gl.glGetConvolutionParameteriv(target, pname, params)

def glGetDoublev(pname, params):
    """glGetDoublev(GLenum pname, GLdouble * params)"""
    return _gl.glGetDoublev(pname, params)

def glGetError():
    """glGetError() -> GLenum"""
    return _gl.glGetError()

def glGetFloatv(pname, params):
    """glGetFloatv(GLenum pname, GLfloat * params)"""
    return _gl.glGetFloatv(pname, params)

def glGetHistogram(target, reset, format, type, values):
    """glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values)"""
    return _gl.glGetHistogram(target, reset, format, type, values)

def glGetHistogramParameterfv(target, pname, params):
    """glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat * params)"""
    return _gl.glGetHistogramParameterfv(target, pname, params)

def glGetHistogramParameteriv(target, pname, params):
    """glGetHistogramParameteriv(GLenum target, GLenum pname, GLint * params)"""
    return _gl.glGetHistogramParameteriv(target, pname, params)

def glGetIntegerv(pname, params):
    """glGetIntegerv(GLenum pname, GLint * params)"""
    return _gl.glGetIntegerv(pname, params)

def glGetLightfv(light, pname, params):
    """glGetLightfv(GLenum light, GLenum pname, GLfloat * params)"""
    return _gl.glGetLightfv(light, pname, params)

def glGetLightiv(light, pname, params):
    """glGetLightiv(GLenum light, GLenum pname, GLint * params)"""
    return _gl.glGetLightiv(light, pname, params)

def glGetMapdv(target, query, v):
    """glGetMapdv(GLenum target, GLenum query, GLdouble * v)"""
    return _gl.glGetMapdv(target, query, v)

def glGetMapfv(target, query, v):
    """glGetMapfv(GLenum target, GLenum query, GLfloat * v)"""
    return _gl.glGetMapfv(target, query, v)

def glGetMapiv(target, query, v):
    """glGetMapiv(GLenum target, GLenum query, GLint * v)"""
    return _gl.glGetMapiv(target, query, v)

def glGetMaterialfv(face, pname, params):
    """glGetMaterialfv(GLenum face, GLenum pname, GLfloat * params)"""
    return _gl.glGetMaterialfv(face, pname, params)

def glGetMaterialiv(face, pname, params):
    """glGetMaterialiv(GLenum face, GLenum pname, GLint * params)"""
    return _gl.glGetMaterialiv(face, pname, params)

def glGetMinmax(target, reset, format, type, values):
    """glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid * values)"""
    return _gl.glGetMinmax(target, reset, format, type, values)

def glGetMinmaxParameterfv(target, pname, params):
    """glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat * params)"""
    return _gl.glGetMinmaxParameterfv(target, pname, params)

def glGetMinmaxParameteriv(target, pname, params):
    """glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint * params)"""
    return _gl.glGetMinmaxParameteriv(target, pname, params)

def glGetPixelMapfv(map, values):
    """glGetPixelMapfv(GLenum map, GLfloat * values)"""
    return _gl.glGetPixelMapfv(map, values)

def glGetPixelMapuiv(map, values):
    """glGetPixelMapuiv(GLenum map, GLuint * values)"""
    return _gl.glGetPixelMapuiv(map, values)

def glGetPixelMapusv(map, values):
    """glGetPixelMapusv(GLenum map, GLushort * values)"""
    return _gl.glGetPixelMapusv(map, values)

def glGetPointerv(pname, params):
    """glGetPointerv(GLenum pname, GLvoid ** params)"""
    return _gl.glGetPointerv(pname, params)

def glGetPolygonStipple(mask):
    """glGetPolygonStipple(GLubyte * mask)"""
    return _gl.glGetPolygonStipple(mask)

def glGetSeparableFilter(target, format, type, row, column, span):
    """glGetSeparableFilter(GLenum target, GLenum format, GLenum type, GLvoid * row, GLvoid * column, GLvoid * span)"""
    return _gl.glGetSeparableFilter(target, format, type, row, column, span)

def glGetString(name):
    """glGetString(GLenum name) -> GLubyte const *"""
    return _gl.glGetString(name)

def glGetTexEnvfv(target, pname, params):
    """glGetTexEnvfv(GLenum target, GLenum pname, GLfloat * params)"""
    return _gl.glGetTexEnvfv(target, pname, params)

def glGetTexEnviv(target, pname, params):
    """glGetTexEnviv(GLenum target, GLenum pname, GLint * params)"""
    return _gl.glGetTexEnviv(target, pname, params)

def glGetTexGendv(coord, pname, params):
    """glGetTexGendv(GLenum coord, GLenum pname, GLdouble * params)"""
    return _gl.glGetTexGendv(coord, pname, params)

def glGetTexGenfv(coord, pname, params):
    """glGetTexGenfv(GLenum coord, GLenum pname, GLfloat * params)"""
    return _gl.glGetTexGenfv(coord, pname, params)

def glGetTexGeniv(coord, pname, params):
    """glGetTexGeniv(GLenum coord, GLenum pname, GLint * params)"""
    return _gl.glGetTexGeniv(coord, pname, params)

def glGetTexImage(target, level, format, type, pixels):
    """glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid * pixels)"""
    return _gl.glGetTexImage(target, level, format, type, pixels)

def glGetTexLevelParameterfv(target, level, pname, params):
    """glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params)"""
    return _gl.glGetTexLevelParameterfv(target, level, pname, params)

def glGetTexLevelParameteriv(target, level, pname, params):
    """glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params)"""
    return _gl.glGetTexLevelParameteriv(target, level, pname, params)

def glGetTexParameterfv(target, pname, params):
    """glGetTexParameterfv(GLenum target, GLenum pname, GLfloat * params)"""
    return _gl.glGetTexParameterfv(target, pname, params)

def glGetTexParameteriv(target, pname, params):
    """glGetTexParameteriv(GLenum target, GLenum pname, GLint * params)"""
    return _gl.glGetTexParameteriv(target, pname, params)

def glHint(target, mode):
    """glHint(GLenum target, GLenum mode)"""
    return _gl.glHint(target, mode)

def glHistogram(target, width, internalformat, sink):
    """glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)"""
    return _gl.glHistogram(target, width, internalformat, sink)

def glIndexMask(mask):
    """glIndexMask(GLuint mask)"""
    return _gl.glIndexMask(mask)

def glIndexPointer(type, stride, pointer):
    """glIndexPointer(GLenum type, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glIndexPointer(type, stride, pointer)

def glIndexd(c):
    """glIndexd(GLdouble c)"""
    return _gl.glIndexd(c)

def glIndexdv(c):
    """glIndexdv(GLdouble const * c)"""
    return _gl.glIndexdv(c)

def glIndexf(c):
    """glIndexf(GLfloat c)"""
    return _gl.glIndexf(c)

def glIndexfv(c):
    """glIndexfv(GLfloat const * c)"""
    return _gl.glIndexfv(c)

def glIndexi(c):
    """glIndexi(GLint c)"""
    return _gl.glIndexi(c)

def glIndexiv(c):
    """glIndexiv(GLint const * c)"""
    return _gl.glIndexiv(c)

def glIndexs(c):
    """glIndexs(GLshort c)"""
    return _gl.glIndexs(c)

def glIndexsv(c):
    """glIndexsv(GLshort const * c)"""
    return _gl.glIndexsv(c)

def glIndexub(c):
    """glIndexub(GLubyte c)"""
    return _gl.glIndexub(c)

def glIndexubv(c):
    """glIndexubv(GLubyte const * c)"""
    return _gl.glIndexubv(c)

def glInitNames():
    """glInitNames()"""
    return _gl.glInitNames()

def glInterleavedArrays(format, stride, pointer):
    """glInterleavedArrays(GLenum format, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glInterleavedArrays(format, stride, pointer)

def glIsEnabled(cap):
    """glIsEnabled(GLenum cap) -> GLboolean"""
    return _gl.glIsEnabled(cap)

def glIsList(list):
    """glIsList(GLuint list) -> GLboolean"""
    return _gl.glIsList(list)

def glIsTexture(texture):
    """glIsTexture(GLuint texture) -> GLboolean"""
    return _gl.glIsTexture(texture)

def glLightModelf(pname, param):
    """glLightModelf(GLenum pname, GLfloat param)"""
    return _gl.glLightModelf(pname, param)

def glLightModelfv(pname, params):
    """glLightModelfv(GLenum pname, GLfloat const * params)"""
    return _gl.glLightModelfv(pname, params)

def glLightModeli(pname, param):
    """glLightModeli(GLenum pname, GLint param)"""
    return _gl.glLightModeli(pname, param)

def glLightModeliv(pname, params):
    """glLightModeliv(GLenum pname, GLint const * params)"""
    return _gl.glLightModeliv(pname, params)

def glLightf(light, pname, param):
    """glLightf(GLenum light, GLenum pname, GLfloat param)"""
    return _gl.glLightf(light, pname, param)

def glLightfv(light, pname, params):
    """glLightfv(GLenum light, GLenum pname, GLfloat const * params)"""
    return _gl.glLightfv(light, pname, params)

def glLighti(light, pname, param):
    """glLighti(GLenum light, GLenum pname, GLint param)"""
    return _gl.glLighti(light, pname, param)

def glLightiv(light, pname, params):
    """glLightiv(GLenum light, GLenum pname, GLint const * params)"""
    return _gl.glLightiv(light, pname, params)

def glLineStipple(factor, pattern):
    """glLineStipple(GLint factor, GLushort pattern)"""
    return _gl.glLineStipple(factor, pattern)

def glLineWidth(width):
    """glLineWidth(GLfloat width)"""
    return _gl.glLineWidth(width)

def glListBase(base):
    """glListBase(GLuint base)"""
    return _gl.glListBase(base)

def glLoadIdentity():
    """glLoadIdentity()"""
    return _gl.glLoadIdentity()

def glLoadMatrixd(m):
    """glLoadMatrixd(GLdouble const * m)"""
    return _gl.glLoadMatrixd(m)

def glLoadMatrixf(m):
    """glLoadMatrixf(GLfloat const * m)"""
    return _gl.glLoadMatrixf(m)

def glLoadName(name):
    """glLoadName(GLuint name)"""
    return _gl.glLoadName(name)

def glLogicOp(opcode):
    """glLogicOp(GLenum opcode)"""
    return _gl.glLogicOp(opcode)

def glMap1d(target, u1, u2, stride, order, points):
    """glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, GLdouble const * points)"""
    return _gl.glMap1d(target, u1, u2, stride, order, points)

def glMap1f(target, u1, u2, stride, order, points):
    """glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, GLfloat const * points)"""
    return _gl.glMap1f(target, u1, u2, stride, order, points)

def glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points):
    """glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble const * points)"""
    return _gl.glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)

def glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points):
    """glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat const * points)"""
    return _gl.glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points)

def glMapGrid1d(un, u1, u2):
    """glMapGrid1d(GLint un, GLdouble u1, GLdouble u2)"""
    return _gl.glMapGrid1d(un, u1, u2)

def glMapGrid1f(un, u1, u2):
    """glMapGrid1f(GLint un, GLfloat u1, GLfloat u2)"""
    return _gl.glMapGrid1f(un, u1, u2)

def glMapGrid2d(un, u1, u2, vn, v1, v2):
    """glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)"""
    return _gl.glMapGrid2d(un, u1, u2, vn, v1, v2)

def glMapGrid2f(un, u1, u2, vn, v1, v2):
    """glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)"""
    return _gl.glMapGrid2f(un, u1, u2, vn, v1, v2)

def glMaterialf(face, pname, param):
    """glMaterialf(GLenum face, GLenum pname, GLfloat param)"""
    return _gl.glMaterialf(face, pname, param)

def glMaterialfv(face, pname, params):
    """glMaterialfv(GLenum face, GLenum pname, GLfloat const * params)"""
    return _gl.glMaterialfv(face, pname, params)

def glMateriali(face, pname, param):
    """glMateriali(GLenum face, GLenum pname, GLint param)"""
    return _gl.glMateriali(face, pname, param)

def glMaterialiv(face, pname, params):
    """glMaterialiv(GLenum face, GLenum pname, GLint const * params)"""
    return _gl.glMaterialiv(face, pname, params)

def glMatrixMode(mode):
    """glMatrixMode(GLenum mode)"""
    return _gl.glMatrixMode(mode)

def glMinmax(target, internalformat, sink):
    """glMinmax(GLenum target, GLenum internalformat, GLboolean sink)"""
    return _gl.glMinmax(target, internalformat, sink)

def glMultMatrixd(m):
    """glMultMatrixd(GLdouble const * m)"""
    return _gl.glMultMatrixd(m)

def glMultMatrixf(m):
    """glMultMatrixf(GLfloat const * m)"""
    return _gl.glMultMatrixf(m)

def glNewList(list, mode):
    """glNewList(GLuint list, GLenum mode)"""
    return _gl.glNewList(list, mode)

def glNormal3b(nx, ny, nz):
    """glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz)"""
    return _gl.glNormal3b(nx, ny, nz)

def glNormal3bv(v):
    """glNormal3bv(GLbyte const * v)"""
    return _gl.glNormal3bv(v)

def glNormal3d(nx, ny, nz):
    """glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz)"""
    return _gl.glNormal3d(nx, ny, nz)

def glNormal3dv(v):
    """glNormal3dv(GLdouble const * v)"""
    return _gl.glNormal3dv(v)

def glNormal3f(nx, ny, nz):
    """glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz)"""
    return _gl.glNormal3f(nx, ny, nz)

def glNormal3fv(v):
    """glNormal3fv(GLfloat const * v)"""
    return _gl.glNormal3fv(v)

def glNormal3i(nx, ny, nz):
    """glNormal3i(GLint nx, GLint ny, GLint nz)"""
    return _gl.glNormal3i(nx, ny, nz)

def glNormal3iv(v):
    """glNormal3iv(GLint const * v)"""
    return _gl.glNormal3iv(v)

def glNormal3s(nx, ny, nz):
    """glNormal3s(GLshort nx, GLshort ny, GLshort nz)"""
    return _gl.glNormal3s(nx, ny, nz)

def glNormal3sv(v):
    """glNormal3sv(GLshort const * v)"""
    return _gl.glNormal3sv(v)

def glNormalPointer(type, stride, pointer):
    """glNormalPointer(GLenum type, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glNormalPointer(type, stride, pointer)

def glOrtho(left, right, bottom, top, zNear, zFar):
    """glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)"""
    return _gl.glOrtho(left, right, bottom, top, zNear, zFar)

def glPassThrough(token):
    """glPassThrough(GLfloat token)"""
    return _gl.glPassThrough(token)

def glPixelMapfv(map, mapsize, values):
    """glPixelMapfv(GLenum map, GLint mapsize, GLfloat const * values)"""
    return _gl.glPixelMapfv(map, mapsize, values)

def glPixelMapuiv(map, mapsize, values):
    """glPixelMapuiv(GLenum map, GLint mapsize, GLuint const * values)"""
    return _gl.glPixelMapuiv(map, mapsize, values)

def glPixelMapusv(map, mapsize, values):
    """glPixelMapusv(GLenum map, GLint mapsize, GLushort const * values)"""
    return _gl.glPixelMapusv(map, mapsize, values)

def glPixelStoref(pname, param):
    """glPixelStoref(GLenum pname, GLfloat param)"""
    return _gl.glPixelStoref(pname, param)

def glPixelStorei(pname, param):
    """glPixelStorei(GLenum pname, GLint param)"""
    return _gl.glPixelStorei(pname, param)

def glPixelTransferf(pname, param):
    """glPixelTransferf(GLenum pname, GLfloat param)"""
    return _gl.glPixelTransferf(pname, param)

def glPixelTransferi(pname, param):
    """glPixelTransferi(GLenum pname, GLint param)"""
    return _gl.glPixelTransferi(pname, param)

def glPixelZoom(xfactor, yfactor):
    """glPixelZoom(GLfloat xfactor, GLfloat yfactor)"""
    return _gl.glPixelZoom(xfactor, yfactor)

def glPointSize(size):
    """glPointSize(GLfloat size)"""
    return _gl.glPointSize(size)

def glPolygonMode(face, mode):
    """glPolygonMode(GLenum face, GLenum mode)"""
    return _gl.glPolygonMode(face, mode)

def glPolygonOffset(factor, units):
    """glPolygonOffset(GLfloat factor, GLfloat units)"""
    return _gl.glPolygonOffset(factor, units)

def glPolygonStipple(mask):
    """glPolygonStipple(GLubyte const * mask)"""
    return _gl.glPolygonStipple(mask)

def glPopAttrib():
    """glPopAttrib()"""
    return _gl.glPopAttrib()

def glPopClientAttrib():
    """glPopClientAttrib()"""
    return _gl.glPopClientAttrib()

def glPopMatrix():
    """glPopMatrix()"""
    return _gl.glPopMatrix()

def glPopName():
    """glPopName()"""
    return _gl.glPopName()

def glPrioritizeTextures(n, textures, priorities):
    """glPrioritizeTextures(GLsizei n, GLuint const * textures, GLclampf const * priorities)"""
    return _gl.glPrioritizeTextures(n, textures, priorities)

def glPushAttrib(mask):
    """glPushAttrib(GLbitfield mask)"""
    return _gl.glPushAttrib(mask)

def glPushClientAttrib(mask):
    """glPushClientAttrib(GLbitfield mask)"""
    return _gl.glPushClientAttrib(mask)

def glPushMatrix():
    """glPushMatrix()"""
    return _gl.glPushMatrix()

def glPushName(name):
    """glPushName(GLuint name)"""
    return _gl.glPushName(name)

def glRasterPos2d(x, y):
    """glRasterPos2d(GLdouble x, GLdouble y)"""
    return _gl.glRasterPos2d(x, y)

def glRasterPos2dv(v):
    """glRasterPos2dv(GLdouble const * v)"""
    return _gl.glRasterPos2dv(v)

def glRasterPos2f(x, y):
    """glRasterPos2f(GLfloat x, GLfloat y)"""
    return _gl.glRasterPos2f(x, y)

def glRasterPos2fv(v):
    """glRasterPos2fv(GLfloat const * v)"""
    return _gl.glRasterPos2fv(v)

def glRasterPos2i(x, y):
    """glRasterPos2i(GLint x, GLint y)"""
    return _gl.glRasterPos2i(x, y)

def glRasterPos2iv(v):
    """glRasterPos2iv(GLint const * v)"""
    return _gl.glRasterPos2iv(v)

def glRasterPos2s(x, y):
    """glRasterPos2s(GLshort x, GLshort y)"""
    return _gl.glRasterPos2s(x, y)

def glRasterPos2sv(v):
    """glRasterPos2sv(GLshort const * v)"""
    return _gl.glRasterPos2sv(v)

def glRasterPos3d(x, y, z):
    """glRasterPos3d(GLdouble x, GLdouble y, GLdouble z)"""
    return _gl.glRasterPos3d(x, y, z)

def glRasterPos3dv(v):
    """glRasterPos3dv(GLdouble const * v)"""
    return _gl.glRasterPos3dv(v)

def glRasterPos3f(x, y, z):
    """glRasterPos3f(GLfloat x, GLfloat y, GLfloat z)"""
    return _gl.glRasterPos3f(x, y, z)

def glRasterPos3fv(v):
    """glRasterPos3fv(GLfloat const * v)"""
    return _gl.glRasterPos3fv(v)

def glRasterPos3i(x, y, z):
    """glRasterPos3i(GLint x, GLint y, GLint z)"""
    return _gl.glRasterPos3i(x, y, z)

def glRasterPos3iv(v):
    """glRasterPos3iv(GLint const * v)"""
    return _gl.glRasterPos3iv(v)

def glRasterPos3s(x, y, z):
    """glRasterPos3s(GLshort x, GLshort y, GLshort z)"""
    return _gl.glRasterPos3s(x, y, z)

def glRasterPos3sv(v):
    """glRasterPos3sv(GLshort const * v)"""
    return _gl.glRasterPos3sv(v)

def glRasterPos4d(x, y, z, w):
    """glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w)"""
    return _gl.glRasterPos4d(x, y, z, w)

def glRasterPos4dv(v):
    """glRasterPos4dv(GLdouble const * v)"""
    return _gl.glRasterPos4dv(v)

def glRasterPos4f(x, y, z, w):
    """glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w)"""
    return _gl.glRasterPos4f(x, y, z, w)

def glRasterPos4fv(v):
    """glRasterPos4fv(GLfloat const * v)"""
    return _gl.glRasterPos4fv(v)

def glRasterPos4i(x, y, z, w):
    """glRasterPos4i(GLint x, GLint y, GLint z, GLint w)"""
    return _gl.glRasterPos4i(x, y, z, w)

def glRasterPos4iv(v):
    """glRasterPos4iv(GLint const * v)"""
    return _gl.glRasterPos4iv(v)

def glRasterPos4s(x, y, z, w):
    """glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w)"""
    return _gl.glRasterPos4s(x, y, z, w)

def glRasterPos4sv(v):
    """glRasterPos4sv(GLshort const * v)"""
    return _gl.glRasterPos4sv(v)

def glReadBuffer(mode):
    """glReadBuffer(GLenum mode)"""
    return _gl.glReadBuffer(mode)

def glReadPixels(x, y, width, height, format, type, pixels):
    """glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid * pixels)"""
    return _gl.glReadPixels(x, y, width, height, format, type, pixels)

def glRectd(x1, y1, x2, y2):
    """glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)"""
    return _gl.glRectd(x1, y1, x2, y2)

def glRectdv(v1, v2):
    """glRectdv(GLdouble const * v1, GLdouble const * v2)"""
    return _gl.glRectdv(v1, v2)

def glRectf(x1, y1, x2, y2):
    """glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)"""
    return _gl.glRectf(x1, y1, x2, y2)

def glRectfv(v1, v2):
    """glRectfv(GLfloat const * v1, GLfloat const * v2)"""
    return _gl.glRectfv(v1, v2)

def glRecti(x1, y1, x2, y2):
    """glRecti(GLint x1, GLint y1, GLint x2, GLint y2)"""
    return _gl.glRecti(x1, y1, x2, y2)

def glRectiv(v1, v2):
    """glRectiv(GLint const * v1, GLint const * v2)"""
    return _gl.glRectiv(v1, v2)

def glRects(x1, y1, x2, y2):
    """glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2)"""
    return _gl.glRects(x1, y1, x2, y2)

def glRectsv(v1, v2):
    """glRectsv(GLshort const * v1, GLshort const * v2)"""
    return _gl.glRectsv(v1, v2)

def glRenderMode(mode):
    """glRenderMode(GLenum mode) -> GLint"""
    return _gl.glRenderMode(mode)

def glResetHistogram(target):
    """glResetHistogram(GLenum target)"""
    return _gl.glResetHistogram(target)

def glResetMinmax(target):
    """glResetMinmax(GLenum target)"""
    return _gl.glResetMinmax(target)

def glRotated(angle, x, y, z):
    """glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)"""
    return _gl.glRotated(angle, x, y, z)

def glRotatef(angle, x, y, z):
    """glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)"""
    return _gl.glRotatef(angle, x, y, z)

def glScaled(x, y, z):
    """glScaled(GLdouble x, GLdouble y, GLdouble z)"""
    return _gl.glScaled(x, y, z)

def glScalef(x, y, z):
    """glScalef(GLfloat x, GLfloat y, GLfloat z)"""
    return _gl.glScalef(x, y, z)

def glScissor(x, y, width, height):
    """glScissor(GLint x, GLint y, GLsizei width, GLsizei height)"""
    return _gl.glScissor(x, y, width, height)

def glSelectBuffer(size, buffer):
    """glSelectBuffer(GLsizei size, GLuint * buffer)"""
    return _gl.glSelectBuffer(size, buffer)

def glSeparableFilter2D(target, internalformat, width, height, format, type, row, column):
    """glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid const * row, GLvoid const * column)"""
    return _gl.glSeparableFilter2D(target, internalformat, width, height, format, type, row, column)

def glShadeModel(mode):
    """glShadeModel(GLenum mode)"""
    return _gl.glShadeModel(mode)

def glStencilFunc(func, ref, mask):
    """glStencilFunc(GLenum func, GLint ref, GLuint mask)"""
    return _gl.glStencilFunc(func, ref, mask)

def glStencilMask(mask):
    """glStencilMask(GLuint mask)"""
    return _gl.glStencilMask(mask)

def glStencilOp(fail, zfail, zpass):
    """glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)"""
    return _gl.glStencilOp(fail, zfail, zpass)

def glTexCoord1d(s):
    """glTexCoord1d(GLdouble s)"""
    return _gl.glTexCoord1d(s)

def glTexCoord1dv(v):
    """glTexCoord1dv(GLdouble const * v)"""
    return _gl.glTexCoord1dv(v)

def glTexCoord1f(s):
    """glTexCoord1f(GLfloat s)"""
    return _gl.glTexCoord1f(s)

def glTexCoord1fv(v):
    """glTexCoord1fv(GLfloat const * v)"""
    return _gl.glTexCoord1fv(v)

def glTexCoord1i(s):
    """glTexCoord1i(GLint s)"""
    return _gl.glTexCoord1i(s)

def glTexCoord1iv(v):
    """glTexCoord1iv(GLint const * v)"""
    return _gl.glTexCoord1iv(v)

def glTexCoord1s(s):
    """glTexCoord1s(GLshort s)"""
    return _gl.glTexCoord1s(s)

def glTexCoord1sv(v):
    """glTexCoord1sv(GLshort const * v)"""
    return _gl.glTexCoord1sv(v)

def glTexCoord2d(s, t):
    """glTexCoord2d(GLdouble s, GLdouble t)"""
    return _gl.glTexCoord2d(s, t)

def glTexCoord2dv(v):
    """glTexCoord2dv(GLdouble const * v)"""
    return _gl.glTexCoord2dv(v)

def glTexCoord2f(s, t):
    """glTexCoord2f(GLfloat s, GLfloat t)"""
    return _gl.glTexCoord2f(s, t)

def glTexCoord2fv(v):
    """glTexCoord2fv(GLfloat const * v)"""
    return _gl.glTexCoord2fv(v)

def glTexCoord2i(s, t):
    """glTexCoord2i(GLint s, GLint t)"""
    return _gl.glTexCoord2i(s, t)

def glTexCoord2iv(v):
    """glTexCoord2iv(GLint const * v)"""
    return _gl.glTexCoord2iv(v)

def glTexCoord2s(s, t):
    """glTexCoord2s(GLshort s, GLshort t)"""
    return _gl.glTexCoord2s(s, t)

def glTexCoord2sv(v):
    """glTexCoord2sv(GLshort const * v)"""
    return _gl.glTexCoord2sv(v)

def glTexCoord3d(s, t, r):
    """glTexCoord3d(GLdouble s, GLdouble t, GLdouble r)"""
    return _gl.glTexCoord3d(s, t, r)

def glTexCoord3dv(v):
    """glTexCoord3dv(GLdouble const * v)"""
    return _gl.glTexCoord3dv(v)

def glTexCoord3f(s, t, r):
    """glTexCoord3f(GLfloat s, GLfloat t, GLfloat r)"""
    return _gl.glTexCoord3f(s, t, r)

def glTexCoord3fv(v):
    """glTexCoord3fv(GLfloat const * v)"""
    return _gl.glTexCoord3fv(v)

def glTexCoord3i(s, t, r):
    """glTexCoord3i(GLint s, GLint t, GLint r)"""
    return _gl.glTexCoord3i(s, t, r)

def glTexCoord3iv(v):
    """glTexCoord3iv(GLint const * v)"""
    return _gl.glTexCoord3iv(v)

def glTexCoord3s(s, t, r):
    """glTexCoord3s(GLshort s, GLshort t, GLshort r)"""
    return _gl.glTexCoord3s(s, t, r)

def glTexCoord3sv(v):
    """glTexCoord3sv(GLshort const * v)"""
    return _gl.glTexCoord3sv(v)

def glTexCoord4d(s, t, r, q):
    """glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q)"""
    return _gl.glTexCoord4d(s, t, r, q)

def glTexCoord4dv(v):
    """glTexCoord4dv(GLdouble const * v)"""
    return _gl.glTexCoord4dv(v)

def glTexCoord4f(s, t, r, q):
    """glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q)"""
    return _gl.glTexCoord4f(s, t, r, q)

def glTexCoord4fv(v):
    """glTexCoord4fv(GLfloat const * v)"""
    return _gl.glTexCoord4fv(v)

def glTexCoord4i(s, t, r, q):
    """glTexCoord4i(GLint s, GLint t, GLint r, GLint q)"""
    return _gl.glTexCoord4i(s, t, r, q)

def glTexCoord4iv(v):
    """glTexCoord4iv(GLint const * v)"""
    return _gl.glTexCoord4iv(v)

def glTexCoord4s(s, t, r, q):
    """glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q)"""
    return _gl.glTexCoord4s(s, t, r, q)

def glTexCoord4sv(v):
    """glTexCoord4sv(GLshort const * v)"""
    return _gl.glTexCoord4sv(v)

def glTexCoordPointer(size, type, stride, pointer):
    """glTexCoordPointer(GLint size, GLenum type, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glTexCoordPointer(size, type, stride, pointer)

def glTexEnvf(target, pname, param):
    """glTexEnvf(GLenum target, GLenum pname, GLfloat param)"""
    return _gl.glTexEnvf(target, pname, param)

def glTexEnvfv(target, pname, params):
    """glTexEnvfv(GLenum target, GLenum pname, GLfloat const * params)"""
    return _gl.glTexEnvfv(target, pname, params)

def glTexEnvi(target, pname, param):
    """glTexEnvi(GLenum target, GLenum pname, GLint param)"""
    return _gl.glTexEnvi(target, pname, param)

def glTexEnviv(target, pname, params):
    """glTexEnviv(GLenum target, GLenum pname, GLint const * params)"""
    return _gl.glTexEnviv(target, pname, params)

def glTexGend(coord, pname, param):
    """glTexGend(GLenum coord, GLenum pname, GLdouble param)"""
    return _gl.glTexGend(coord, pname, param)

def glTexGendv(coord, pname, params):
    """glTexGendv(GLenum coord, GLenum pname, GLdouble const * params)"""
    return _gl.glTexGendv(coord, pname, params)

def glTexGenf(coord, pname, param):
    """glTexGenf(GLenum coord, GLenum pname, GLfloat param)"""
    return _gl.glTexGenf(coord, pname, param)

def glTexGenfv(coord, pname, params):
    """glTexGenfv(GLenum coord, GLenum pname, GLfloat const * params)"""
    return _gl.glTexGenfv(coord, pname, params)

def glTexGeni(coord, pname, param):
    """glTexGeni(GLenum coord, GLenum pname, GLint param)"""
    return _gl.glTexGeni(coord, pname, param)

def glTexGeniv(coord, pname, params):
    """glTexGeniv(GLenum coord, GLenum pname, GLint const * params)"""
    return _gl.glTexGeniv(coord, pname, params)

def glTexImage1D(target, level, internalformat, width, border, format, type, pixels):
    """glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLvoid const * pixels)"""
    return _gl.glTexImage1D(target, level, internalformat, width, border, format, type, pixels)

def glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels):
    """glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLvoid const * pixels)"""
    return _gl.glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels)

def glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels):
    """glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLvoid const * pixels)"""
    return _gl.glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels)

def glTexParameterf(target, pname, param):
    """glTexParameterf(GLenum target, GLenum pname, GLfloat param)"""
    return _gl.glTexParameterf(target, pname, param)

def glTexParameterfv(target, pname, params):
    """glTexParameterfv(GLenum target, GLenum pname, GLfloat const * params)"""
    return _gl.glTexParameterfv(target, pname, params)

def glTexParameteri(target, pname, param):
    """glTexParameteri(GLenum target, GLenum pname, GLint param)"""
    return _gl.glTexParameteri(target, pname, param)

def glTexParameteriv(target, pname, params):
    """glTexParameteriv(GLenum target, GLenum pname, GLint const * params)"""
    return _gl.glTexParameteriv(target, pname, params)

def glTexSubImage1D(target, level, xoffset, width, format, type, pixels):
    """glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLvoid const * pixels)"""
    return _gl.glTexSubImage1D(target, level, xoffset, width, format, type, pixels)

def glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels):
    """glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid const * pixels)"""
    return _gl.glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels)

def glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels):
    """glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid const * pixels)"""
    return _gl.glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels)

def glTranslated(x, y, z):
    """glTranslated(GLdouble x, GLdouble y, GLdouble z)"""
    return _gl.glTranslated(x, y, z)

def glTranslatef(x, y, z):
    """glTranslatef(GLfloat x, GLfloat y, GLfloat z)"""
    return _gl.glTranslatef(x, y, z)

def glVertex2d(x, y):
    """glVertex2d(GLdouble x, GLdouble y)"""
    return _gl.glVertex2d(x, y)

def glVertex2dv(v):
    """glVertex2dv(GLdouble const * v)"""
    return _gl.glVertex2dv(v)

def glVertex2f(x, y):
    """glVertex2f(GLfloat x, GLfloat y)"""
    return _gl.glVertex2f(x, y)

def glVertex2fv(v):
    """glVertex2fv(GLfloat const * v)"""
    return _gl.glVertex2fv(v)

def glVertex2i(x, y):
    """glVertex2i(GLint x, GLint y)"""
    return _gl.glVertex2i(x, y)

def glVertex2iv(v):
    """glVertex2iv(GLint const * v)"""
    return _gl.glVertex2iv(v)

def glVertex2s(x, y):
    """glVertex2s(GLshort x, GLshort y)"""
    return _gl.glVertex2s(x, y)

def glVertex2sv(v):
    """glVertex2sv(GLshort const * v)"""
    return _gl.glVertex2sv(v)

def glVertex3d(x, y, z):
    """glVertex3d(GLdouble x, GLdouble y, GLdouble z)"""
    return _gl.glVertex3d(x, y, z)

def glVertex3dv(v):
    """glVertex3dv(GLdouble const * v)"""
    return _gl.glVertex3dv(v)

def glVertex3f(x, y, z):
    """glVertex3f(GLfloat x, GLfloat y, GLfloat z)"""
    return _gl.glVertex3f(x, y, z)

def glVertex3fv(v):
    """glVertex3fv(GLfloat const * v)"""
    return _gl.glVertex3fv(v)

def glVertex3i(x, y, z):
    """glVertex3i(GLint x, GLint y, GLint z)"""
    return _gl.glVertex3i(x, y, z)

def glVertex3iv(v):
    """glVertex3iv(GLint const * v)"""
    return _gl.glVertex3iv(v)

def glVertex3s(x, y, z):
    """glVertex3s(GLshort x, GLshort y, GLshort z)"""
    return _gl.glVertex3s(x, y, z)

def glVertex3sv(v):
    """glVertex3sv(GLshort const * v)"""
    return _gl.glVertex3sv(v)

def glVertex4d(x, y, z, w):
    """glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w)"""
    return _gl.glVertex4d(x, y, z, w)

def glVertex4dv(v):
    """glVertex4dv(GLdouble const * v)"""
    return _gl.glVertex4dv(v)

def glVertex4f(x, y, z, w):
    """glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w)"""
    return _gl.glVertex4f(x, y, z, w)

def glVertex4fv(v):
    """glVertex4fv(GLfloat const * v)"""
    return _gl.glVertex4fv(v)

def glVertex4i(x, y, z, w):
    """glVertex4i(GLint x, GLint y, GLint z, GLint w)"""
    return _gl.glVertex4i(x, y, z, w)

def glVertex4iv(v):
    """glVertex4iv(GLint const * v)"""
    return _gl.glVertex4iv(v)

def glVertex4s(x, y, z, w):
    """glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w)"""
    return _gl.glVertex4s(x, y, z, w)

def glVertex4sv(v):
    """glVertex4sv(GLshort const * v)"""
    return _gl.glVertex4sv(v)

def glVertexPointer(size, type, stride, pointer):
    """glVertexPointer(GLint size, GLenum type, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glVertexPointer(size, type, stride, pointer)

def glViewport(x, y, width, height):
    """glViewport(GLint x, GLint y, GLsizei width, GLsizei height)"""
    return _gl.glViewport(x, y, width, height)

def glSampleCoverage(value, invert):
    """glSampleCoverage(GLclampf value, GLboolean invert)"""
    return _gl.glSampleCoverage(value, invert)

def glLoadTransposeMatrixf(m):
    """glLoadTransposeMatrixf(GLfloat const * m)"""
    return _gl.glLoadTransposeMatrixf(m)

def glLoadTransposeMatrixd(m):
    """glLoadTransposeMatrixd(GLdouble const * m)"""
    return _gl.glLoadTransposeMatrixd(m)

def glMultTransposeMatrixf(m):
    """glMultTransposeMatrixf(GLfloat const * m)"""
    return _gl.glMultTransposeMatrixf(m)

def glMultTransposeMatrixd(m):
    """glMultTransposeMatrixd(GLdouble const * m)"""
    return _gl.glMultTransposeMatrixd(m)

def glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data):
    """glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLvoid const * data)"""
    return _gl.glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data)

def glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data):
    """glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLvoid const * data)"""
    return _gl.glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data)

def glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data):
    """glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLvoid const * data)"""
    return _gl.glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data)

def glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data):
    """glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLvoid const * data)"""
    return _gl.glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data)

def glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data):
    """glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLvoid const * data)"""
    return _gl.glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data)

def glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data):
    """glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLvoid const * data)"""
    return _gl.glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data)

def glGetCompressedTexImage(target, lod, img):
    """glGetCompressedTexImage(GLenum target, GLint lod, GLvoid * img)"""
    return _gl.glGetCompressedTexImage(target, lod, img)

def glActiveTexture(texture):
    """glActiveTexture(GLenum texture)"""
    return _gl.glActiveTexture(texture)

def glClientActiveTexture(texture):
    """glClientActiveTexture(GLenum texture)"""
    return _gl.glClientActiveTexture(texture)

def glMultiTexCoord1d(target, s):
    """glMultiTexCoord1d(GLenum target, GLdouble s)"""
    return _gl.glMultiTexCoord1d(target, s)

def glMultiTexCoord1dv(target, v):
    """glMultiTexCoord1dv(GLenum target, GLdouble const * v)"""
    return _gl.glMultiTexCoord1dv(target, v)

def glMultiTexCoord1f(target, s):
    """glMultiTexCoord1f(GLenum target, GLfloat s)"""
    return _gl.glMultiTexCoord1f(target, s)

def glMultiTexCoord1fv(target, v):
    """glMultiTexCoord1fv(GLenum target, GLfloat const * v)"""
    return _gl.glMultiTexCoord1fv(target, v)

def glMultiTexCoord1i(target, s):
    """glMultiTexCoord1i(GLenum target, GLint s)"""
    return _gl.glMultiTexCoord1i(target, s)

def glMultiTexCoord1iv(target, v):
    """glMultiTexCoord1iv(GLenum target, GLint const * v)"""
    return _gl.glMultiTexCoord1iv(target, v)

def glMultiTexCoord1s(target, s):
    """glMultiTexCoord1s(GLenum target, GLshort s)"""
    return _gl.glMultiTexCoord1s(target, s)

def glMultiTexCoord1sv(target, v):
    """glMultiTexCoord1sv(GLenum target, GLshort const * v)"""
    return _gl.glMultiTexCoord1sv(target, v)

def glMultiTexCoord2d(target, s, t):
    """glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t)"""
    return _gl.glMultiTexCoord2d(target, s, t)

def glMultiTexCoord2dv(target, v):
    """glMultiTexCoord2dv(GLenum target, GLdouble const * v)"""
    return _gl.glMultiTexCoord2dv(target, v)

def glMultiTexCoord2f(target, s, t):
    """glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t)"""
    return _gl.glMultiTexCoord2f(target, s, t)

def glMultiTexCoord2fv(target, v):
    """glMultiTexCoord2fv(GLenum target, GLfloat const * v)"""
    return _gl.glMultiTexCoord2fv(target, v)

def glMultiTexCoord2i(target, s, t):
    """glMultiTexCoord2i(GLenum target, GLint s, GLint t)"""
    return _gl.glMultiTexCoord2i(target, s, t)

def glMultiTexCoord2iv(target, v):
    """glMultiTexCoord2iv(GLenum target, GLint const * v)"""
    return _gl.glMultiTexCoord2iv(target, v)

def glMultiTexCoord2s(target, s, t):
    """glMultiTexCoord2s(GLenum target, GLshort s, GLshort t)"""
    return _gl.glMultiTexCoord2s(target, s, t)

def glMultiTexCoord2sv(target, v):
    """glMultiTexCoord2sv(GLenum target, GLshort const * v)"""
    return _gl.glMultiTexCoord2sv(target, v)

def glMultiTexCoord3d(target, s, t, r):
    """glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r)"""
    return _gl.glMultiTexCoord3d(target, s, t, r)

def glMultiTexCoord3dv(target, v):
    """glMultiTexCoord3dv(GLenum target, GLdouble const * v)"""
    return _gl.glMultiTexCoord3dv(target, v)

def glMultiTexCoord3f(target, s, t, r):
    """glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r)"""
    return _gl.glMultiTexCoord3f(target, s, t, r)

def glMultiTexCoord3fv(target, v):
    """glMultiTexCoord3fv(GLenum target, GLfloat const * v)"""
    return _gl.glMultiTexCoord3fv(target, v)

def glMultiTexCoord3i(target, s, t, r):
    """glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r)"""
    return _gl.glMultiTexCoord3i(target, s, t, r)

def glMultiTexCoord3iv(target, v):
    """glMultiTexCoord3iv(GLenum target, GLint const * v)"""
    return _gl.glMultiTexCoord3iv(target, v)

def glMultiTexCoord3s(target, s, t, r):
    """glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r)"""
    return _gl.glMultiTexCoord3s(target, s, t, r)

def glMultiTexCoord3sv(target, v):
    """glMultiTexCoord3sv(GLenum target, GLshort const * v)"""
    return _gl.glMultiTexCoord3sv(target, v)

def glMultiTexCoord4d(target, s, t, r, q):
    """glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)"""
    return _gl.glMultiTexCoord4d(target, s, t, r, q)

def glMultiTexCoord4dv(target, v):
    """glMultiTexCoord4dv(GLenum target, GLdouble const * v)"""
    return _gl.glMultiTexCoord4dv(target, v)

def glMultiTexCoord4f(target, s, t, r, q):
    """glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)"""
    return _gl.glMultiTexCoord4f(target, s, t, r, q)

def glMultiTexCoord4fv(target, v):
    """glMultiTexCoord4fv(GLenum target, GLfloat const * v)"""
    return _gl.glMultiTexCoord4fv(target, v)

def glMultiTexCoord4i(target, s, t, r, q):
    """glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q)"""
    return _gl.glMultiTexCoord4i(target, s, t, r, q)

def glMultiTexCoord4iv(target, v):
    """glMultiTexCoord4iv(GLenum target, GLint const * v)"""
    return _gl.glMultiTexCoord4iv(target, v)

def glMultiTexCoord4s(target, s, t, r, q):
    """glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)"""
    return _gl.glMultiTexCoord4s(target, s, t, r, q)

def glMultiTexCoord4sv(target, v):
    """glMultiTexCoord4sv(GLenum target, GLshort const * v)"""
    return _gl.glMultiTexCoord4sv(target, v)

def glFogCoordf(coord):
    """glFogCoordf(GLfloat coord)"""
    return _gl.glFogCoordf(coord)

def glFogCoordfv(coord):
    """glFogCoordfv(GLfloat const * coord)"""
    return _gl.glFogCoordfv(coord)

def glFogCoordd(coord):
    """glFogCoordd(GLdouble coord)"""
    return _gl.glFogCoordd(coord)

def glFogCoorddv(coord):
    """glFogCoorddv(GLdouble const * coord)"""
    return _gl.glFogCoorddv(coord)

def glFogCoordPointer(type, stride, pointer):
    """glFogCoordPointer(GLenum type, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glFogCoordPointer(type, stride, pointer)

def glSecondaryColor3b(red, green, blue):
    """glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue)"""
    return _gl.glSecondaryColor3b(red, green, blue)

def glSecondaryColor3bv(v):
    """glSecondaryColor3bv(GLbyte const * v)"""
    return _gl.glSecondaryColor3bv(v)

def glSecondaryColor3d(red, green, blue):
    """glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue)"""
    return _gl.glSecondaryColor3d(red, green, blue)

def glSecondaryColor3dv(v):
    """glSecondaryColor3dv(GLdouble const * v)"""
    return _gl.glSecondaryColor3dv(v)

def glSecondaryColor3f(red, green, blue):
    """glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue)"""
    return _gl.glSecondaryColor3f(red, green, blue)

def glSecondaryColor3fv(v):
    """glSecondaryColor3fv(GLfloat const * v)"""
    return _gl.glSecondaryColor3fv(v)

def glSecondaryColor3i(red, green, blue):
    """glSecondaryColor3i(GLint red, GLint green, GLint blue)"""
    return _gl.glSecondaryColor3i(red, green, blue)

def glSecondaryColor3iv(v):
    """glSecondaryColor3iv(GLint const * v)"""
    return _gl.glSecondaryColor3iv(v)

def glSecondaryColor3s(red, green, blue):
    """glSecondaryColor3s(GLshort red, GLshort green, GLshort blue)"""
    return _gl.glSecondaryColor3s(red, green, blue)

def glSecondaryColor3sv(v):
    """glSecondaryColor3sv(GLshort const * v)"""
    return _gl.glSecondaryColor3sv(v)

def glSecondaryColor3ub(red, green, blue):
    """glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue)"""
    return _gl.glSecondaryColor3ub(red, green, blue)

def glSecondaryColor3ubv(v):
    """glSecondaryColor3ubv(GLubyte const * v)"""
    return _gl.glSecondaryColor3ubv(v)

def glSecondaryColor3ui(red, green, blue):
    """glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue)"""
    return _gl.glSecondaryColor3ui(red, green, blue)

def glSecondaryColor3uiv(v):
    """glSecondaryColor3uiv(GLuint const * v)"""
    return _gl.glSecondaryColor3uiv(v)

def glSecondaryColor3us(red, green, blue):
    """glSecondaryColor3us(GLushort red, GLushort green, GLushort blue)"""
    return _gl.glSecondaryColor3us(red, green, blue)

def glSecondaryColor3usv(v):
    """glSecondaryColor3usv(GLushort const * v)"""
    return _gl.glSecondaryColor3usv(v)

def glSecondaryColorPointer(size, type, stride, pointer):
    """glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glSecondaryColorPointer(size, type, stride, pointer)

def glPointParameterf(pname, param):
    """glPointParameterf(GLenum pname, GLfloat param)"""
    return _gl.glPointParameterf(pname, param)

def glPointParameterfv(pname, params):
    """glPointParameterfv(GLenum pname, GLfloat const * params)"""
    return _gl.glPointParameterfv(pname, params)

def glPointParameteri(pname, param):
    """glPointParameteri(GLenum pname, GLint param)"""
    return _gl.glPointParameteri(pname, param)

def glPointParameteriv(pname, params):
    """glPointParameteriv(GLenum pname, GLint const * params)"""
    return _gl.glPointParameteriv(pname, params)

def glBlendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha):
    """glBlendFuncSeparate(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)"""
    return _gl.glBlendFuncSeparate(srcRGB, dstRGB, srcAlpha, dstAlpha)

def glMultiDrawArrays(mode, first, count, primcount):
    """glMultiDrawArrays(GLenum mode, GLint const * first, GLsizei const * count, GLsizei primcount)"""
    return _gl.glMultiDrawArrays(mode, first, count, primcount)

def glMultiDrawElements(mode, count, type, indices, primcount):
    """glMultiDrawElements(GLenum mode, GLsizei const * count, GLenum type, GLvoid const *const * indices, GLsizei primcount)"""
    return _gl.glMultiDrawElements(mode, count, type, indices, primcount)

def glWindowPos2d(x, y):
    """glWindowPos2d(GLdouble x, GLdouble y)"""
    return _gl.glWindowPos2d(x, y)

def glWindowPos2dv(v):
    """glWindowPos2dv(GLdouble const * v)"""
    return _gl.glWindowPos2dv(v)

def glWindowPos2f(x, y):
    """glWindowPos2f(GLfloat x, GLfloat y)"""
    return _gl.glWindowPos2f(x, y)

def glWindowPos2fv(v):
    """glWindowPos2fv(GLfloat const * v)"""
    return _gl.glWindowPos2fv(v)

def glWindowPos2i(x, y):
    """glWindowPos2i(GLint x, GLint y)"""
    return _gl.glWindowPos2i(x, y)

def glWindowPos2iv(v):
    """glWindowPos2iv(GLint const * v)"""
    return _gl.glWindowPos2iv(v)

def glWindowPos2s(x, y):
    """glWindowPos2s(GLshort x, GLshort y)"""
    return _gl.glWindowPos2s(x, y)

def glWindowPos2sv(v):
    """glWindowPos2sv(GLshort const * v)"""
    return _gl.glWindowPos2sv(v)

def glWindowPos3d(x, y, z):
    """glWindowPos3d(GLdouble x, GLdouble y, GLdouble z)"""
    return _gl.glWindowPos3d(x, y, z)

def glWindowPos3dv(v):
    """glWindowPos3dv(GLdouble const * v)"""
    return _gl.glWindowPos3dv(v)

def glWindowPos3f(x, y, z):
    """glWindowPos3f(GLfloat x, GLfloat y, GLfloat z)"""
    return _gl.glWindowPos3f(x, y, z)

def glWindowPos3fv(v):
    """glWindowPos3fv(GLfloat const * v)"""
    return _gl.glWindowPos3fv(v)

def glWindowPos3i(x, y, z):
    """glWindowPos3i(GLint x, GLint y, GLint z)"""
    return _gl.glWindowPos3i(x, y, z)

def glWindowPos3iv(v):
    """glWindowPos3iv(GLint const * v)"""
    return _gl.glWindowPos3iv(v)

def glWindowPos3s(x, y, z):
    """glWindowPos3s(GLshort x, GLshort y, GLshort z)"""
    return _gl.glWindowPos3s(x, y, z)

def glWindowPos3sv(v):
    """glWindowPos3sv(GLshort const * v)"""
    return _gl.glWindowPos3sv(v)

def glGenQueries(n, ids):
    """glGenQueries(GLsizei n, GLuint * ids)"""
    return _gl.glGenQueries(n, ids)

def glDeleteQueries(n, ids):
    """glDeleteQueries(GLsizei n, GLuint const * ids)"""
    return _gl.glDeleteQueries(n, ids)

def glIsQuery(id):
    """glIsQuery(GLuint id) -> GLboolean"""
    return _gl.glIsQuery(id)

def glBeginQuery(target, id):
    """glBeginQuery(GLenum target, GLuint id)"""
    return _gl.glBeginQuery(target, id)

def glEndQuery(target):
    """glEndQuery(GLenum target)"""
    return _gl.glEndQuery(target)

def glGetQueryiv(target, pname, params):
    """glGetQueryiv(GLenum target, GLenum pname, GLint * params)"""
    return _gl.glGetQueryiv(target, pname, params)

def glGetQueryObjectiv(id, pname, params):
    """glGetQueryObjectiv(GLuint id, GLenum pname, GLint * params)"""
    return _gl.glGetQueryObjectiv(id, pname, params)

def glGetQueryObjectuiv(id, pname, params):
    """glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params)"""
    return _gl.glGetQueryObjectuiv(id, pname, params)

def glBindBuffer(target, buffer):
    """glBindBuffer(GLenum target, GLuint buffer)"""
    return _gl.glBindBuffer(target, buffer)

def glDeleteBuffers(n, buffers):
    """glDeleteBuffers(GLsizei n, GLuint const * buffers)"""
    return _gl.glDeleteBuffers(n, buffers)

def glGenBuffers(n, buffers):
    """glGenBuffers(GLsizei n, GLuint * buffers)"""
    return _gl.glGenBuffers(n, buffers)

def glIsBuffer(buffer):
    """glIsBuffer(GLuint buffer) -> GLboolean"""
    return _gl.glIsBuffer(buffer)

def glBufferData(target, size, data, usage):
    """glBufferData(GLenum target, GLsizeiptr size, GLvoid const * data, GLenum usage)"""
    return _gl.glBufferData(target, size, data, usage)

def glBufferSubData(target, offset, size, data):
    """glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid const * data)"""
    return _gl.glBufferSubData(target, offset, size, data)

def glGetBufferSubData(target, offset, size, data):
    """glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid * data)"""
    return _gl.glGetBufferSubData(target, offset, size, data)

def glMapBuffer(target, access):
    """glMapBuffer(GLenum target, GLenum access) -> GLvoid *"""
    return _gl.glMapBuffer(target, access)

def glUnmapBuffer(target):
    """glUnmapBuffer(GLenum target) -> GLboolean"""
    return _gl.glUnmapBuffer(target)

def glGetBufferParameteriv(target, pname, params):
    """glGetBufferParameteriv(GLenum target, GLenum pname, GLint * params)"""
    return _gl.glGetBufferParameteriv(target, pname, params)

def glGetBufferPointerv(target, pname, params):
    """glGetBufferPointerv(GLenum target, GLenum pname, GLvoid ** params)"""
    return _gl.glGetBufferPointerv(target, pname, params)

def glDrawBuffers(n, bufs):
    """glDrawBuffers(GLsizei n, GLenum const * bufs)"""
    return _gl.glDrawBuffers(n, bufs)

def glVertexAttrib1d(index, x):
    """glVertexAttrib1d(GLuint index, GLdouble x)"""
    return _gl.glVertexAttrib1d(index, x)

def glVertexAttrib1dv(index, v):
    """glVertexAttrib1dv(GLuint index, GLdouble const * v)"""
    return _gl.glVertexAttrib1dv(index, v)

def glVertexAttrib1f(index, x):
    """glVertexAttrib1f(GLuint index, GLfloat x)"""
    return _gl.glVertexAttrib1f(index, x)

def glVertexAttrib1fv(index, v):
    """glVertexAttrib1fv(GLuint index, GLfloat const * v)"""
    return _gl.glVertexAttrib1fv(index, v)

def glVertexAttrib1s(index, x):
    """glVertexAttrib1s(GLuint index, GLshort x)"""
    return _gl.glVertexAttrib1s(index, x)

def glVertexAttrib1sv(index, v):
    """glVertexAttrib1sv(GLuint index, GLshort const * v)"""
    return _gl.glVertexAttrib1sv(index, v)

def glVertexAttrib2d(index, x, y):
    """glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y)"""
    return _gl.glVertexAttrib2d(index, x, y)

def glVertexAttrib2dv(index, v):
    """glVertexAttrib2dv(GLuint index, GLdouble const * v)"""
    return _gl.glVertexAttrib2dv(index, v)

def glVertexAttrib2f(index, x, y):
    """glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y)"""
    return _gl.glVertexAttrib2f(index, x, y)

def glVertexAttrib2fv(index, v):
    """glVertexAttrib2fv(GLuint index, GLfloat const * v)"""
    return _gl.glVertexAttrib2fv(index, v)

def glVertexAttrib2s(index, x, y):
    """glVertexAttrib2s(GLuint index, GLshort x, GLshort y)"""
    return _gl.glVertexAttrib2s(index, x, y)

def glVertexAttrib2sv(index, v):
    """glVertexAttrib2sv(GLuint index, GLshort const * v)"""
    return _gl.glVertexAttrib2sv(index, v)

def glVertexAttrib3d(index, x, y, z):
    """glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z)"""
    return _gl.glVertexAttrib3d(index, x, y, z)

def glVertexAttrib3dv(index, v):
    """glVertexAttrib3dv(GLuint index, GLdouble const * v)"""
    return _gl.glVertexAttrib3dv(index, v)

def glVertexAttrib3f(index, x, y, z):
    """glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z)"""
    return _gl.glVertexAttrib3f(index, x, y, z)

def glVertexAttrib3fv(index, v):
    """glVertexAttrib3fv(GLuint index, GLfloat const * v)"""
    return _gl.glVertexAttrib3fv(index, v)

def glVertexAttrib3s(index, x, y, z):
    """glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z)"""
    return _gl.glVertexAttrib3s(index, x, y, z)

def glVertexAttrib3sv(index, v):
    """glVertexAttrib3sv(GLuint index, GLshort const * v)"""
    return _gl.glVertexAttrib3sv(index, v)

def glVertexAttrib4Nbv(index, v):
    """glVertexAttrib4Nbv(GLuint index, GLbyte const * v)"""
    return _gl.glVertexAttrib4Nbv(index, v)

def glVertexAttrib4Niv(index, v):
    """glVertexAttrib4Niv(GLuint index, GLint const * v)"""
    return _gl.glVertexAttrib4Niv(index, v)

def glVertexAttrib4Nsv(index, v):
    """glVertexAttrib4Nsv(GLuint index, GLshort const * v)"""
    return _gl.glVertexAttrib4Nsv(index, v)

def glVertexAttrib4Nub(index, x, y, z, w):
    """glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)"""
    return _gl.glVertexAttrib4Nub(index, x, y, z, w)

def glVertexAttrib4Nubv(index, v):
    """glVertexAttrib4Nubv(GLuint index, GLubyte const * v)"""
    return _gl.glVertexAttrib4Nubv(index, v)

def glVertexAttrib4Nuiv(index, v):
    """glVertexAttrib4Nuiv(GLuint index, GLuint const * v)"""
    return _gl.glVertexAttrib4Nuiv(index, v)

def glVertexAttrib4Nusv(index, v):
    """glVertexAttrib4Nusv(GLuint index, GLushort const * v)"""
    return _gl.glVertexAttrib4Nusv(index, v)

def glVertexAttrib4bv(index, v):
    """glVertexAttrib4bv(GLuint index, GLbyte const * v)"""
    return _gl.glVertexAttrib4bv(index, v)

def glVertexAttrib4d(index, x, y, z, w):
    """glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)"""
    return _gl.glVertexAttrib4d(index, x, y, z, w)

def glVertexAttrib4dv(index, v):
    """glVertexAttrib4dv(GLuint index, GLdouble const * v)"""
    return _gl.glVertexAttrib4dv(index, v)

def glVertexAttrib4f(index, x, y, z, w):
    """glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)"""
    return _gl.glVertexAttrib4f(index, x, y, z, w)

def glVertexAttrib4fv(index, v):
    """glVertexAttrib4fv(GLuint index, GLfloat const * v)"""
    return _gl.glVertexAttrib4fv(index, v)

def glVertexAttrib4iv(index, v):
    """glVertexAttrib4iv(GLuint index, GLint const * v)"""
    return _gl.glVertexAttrib4iv(index, v)

def glVertexAttrib4s(index, x, y, z, w):
    """glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)"""
    return _gl.glVertexAttrib4s(index, x, y, z, w)

def glVertexAttrib4sv(index, v):
    """glVertexAttrib4sv(GLuint index, GLshort const * v)"""
    return _gl.glVertexAttrib4sv(index, v)

def glVertexAttrib4ubv(index, v):
    """glVertexAttrib4ubv(GLuint index, GLubyte const * v)"""
    return _gl.glVertexAttrib4ubv(index, v)

def glVertexAttrib4uiv(index, v):
    """glVertexAttrib4uiv(GLuint index, GLuint const * v)"""
    return _gl.glVertexAttrib4uiv(index, v)

def glVertexAttrib4usv(index, v):
    """glVertexAttrib4usv(GLuint index, GLushort const * v)"""
    return _gl.glVertexAttrib4usv(index, v)

def glVertexAttribPointer(index, size, type, normalized, stride, pointer):
    """glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLvoid const * pointer)"""
    return _gl.glVertexAttribPointer(index, size, type, normalized, stride, pointer)

def glEnableVertexAttribArray(index):
    """glEnableVertexAttribArray(GLuint index)"""
    return _gl.glEnableVertexAttribArray(index)

def glDisableVertexAttribArray(index):
    """glDisableVertexAttribArray(GLuint index)"""
    return _gl.glDisableVertexAttribArray(index)

def glGetVertexAttribdv(index, pname, params):
    """glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble * params)"""
    return _gl.glGetVertexAttribdv(index, pname, params)

def glGetVertexAttribfv(index, pname, params):
    """glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params)"""
    return _gl.glGetVertexAttribfv(index, pname, params)

def glGetVertexAttribiv(index, pname, params):
    """glGetVertexAttribiv(GLuint index, GLenum pname, GLint * params)"""
    return _gl.glGetVertexAttribiv(index, pname, params)

def glGetVertexAttribPointerv(index, pname, pointer):
    """glGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid ** pointer)"""
    return _gl.glGetVertexAttribPointerv(index, pname, pointer)

def glDeleteShader(shader):
    """glDeleteShader(GLuint shader)"""
    return _gl.glDeleteShader(shader)

def glDetachShader(program, shader):
    """glDetachShader(GLuint program, GLuint shader)"""
    return _gl.glDetachShader(program, shader)

def glCreateShader(type):
    """glCreateShader(GLenum type) -> GLuint"""
    return _gl.glCreateShader(type)

def glShaderSource(shader, count, string, length):
    """glShaderSource(GLuint shader, GLsizei count, GLchar const *const * string, GLint const * length)"""
    return _gl.glShaderSource(shader, count, string, length)

def glCompileShader(shader):
    """glCompileShader(GLuint shader)"""
    return _gl.glCompileShader(shader)

def glCreateProgram():
    """glCreateProgram() -> GLuint"""
    return _gl.glCreateProgram()

def glAttachShader(program, shader):
    """glAttachShader(GLuint program, GLuint shader)"""
    return _gl.glAttachShader(program, shader)

def glLinkProgram(program):
    """glLinkProgram(GLuint program)"""
    return _gl.glLinkProgram(program)

def glUseProgram(program):
    """glUseProgram(GLuint program)"""
    return _gl.glUseProgram(program)

def glDeleteProgram(program):
    """glDeleteProgram(GLuint program)"""
    return _gl.glDeleteProgram(program)

def glValidateProgram(program):
    """glValidateProgram(GLuint program)"""
    return _gl.glValidateProgram(program)

def glUniform1f(location, v0):
    """glUniform1f(GLint location, GLfloat v0)"""
    return _gl.glUniform1f(location, v0)

def glUniform2f(location, v0, v1):
    """glUniform2f(GLint location, GLfloat v0, GLfloat v1)"""
    return _gl.glUniform2f(location, v0, v1)

def glUniform3f(location, v0, v1, v2):
    """glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)"""
    return _gl.glUniform3f(location, v0, v1, v2)

def glUniform4f(location, v0, v1, v2, v3):
    """glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)"""
    return _gl.glUniform4f(location, v0, v1, v2, v3)

def glUniform1i(location, v0):
    """glUniform1i(GLint location, GLint v0)"""
    return _gl.glUniform1i(location, v0)

def glUniform2i(location, v0, v1):
    """glUniform2i(GLint location, GLint v0, GLint v1)"""
    return _gl.glUniform2i(location, v0, v1)

def glUniform3i(location, v0, v1, v2):
    """glUniform3i(GLint location, GLint v0, GLint v1, GLint v2)"""
    return _gl.glUniform3i(location, v0, v1, v2)

def glUniform4i(location, v0, v1, v2, v3):
    """glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)"""
    return _gl.glUniform4i(location, v0, v1, v2, v3)

def glUniform1fv(location, count, value):
    """glUniform1fv(GLint location, GLsizei count, GLfloat const * value)"""
    return _gl.glUniform1fv(location, count, value)

def glUniform2fv(location, count, value):
    """glUniform2fv(GLint location, GLsizei count, GLfloat const * value)"""
    return _gl.glUniform2fv(location, count, value)

def glUniform3fv(location, count, value):
    """glUniform3fv(GLint location, GLsizei count, GLfloat const * value)"""
    return _gl.glUniform3fv(location, count, value)

def glUniform4fv(location, count, value):
    """glUniform4fv(GLint location, GLsizei count, GLfloat const * value)"""
    return _gl.glUniform4fv(location, count, value)

def glUniform1iv(location, count, value):
    """glUniform1iv(GLint location, GLsizei count, GLint const * value)"""
    return _gl.glUniform1iv(location, count, value)

def glUniform2iv(location, count, value):
    """glUniform2iv(GLint location, GLsizei count, GLint const * value)"""
    return _gl.glUniform2iv(location, count, value)

def glUniform3iv(location, count, value):
    """glUniform3iv(GLint location, GLsizei count, GLint const * value)"""
    return _gl.glUniform3iv(location, count, value)

def glUniform4iv(location, count, value):
    """glUniform4iv(GLint location, GLsizei count, GLint const * value)"""
    return _gl.glUniform4iv(location, count, value)

def glUniformMatrix2fv(location, count, transpose, value):
    """glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix2fv(location, count, transpose, value)

def glUniformMatrix3fv(location, count, transpose, value):
    """glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix3fv(location, count, transpose, value)

def glUniformMatrix4fv(location, count, transpose, value):
    """glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix4fv(location, count, transpose, value)

def glIsShader(shader):
    """glIsShader(GLuint shader) -> GLboolean"""
    return _gl.glIsShader(shader)

def glIsProgram(program):
    """glIsProgram(GLuint program) -> GLboolean"""
    return _gl.glIsProgram(program)

def glGetShaderiv(shader, pname, params):
    """glGetShaderiv(GLuint shader, GLenum pname, GLint * params)"""
    return _gl.glGetShaderiv(shader, pname, params)

def glGetProgramiv(program, pname, params):
    """glGetProgramiv(GLuint program, GLenum pname, GLint * params)"""
    return _gl.glGetProgramiv(program, pname, params)

def glGetAttachedShaders(program, maxCount, count, shaders):
    """glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders)"""
    return _gl.glGetAttachedShaders(program, maxCount, count, shaders)

def glGetShaderInfoLog(shader, bufSize, length, infoLog):
    """glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog)"""
    return _gl.glGetShaderInfoLog(shader, bufSize, length, infoLog)

def glGetProgramInfoLog(program, bufSize, length, infoLog):
    """glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog)"""
    return _gl.glGetProgramInfoLog(program, bufSize, length, infoLog)

def glGetUniformLocation(program, name):
    """glGetUniformLocation(GLuint program, GLchar const * name) -> GLint"""
    return _gl.glGetUniformLocation(program, name)

def glGetActiveUniform(program, index, bufSize, length, size, type, name):
    """glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name)"""
    return _gl.glGetActiveUniform(program, index, bufSize, length, size, type, name)

def glGetUniformfv(program, location, params):
    """glGetUniformfv(GLuint program, GLint location, GLfloat * params)"""
    return _gl.glGetUniformfv(program, location, params)

def glGetUniformiv(program, location, params):
    """glGetUniformiv(GLuint program, GLint location, GLint * params)"""
    return _gl.glGetUniformiv(program, location, params)

def glGetShaderSource(shader, bufSize, length, source):
    """glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source)"""
    return _gl.glGetShaderSource(shader, bufSize, length, source)

def glBindAttribLocation(program, index, name):
    """glBindAttribLocation(GLuint program, GLuint index, GLchar const * name)"""
    return _gl.glBindAttribLocation(program, index, name)

def glGetActiveAttrib(program, index, bufSize, length, size, type, name):
    """glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name)"""
    return _gl.glGetActiveAttrib(program, index, bufSize, length, size, type, name)

def glGetAttribLocation(program, name):
    """glGetAttribLocation(GLuint program, GLchar const * name) -> GLint"""
    return _gl.glGetAttribLocation(program, name)

def glStencilFuncSeparate(face, func, ref, mask):
    """glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask)"""
    return _gl.glStencilFuncSeparate(face, func, ref, mask)

def glStencilOpSeparate(face, fail, zfail, zpass):
    """glStencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)"""
    return _gl.glStencilOpSeparate(face, fail, zfail, zpass)

def glStencilMaskSeparate(face, mask):
    """glStencilMaskSeparate(GLenum face, GLuint mask)"""
    return _gl.glStencilMaskSeparate(face, mask)

def glUniformMatrix2x3fv(location, count, transpose, value):
    """glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix2x3fv(location, count, transpose, value)

def glUniformMatrix3x2fv(location, count, transpose, value):
    """glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix3x2fv(location, count, transpose, value)

def glUniformMatrix2x4fv(location, count, transpose, value):
    """glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix2x4fv(location, count, transpose, value)

def glUniformMatrix4x2fv(location, count, transpose, value):
    """glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix4x2fv(location, count, transpose, value)

def glUniformMatrix3x4fv(location, count, transpose, value):
    """glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix3x4fv(location, count, transpose, value)

def glUniformMatrix4x3fv(location, count, transpose, value):
    """glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloat const * value)"""
    return _gl.glUniformMatrix4x3fv(location, count, transpose, value)
# This file is compatible with both classic and new-style classes.


